<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Gallery Post Not Supported</title>
    <url>/2020/02/22/Gallery-Post-Not-Supported/</url>
    <content><![CDATA[<p>Theme <a href="//github.com/jinyaoMa/hexo-theme-mustom" target="_blank" rel="noopener">Mustom</a> does NOT SUPPORT variable <code>photos</code> in front-matter.</p>
<a id="more"></a>

<p>GALLERY POST NOT SUPPORTTED!!!</p>
<p><img src="//raw.githubusercontent.com/hexojs/hexo-theme-unit-test/master/source/assets/wallpaper-2572384.jpg" alt="Widescreen wallpaper" loading="lazy"><br><img src="//raw.githubusercontent.com/hexojs/hexo-theme-unit-test/master/source/assets/wallpaper-2311325.jpg" alt="Portrait photo" loading="lazy"><br><img src="//raw.githubusercontent.com/hexojs/hexo-theme-unit-test/master/source/assets/wallpaper-878514.jpg" alt="Dual widescreen wallpaper" loading="lazy"><br><img src="//placehold.it/350x150.jpg" alt="Small photo" loading="lazy"></p>
<p>This post contains 4 photos:</p>
<ul>
<li>Widescreen wallpaper</li>
<li>Portrait photo</li>
<li>Dual widescreen wallpaper</li>
<li>Small photo</li>
</ul>
<p>All photos should be displayed properly.</p>
<p><em>From <a href="//wallbase.cc" target="_blank" rel="noopener">Wallbase.cc</a></em></p>
<blockquote>
<p>Original Post from <a href="//github.com/hexojs/hexo-theme-unit-test" target="_blank" rel="noopener">Hexo Theme Unit Test</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP是什么？</title>
    <url>/2020/04/10/HTTP%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p>HTTP是客户端和服务端之间互动需要准守的其中一种协议。在日常上网过程中，用户通过浏览器浏览目标网站的操作，看起来就是进入目标网站的门户之后，想看哪里就点哪里，但是实际上客户端和服务端之间的数据互动都是通过一套标准来执行的。用旧时代的眼光来看就是网络节点两边统一使用了莫斯代码，所以两边之间的交流就没有了障碍。</p>
<a id="more"></a>

<p><strong>先来个更好的文章做参考：<a href="//www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">HTTP协议超级详解</a></strong></p>
<h1 id="HTTP-1-1"><a href="#HTTP-1-1" class="headerlink" title="HTTP/1.1"></a>HTTP/1.1</h1><p>HTTP属于TCP/IP中的“顶层”应用层，这说明HTTP的包装是数据出发前的第一步。在这里不谈TCP相关连接过程，但是HTTP请求/响应都是要在连接之后的事；想看的话，可以看<a href="//www.cnblogs.com/kaleidoscope/p/9701117.html" target="_blank" rel="noopener">TCP三次握手详解及释放连接过程</a>。基本上HTTP就是请求和响应的模式，在服务方想理你客户方的情况下，你想要什么，她都会回应你。</p>
<p>HTTP请求方法：</p>
<ul>
<li>GET，一般请求的数据都是不需要处理的数据</li>
<li>HEAD，获取metadata，打个比方就是电脑上文件右键属性</li>
<li>POST，一般请求的数据都是需要处理的数据</li>
<li>PUT，像数据库的INSERT</li>
<li>DELETE，像数据库的DELETE</li>
<li>PATCH，像数据库的UPDATE</li>
<li>还有TRACE、OPTIONS、CONNECT</li>
</ul>
<p>HTTP状态码：</p>
<ul>
<li>100及以上，普通的信息代码</li>
<li>200及以上，请求成功被处理</li>
<li>300及以上，请求被重定向了</li>
<li>400及以上，这是客户方的错</li>
<li>500及以上，这是服务方的错</li>
</ul>
<h2 id="HTTP请求-响应报文结构"><a href="#HTTP请求-响应报文结构" class="headerlink" title="HTTP请求/响应报文结构"></a>HTTP请求/响应报文结构</h2><p><img src="/gallery/http-request-format.png" alt="HTTP请求报文结构" loading="lazy"><em>Image from: <a href="//www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">HTTP协议超级详解</a></em></p>
<p><img src="/gallery/http-request-example.jpg" alt="HTTP请求报文例子" loading="lazy"><em>Image from: <a href="//www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">HTTP协议超级详解</a></em></p>
<p><img src="/gallery/http-response-format.png" alt="HTTP响应报文结构" loading="lazy"><em>Image from: <a href="//www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">HTTP协议超级详解</a></em></p>
<p><img src="/gallery/http-response-example.jpg" alt="HTTP响应报文例子" loading="lazy"><em>Image from: <a href="//www.cnblogs.com/an-wen/p/11180076.html" target="_blank" rel="noopener">HTTP协议超级详解</a></em></p>
<h2 id="比较HTTP-1-1和HTTP-2"><a href="#比较HTTP-1-1和HTTP-2" class="headerlink" title="比较HTTP/1.1和HTTP/2"></a>比较HTTP/1.1和HTTP/2</h2><ul>
<li>HTTP/2在一次TCP连接中可以同时发送多个请求，多行程减少了连接次数和响应的等待时间</li>
<li>HTTP/2压缩头部信息，包裹更小，运输更方便</li>
<li>HTTP/2使用二进制协议，不仅节省了不少分隔符和封箱胶带，还可以分成小份包装以数据流形式发送</li>
<li>HTTP/2允许服务端推送，一次请求把相关依赖的脚本也给客户端一起发来，很人性化</li>
</ul>
<h1 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h1><p>在HTTP包装外再来个SSL/TLS加密包装，HTTPS有以下特点：</p>
<ol>
<li>内容加密，传输过程中使用的密文</li>
<li>验证身份，找到对的服务端</li>
<li>保护数据完整性，防止传输过程中被动手脚</li>
</ol>
<p>基本上传输中的数据不易被动手脚。</p>
<p><strong><em>更多可以百度HTTP、HTTPS、TCP连接等。</em></strong></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Hexo!</title>
    <url>/2018/12/01/Hello-Hexo/</url>
    <content><![CDATA[<p>Welcome to <a href="//hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="//hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="//hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="//github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>

<p>More info: <a href="//hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>More info: <a href="//hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<p>More info: <a href="//hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>More info: <a href="//hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<h3 id="Generate-and-deploy"><a href="#Generate-and-deploy" class="headerlink" title="Generate and deploy"></a>Generate and deploy</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>

<h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean --debug</span><br><span class="line">$ hexo g --debug</span><br></pre></td></tr></table></figure>

<hr>
<blockquote>
<p>Editing of original generated post “Hello World”</p>
</blockquote>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Command</tag>
      </tags>
  </entry>
  <entry>
    <title>Helpful Links</title>
    <url>/2018/12/05/Helpful-Links/</url>
    <content><![CDATA[<p>Helpful Links</p>
<a id="more"></a>

<h3 id="Frameworkds"><a href="#Frameworkds" class="headerlink" title="Frameworkds"></a>Frameworkds</h3><p><a href="//docs.phonegap.com/" target="_blank" rel="noopener">PhoneGap Documentation</a><br><a href="//api.jquery.com/" target="_blank" rel="noopener">jQuery API Documentation</a><br><a href="//getbootstrap.com/docs/4.3/getting-started/introduction/" target="_blank" rel="noopener">Bootstrap Documentation</a><br><a href="//codeigniter.com/user_guide/" target="_blank" rel="noopener">CodeIgniter User Guide</a><br><a href="//laravel.com/docs/5.8" target="_blank" rel="noopener">Laravel Documentation</a></p>
<h3 id="Game-Maker"><a href="#Game-Maker" class="headerlink" title="Game Maker"></a>Game Maker</h3><p><a href="//docs2.yoyogames.com/" target="_blank" rel="noopener">Language Documentation</a></p>
<h3 id="HTML-CSS-JavaScript"><a href="#HTML-CSS-JavaScript" class="headerlink" title="HTML, CSS, JavaScript"></a>HTML, CSS, JavaScript</h3><p><a href="//www.w3schools.com/" target="_blank" rel="noopener">W3schools Portal</a><br><a href="//www.csszengarden.com/" target="_blank" rel="noopener">CSS Zen Garden</a><br><a href="//www.cssdrive.com/imagepalette/index.php" target="_blank" rel="noopener">Color Pallete Generator</a><br><a href="//validator.w3.org/" target="_blank" rel="noopener">HTML Validator</a><br><a href="//jigsaw.w3.org/css-validator/" target="_blank" rel="noopener">CSS Validator</a><br><a href="//developer.mozilla.org/en-US/docs/Web/JavaScript/Guide" target="_blank" rel="noopener">JavaScript Guide</a></p>
<h3 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h3><p><a href="//docs.microsoft.com/en-us/dotnet/visual-basic/" target="_blank" rel="noopener">VB Documentation - Microsoft</a><br><a href="//docs.microsoft.com/en-us/dotnet/csharp/" target="_blank" rel="noopener">C# Documentation - Microsoft</a><br><a href="//docs.microsoft.com/en-us/aspnet/" target="_blank" rel="noopener">ASP.NET Documentation - Microsoft</a></p>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p><a href="//www.php.net/docs.php" target="_blank" rel="noopener">Language Documentation</a></p>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p><a href="//docs.oracle.com/javase/8/docs/api/" target="_blank" rel="noopener">Language Documentation</a><br><a href="//docs.oracle.com/javase/specs/jls/se8/html/jls-17.html" target="_blank" rel="noopener">Threads and Locks - Oracle</a><br><a href="//docs.oracle.com/javase/tutorial/essential/concurrency/index.html" target="_blank" rel="noopener">Concurrency - Oracle</a></p>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p><a href="//docs.scipy.org/doc/scipy/reference/" target="_blank" rel="noopener">SciPy Reference</a><br><a href="//docs.scipy.org/doc/numpy/reference/index.html" target="_blank" rel="noopener">NumPy Reference</a><br><a href="//docs.python.org/3/" target="_blank" rel="noopener">Python3 Documentation</a><br><a href="//www.w3schools.com/python/" target="_blank" rel="noopener">Python Tutorial - W3schools</a></p>
<h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><p><a href="//docs.swift.org/swift-book/ReferenceManual/AboutTheLanguageReference.html" target="_blank" rel="noopener">Language Documentation</a><br><a href="//developer.apple.com/documentation/" target="_blank" rel="noopener">Apple Developer Documentation</a></p>
<h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><p><a href="//sqlzoo.net/" target="_blank" rel="noopener">SQLZOO Portal</a><br><a href="//www.w3schools.com/sql/default.asp" target="_blank" rel="noopener">SQL Tutorial - W3schools</a></p>
<h3 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h3><p><a href="//www.ibm.com/developerworks/cn/rational/r-uml/index.html" target="_blank" rel="noopener">UML - IBM Developers</a><br><a href="//docs.microsoft.com/zh-cn/visualstudio/modeling/create-models-for-your-app?view=vs-2015" target="_blank" rel="noopener">Modeling Documentation - Microsoft</a><br><a href="//www.uml-diagrams.org/" target="_blank" rel="noopener">uml-diagrams.org</a></p>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p><a href="//nodejs.org/api/" target="_blank" rel="noopener">Node.js API</a><br><a href="//expressjs.com/en/4x/api.html" target="_blank" rel="noopener">Express.js</a><br><a href="//www.sqlitetutorial.net/sqlite-nodejs/" target="_blank" rel="noopener">SQLite3.js</a><br><a href="//www.npmjs.com/package/slackbots" target="_blank" rel="noopener">Slackbots.js</a><br><a href="//socket.io/docs/" target="_blank" rel="noopener">Socket.io</a><br><a href="//redis.js.org/" target="_blank" rel="noopener">Redis.js</a><br><a href="//vuejs.org/v2/api/" target="_blank" rel="noopener">Vue.js</a><br><a href="//vuex.vuejs.org/guide/" target="_blank" rel="noopener">Vuex</a></p>
<h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><p><a href="//developer.android.com/reference" target="_blank" rel="noopener">Android Developers Reference</a><br><a href="//www.seleniumhq.org/selenium-ide/docs/en/api/commands/" target="_blank" rel="noopener">Selenium Command Documentation</a><br><a href="//en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URL_and_HTTP_methods" target="_blank" rel="noopener">REST API standard</a></p>
]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>Links</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle SQL Basic Usage</title>
    <url>/2019/06/19/Oracle-SQL-Basic-Usage/</url>
    <content><![CDATA[<p>Oracle SQL 复习笔记（<del>进行中</del>放弃了…）</p>
<a id="more"></a>

<h1 id="笔记-Cheat-Sheet"><a href="#笔记-Cheat-Sheet" class="headerlink" title="笔记 / Cheat Sheet"></a>笔记 / Cheat Sheet</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">concat(field/string, field/string, field/string...)</span><br><span class="line">length(field/string)</span><br><span class="line">round(number, [integer])</span><br><span class="line">in(string, string...)</span><br><span class="line">left(field/string, unsignedInteger) =&gt; js =&gt; field/string.substring(0, unsignedInteger)</span><br><span class="line"><span class="keyword">replace</span>(<span class="keyword">field</span>/<span class="keyword">string</span>, searchString, replacementString)</span><br><span class="line"><span class="keyword">where</span>, <span class="keyword">or</span>, <span class="keyword">xor</span>, <span class="keyword">and</span>, != (&lt;&gt;), <span class="keyword">like</span>, <span class="string">'_%'</span>, <span class="keyword">between</span> ?<span class="built_in">number</span> <span class="keyword">and</span> ?<span class="built_in">number</span> (<span class="keyword">both</span> <span class="built_in">number</span> inclusive), <span class="keyword">not</span> ?<span class="keyword">operator</span></span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">field</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">field</span> =&gt; non-repeated/<span class="keyword">unique</span> <span class="keyword">value</span></span><br><span class="line"><span class="comment">-- inline comment, a space after --</span></span><br><span class="line"><span class="comment">/* mutiple-line comment, a space at the very beginning and ending */</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line"><span class="keyword">all</span>(<span class="keyword">table</span>) =&gt; <span class="keyword">where</span> <span class="keyword">field</span> &gt; <span class="keyword">all</span>(<span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> nums) <span class="comment">-- find something with a field's number larger than all the num from nums</span></span><br><span class="line"><span class="keyword">count</span>(<span class="keyword">field</span>)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">field</span></span><br><span class="line"><span class="keyword">having</span> <span class="comment">-- must only be used after 'group by' that can use sum(), count(), etc.</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Note</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SFWRTECH 3IT3 Lab #1 Layer 3 and 4 Protocols</title>
    <url>/2020/05/28/SFWRTECH-3IT3-Lab-1-Layer-3-and-4-Protocols/</url>
    <content><![CDATA[<p>Course section: SFWRTECH 3IT3:Fundamentals of Networking - SFWRTECH_3IT3_poonh_2205</p>
<p>SFWRTECH 3IT3 – Fundamentals of Networking<br>Lab #1: Layer 3 and 4 Protocols<br>Following &amp; Answers Record</p>
<a id="more"></a>

<h1 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h1><p>Default gateway : 10.0.2.1</p>
<p>Windows1 IP : 10.0.2.4<br>Windows2 IP : 10.0.2.5<br>CentOS01 IP : 10.0.2.8 (with httpd)<br>CentOS02 IP : 10.0.2.9</p>
<h2 id="Step-8"><a href="#Step-8" class="headerlink" title="Step 8"></a>Step 8</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all</span><br></pre></td></tr></table></figure>

<h2 id="Step-9"><a href="#Step-9" class="headerlink" title="Step 9"></a>Step 9</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh interface ipv4 set dns &quot;Ethernet&quot; static 8.8.8.8 primary</span><br><span class="line">netsh interface ipv4 add dns &quot;Ethernet&quot; 192.168.1.1</span><br><span class="line">ipconfig &#x2F;all</span><br></pre></td></tr></table></figure>

<p>Differences between dynamic and manual IP config:</p>
<ul>
<li>DHCP enabled in dynamic and disabled in manual</li>
<li>DHCP server in dynamic is 10.0.2.3 but disappeared in manual</li>
</ul>
<h2 id="Step-12"><a href="#Step-12" class="headerlink" title="Step 12"></a>Step 12</h2><p>Show ARP cache</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure>

<p>Result:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Physical Address of 10.0.2.4 : 08-00-27-c8-13-4b</span><br><span class="line"></span><br><span class="line">Interface: 10.0.2.4 --- 0x3</span><br><span class="line">internet Address | Physical Address | Type         | Purpose</span><br><span class="line">10.0.2.1           52-54-00-12-35-00  dynamic        Default Gateway</span><br><span class="line">10.0.2.3           08-00-27-75-7c-58  dynamic        DHCP Server</span><br><span class="line">10.0.2.5           08-00-27-2b-a4-3e  dynamic        Neighbouring VM</span><br><span class="line">10.0.2.255         ff-ff-ff-ff-ff-ff  static         Directed Broadcast</span><br><span class="line">224.0.0.22         01-00-5e-00-00-16  static</span><br><span class="line">224.0.0.251        01-00-5e-00-00-fb  static</span><br><span class="line">224.0.0.252        01-00-5e-00-00-fc  static</span><br><span class="line">255.255.255.255    ff-ff-ff-ff-ff-ff  static         Flooded Broadcast</span><br><span class="line"></span><br><span class="line">224.0.0.22 were appeared after browsing a website.</span><br><span class="line"></span><br><span class="line">Wireshark OUI Lookup Tool: https:&#x2F;&#x2F;www.wireshark.org&#x2F;tools&#x2F;oui-lookup.html</span><br><span class="line"></span><br><span class="line">OUI for 08-00-27 : PCS Computer Systems GmbH</span><br></pre></td></tr></table></figure>

<h2 id="Step-13"><a href="#Step-13" class="headerlink" title="Step 13"></a>Step 13</h2><p>Using <code>Windows1 10.0.2.4</code> ,<br>delete all entries in ARP cache <code>arp -d</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arp -d</span><br><span class="line">arp -a</span><br><span class="line">ping 10.0.2.5</span><br><span class="line">arp -a</span><br></pre></td></tr></table></figure>

<p>A new entry <code>10.0.2.5 08-00-27-2b-a4-3e</code> was created in ARP cache after <code>ping 10.0.2.5</code>.</p>
<p>There is no ARP entry for default gateway because <code>Windows2 10.0.2.5</code> is in the same subnet that <code>Windows1 10.0.2.4</code> in, so data can be sent directly to neighbours and not to the gateway to handle further.</p>
<p>I can use <code>ipconfig</code> command to get the ARP entry for default gateway.</p>
<h2 id="Step-14"><a href="#Step-14" class="headerlink" title="Step 14"></a>Step 14</h2><p>After change MAC of <code>Windows2 10.0.2.5</code> from <code>08-00-27-2b-a4-3e</code> to <code>08-00-27-11-22-33</code> and run <code>arp -a</code> on <code>Windows1 10.0.2.4</code>, the ARP entry of <code>Windows2 10.0.2.5</code> is dynamically changed to <code>08-00-27-11-22-33</code>. (yes, if I switch Windows1 quickly enough, the MAC is not changed yet)</p>
<p>I ping to <code>Windows2 10.0.2.5</code> and receive 4 <code>Request timed out</code> after MAC changed.</p>
<h2 id="Step-15"><a href="#Step-15" class="headerlink" title="Step 15"></a>Step 15</h2><p>After I select “Turn on Windows Defender Firewall” under the<br>“Public network settings” on <code>Windows2 10.0.2.5</code>, <code>Windows1 10.0.2.4</code> receives 4 <code>Request timed out</code> on running <code>ping 10.0.2.5</code>.</p>
<h2 id="Step-19"><a href="#Step-19" class="headerlink" title="Step 19"></a>Step 19</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su -</span><br><span class="line">yum -y install nc httpd</span><br><span class="line">yum -y install nc</span><br></pre></td></tr></table></figure>

<h2 id="Step-20"><a href="#Step-20" class="headerlink" title="Step 20"></a>Step 20</h2><p>Create <code>index.html</code> file</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;&lt;body&gt;Hello World&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<p>Save to <code>/var/www/html/index.html</code></p>
<h2 id="Step-21"><a href="#Step-21" class="headerlink" title="Step 21"></a>Step 21</h2><p>Run <code>ifconfig</code> or <code>ip addr</code> on CentOS01, find device <code>enp0s3</code> with <code>inet 10.0.2.8/24</code></p>
<p>Run</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;80&#x2F;tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<p>on CentOS01</p>
<p>Run <code>ifconfig</code> or <code>ip addr</code> on CentOS02, find device <code>enp0s3</code> with <code>inet 10.0.2.9/24</code></p>
<h2 id="Step-22"><a href="#Step-22" class="headerlink" title="Step 22"></a>Step 22</h2><p>Start Apache web server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable httpd.service</span><br><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure>

<h2 id="Step-23"><a href="#Step-23" class="headerlink" title="Step 23"></a>Step 23</h2><p>I can see the “Hello World” page through <code>CentOS02 10.0.2.9</code> by browsing <code>10.0.2.8</code></p>
<h2 id="Step-24"><a href="#Step-24" class="headerlink" title="Step 24"></a>Step 24</h2><p>Run <code>nc -ul 1234</code> on <code>CentOS01 10.0.2.8</code> and <code>nc 10.0.2.8 -u 1234</code> on <code>CentOS02 10.0.2.9</code></p>
<p>Then type <code>abc</code> on <code>CentOS02 10.0.2.9</code> and press Enter. I receive “no route to host”.</p>
<p>Then release port number <code>1234</code> using <code>udp</code> from firewall of <code>CentOS01 10.0.2.8</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;1234&#x2F;udp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h2 id="Step-25"><a href="#Step-25" class="headerlink" title="Step 25"></a>Step 25</h2><p>If I first try to send a message from <code>CentOS01 10.0.2.8</code>, nothing happens, because UDP protocal is connectionless. The server <code>CentOS01 10.0.2.8</code> is just listening to <code>port 1234</code> but it does not have connection to the client <code>CentOS02 10.0.2.9</code> because the client <code>CentOS02 10.0.2.9</code> does not need to build connection with the server <code>CentOS01 10.0.2.8</code> very firstly before sending out messages.</p>
<h2 id="Step-26"><a href="#Step-26" class="headerlink" title="Step 26"></a>Step 26</h2><p>Run <code>nc -l 5678</code> on <code>CentOS01 10.0.2.8</code> and <code>nc 10.0.2.8 5678</code> on <code>CentOS02 10.0.2.9</code>.</p>
<p>This returns “no route to host” again because <code>port 5678</code> is not released from the firewall. A TCP <code>RST</code> flag is sent back to <code>CentOS02 10.0.2.9</code> so <code>CentOS02 10.0.2.9</code> knows the connection is aborted.</p>
<h2 id="Step-27"><a href="#Step-27" class="headerlink" title="Step 27"></a>Step 27</h2><p>Release port number <code>5678</code> using <code>tcp</code> from firewall of <code>CentOS01 10.0.2.8</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;5678&#x2F;tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h2 id="Step-28"><a href="#Step-28" class="headerlink" title="Step 28"></a>Step 28</h2><p>I first try to send a message from the server <code>CentOS01 10.0.2.8</code>, and the client <code>CentOS02 10.0.2.9</code> gets the message because both sides must have connection built under TCP protocal before any messages sent.</p>
<p>When I press <code>CTRL + C</code> on the client <code>CentOS02 10.0.2.9</code>, the server <code>CentOS01 10.0.2.8</code> is also down because the client <code>CentOS02 10.0.2.9</code> sends out a <code>FIN</code> flag and expects to end the connection. The server <code>CentOS01 10.0.2.8</code> sends a <code>FIN</code> flag again with a <code>ACK</code> flag for confirming, and the client <code>CentOS02 10.0.2.9</code> confirms that. TCP protocal only allows point to point transport due to one connection.</p>
<h2 id="Step-29"><a href="#Step-29" class="headerlink" title="Step 29"></a>Step 29</h2><p>Run <code>route -n</code> on <code>CentOS01 10.0.2.8</code> to identify the default gateway.</p>
<p>Run <code>cat /etc/resolv.conf</code> on <code>CentOS01 10.0.2.8</code> to check DNS config.</p>
<h2 id="Post-Lab-Questions"><a href="#Post-Lab-Questions" class="headerlink" title="Post-Lab Questions"></a>Post-Lab Questions</h2><p>An ARP cache may contain multiple entries with the same MAC address, even though the IP addresses listed are different. This commonly occurs in some networks. Describe the configuration of network devices that could result in this behaviour.</p>
<p>Answer:</p>
<ol>
<li>A network with hosts that have a NIC binded with multiple IP addresses</li>
<li>Web server binded with IP addresses, so that the website can be surfed through multiple IP addresses</li>
</ol>
<p>In classful IP addressing, what classful network would your Windows and CentOS IP addresses normally belong to? What “class” do they actually belong to, and why? Write the network address for the VMs in CIDR notation. What is the maximum number of hosts that can be configured in this subnet?</p>
<p>Answer:<br>Subnet Mask is <code>255.255.255.0</code> so it is actually a <code>Class C</code> =&gt; Network Address <code>10.0.2.0/24</code>. Number of possible hosts: <code>2 ^ 8 - 2 = 254</code>.</p>
<p>How could a computer detect an IP address conflict in the network when starting up, before it finishes loading its own IP network configuration? In other words, how could a computer determine whether an IP address is already in use on the network before it attempts to configure its network interface using the same address (which would then result in a conflict)?</p>
<p>Answer:</p>
<ol>
<li>Ask DHCP server to get a valid IP address.</li>
<li>Ping all possible IP addresses to see which is not in use.</li>
</ol>
]]></content>
      <categories>
        <category>Lab</category>
      </categories>
      <tags>
        <tag>SFWRTECH 3IT3</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP/IP是什么？</title>
    <url>/2020/04/08/TCP-IP%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p><strong>本文大半内容都不对，弃了弃了~</strong></p>
<p>自计算机和互联网出现，大多数计算机都被用于上网、发邮件或者只是通过网路使用一下网络共享打印机。计算机网络<a href="通过软硬件技术支持允许多台计算机之间交流和共享资源">^1</a>可以连接各种功能不一样的电子设备，例如笔记本电脑、平板电脑、智能手机、服务器、打印机、扫描仪、路由器等设备。如果说以上设备连上网络后都算是“传统”节点，那在现在的物联网时代，各种计算机新品种就可以算作“非传统”节点了吧，毕竟现在能连网的设备真的是五花八门。再说征服王“互联网”现在真的可以说已经征服世界的情况下，计算机网络类型都可以分成5种：</p>
<ul>
<li>PAN - 个人网络，一台电脑配打印机等设备</li>
<li>LAN - 局域网，一个路由器下的网络</li>
<li>WLAN - 无线局域网，一个无线路由器信号覆盖下的网络</li>
<li>MAN - 都市网，一个城市的网络</li>
<li>WAN - 广域网，一个省、国家或整个世界下的网络，比如互联网</li>
</ul>
<p>在这么广阔的网络下，如果节点之间通讯只靠一个“节点ID”作为坐标来互动，那互动时所传输的数据恐怕是要迷路很久甚至有可能累死在路上。<strong>TCP/IP</strong><a href="目前主流的网络相关协议集合，包括应用层、传输层、网络层和网络接口层">^2</a>就包含了网络相关的标准规范。这个协议集合里的IP部分就很好的为迷路的数据指明了方向。</p>
<a id="more"></a>

<p><strong>先来个更好的文章做参考：<a href="//developer.51cto.com/art/201906/597961.htm" target="_blank" rel="noopener">太厉害了，终于有人能把TCP/IP协议讲的明明白白了！</a>，<a href="//tool.oschina.net/commons?type=7" target="_blank" rel="noopener">TCP/UDP常见端口参考</a></strong></p>
<p>网络上两个节点之间通讯需要3样东西来指路：</p>
<ul>
<li>节点在网络上的地址（IP地址）</li>
<li>节点的名称（MAC地址）</li>
<li>节点里应用或服务接收数据的端口（Port端口）</li>
</ul>
<h1 id="TCP-IP协议全家桶"><a href="#TCP-IP协议全家桶" class="headerlink" title="TCP/IP协议全家桶"></a>TCP/IP协议全家桶</h1><p>全家桶包含ARP, BGP, DHCP, DNS, FTP, HTTP, ICMP, IGMP, IP, TCP, Telnet, TFTP, UDP, WWW等。<br>节点上的TCP/IP栈，需跟随所运行的网络应用的要求，从全家桶中选择合适的协议；不同的节点有可能会使用不一样的TCP/IP栈。</p>
<h2 id="网络体系结构OSI七层模型"><a href="#网络体系结构OSI七层模型" class="headerlink" title="网络体系结构OSI七层模型"></a>网络体系结构OSI七层模型</h2><table>
<thead>
<tr>
<th align="right"></th>
<th align="center">名称</th>
<th align="center">功能</th>
<th align="center">TCP/IP协议族</th>
</tr>
</thead>
<tbody><tr>
<td align="right">7</td>
<td align="center">应用层(Applicaiton)</td>
<td align="center">终端用户的接口支持：文件传输，电子邮件，文件服务，虚拟终端</td>
<td align="center">TFTP, HTTP, SNMP, FTP, SMTP, DNS, Telnet</td>
</tr>
<tr>
<td align="right">6</td>
<td align="center">表示层(Presentation)</td>
<td align="center">数据格式化，代码转换，数据加密</td>
<td align="center">N/A</td>
</tr>
<tr>
<td align="right">5</td>
<td align="center">会话层(Session)</td>
<td align="center">连接管理：解除或建立与别的节点的联系</td>
<td align="center">N/A</td>
</tr>
<tr>
<td align="right">4</td>
<td align="center">传输层(Transport)</td>
<td align="center">端对端传输管理，提供端对端的接口</td>
<td align="center">TCP, UDP</td>
</tr>
<tr>
<td align="right">3</td>
<td align="center">网络层(Network)</td>
<td align="center">端对端路由，为数据包选择路由</td>
<td align="center">IP, ICMP, RIP, OSPF, BGP, IGMP</td>
</tr>
<tr>
<td align="right">2</td>
<td align="center">数据链路层(Data Link)</td>
<td align="center">网络接入和架构管理，传输有地址的帧以及错误检测功能</td>
<td align="center">SLIP, CSLIP, PPP, ARP, RARP, MTU</td>
</tr>
<tr>
<td align="right">1</td>
<td align="center">物理层(Physical)</td>
<td align="center">比特流生成和接收，以二进制数据形式在物理媒体上传输数据</td>
<td align="center">ISO2110, IEEE802, IEEE802.2</td>
</tr>
</tbody></table>
<h1 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h1><p>IP协议理论上让每个网络不管大小都有一个唯一的IP地址（或称作“节点地址”），但事实上不是每个网络（小到一台电脑配一个打印机）都能独享世界唯一IP地址。讨论“不能独享世界唯一IP地址的情况下，数据到底怎么就不会迷路了？”的问题之前，我们要先认识IP地址的格式。</p>
<h2 id="IPv4格式"><a href="#IPv4格式" class="headerlink" title="IPv4格式"></a>IPv4格式</h2><p>IPv4使用32-bit节点地址，分成4个8-bit部分，例如：</p>
<p><code>01110000.11011110.11100110.00001111</code></p>
<p>使用十进制的眼光来看这个节点地址就会变成这样：</p>
<p><code>112.222.230.15</code></p>
<p>每一个8-bit部分的最大值是255。<br>一个IP地址包含有两组信息：网络ID和节点ID。</p>
<p>网络ID分为3类：</p>
<ul>
<li>A类<ul>
<li>IP地址范围：1.0.0.0 ~ 126.255.255.255</li>
<li>A类网络ID为第1个8-bit部分</li>
<li>例子：<code>112.222.230.15</code>属于A类，网络ID为<code>112</code>，节点ID为<code>222.230.15</code></li>
</ul>
</li>
<li>B类<ul>
<li>IP地址范围：128.0.0.0 ~ 191.255.255.255</li>
<li>B类网络ID为第1-2个8-bit部分</li>
<li>例子：<code>142.112.1.70</code>属于B类，网络ID为<code>142.112</code>，节点ID为<code>1.70</code></li>
</ul>
</li>
<li>C类<ul>
<li>IP地址范围：192.0.0.0 ~ 223.255.255.255</li>
<li>C类网络ID为第1-3个8-bit部分</li>
<li>例子：<code>192.168.1.1</code>属于C类，网络ID为<code>192.168.1</code>，节点ID为<code>1</code><br>其中以127开头的IP地址为“回环地址”，数据信息的发送者发出的数据流会原样送回发送者。<br>网络ID越大，处于该网络下的主机或节点越少。一般家庭用的路由器网络ID为<code>192.168.1</code>的情况下最多只能连接254个设备。</li>
</ul>
</li>
</ul>
<h2 id="IPv6格式"><a href="#IPv6格式" class="headerlink" title="IPv6格式"></a>IPv6格式</h2><p>IPv6使用128-bit节点地址，分成8个4位数的八进制16-bit部分，例如：</p>
<p><code>2001:0000:5723:0000:0000:D14E:DBCA:0764</code></p>
<p>也可以缩写成这样：</p>
<p><code>2001:0:5723::D14E:DBCA:764</code></p>
<p>其他例子：</p>
<p><code>2001:0DA8:0000:0000:0001:0000:0000:0001</code> =&gt; <code>2001:DA8::1:0:0:1</code> OR <code>2001:DA8:0:0:1::1</code><br><code>0:0:0:0:0:0:0:1</code> =&gt; <code>::1</code><br><code>0:0:0:0:0:0:0:0</code> =&gt; <code>::</code></p>
<p>开头64-bit包含了网络和子网络的地址，后面64-bit是接口ID。因为IPv6地址是直接赋予接口的，所以一个主机可以有多个IPv6地址对应不同的网络连接。下图拆开开头64-bit网络地址：<br><img src="/gallery/tcp-ip-ipv6-prefix.jpg" alt="IPv6 Prefix" loading="lazy"></p>
<h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><p>路由器是能连接多个网络的设备。它们决定了数据的去向，但它们一般都不是数据的最终接收者。数据在传输过程中有可能经过多个跳板<a href="数据在传输过程中经过的路由器">^3</a>，一般这些数据跳的次数过多且还没到目的地的话就会累死在路上，造成的结果就是发送者得不到回应、响应超时或者收到路由甲回应的死亡信息。</p>
<p>一个ID为<code>142.222</code>的网络例子：<br><img src="/gallery/tcp-ip-router-network.jpg" alt="Network 142.222.x.x" loading="lazy"><br>在这个网络中，所有的主机或节点都是必须要向路由器<code>142.222.9.255</code>发送他们的数据，这样数据才可以在这个网络中畅行或者从这个网络发出到更外面的网络；所以在这里路由器<code>142.222.9.255</code>被称为是默认网关。</p>
<p>假如在以上网络中主机<code>142.222.12.27</code>要发送数据到服务器<code>112.111.72.56</code>，数据会先到路由器<code>142.222.9.255</code>，路由器会通过路由表查找数据的下个传送目标（随便一提，需要解析域名的情况下，找到一个IP记录丰富的DNS也能让你的数据少跳跳板，数据极低概率会累死在路上）。</p>
<p>假如在以上B类网络基础上存在<strong>子网络</strong>：<br><img src="/gallery/tcp-ip-router-subnet.jpg" alt="Network 142.222.x.x with subnet" loading="lazy"><br>在子网络中主机<code>142.222.10.2</code>要发送数据到服务器<code>142.123.32.14</code>，数据会先到路由器<code>142.222.10.255</code>，再到外面网络的路由器<code>142.222.255.255</code>，再到更外面网络的路由器<code>142.255.255.255</code>；找到<code>142.255.255.255</code>的下级<code>142.123.255.255</code>，再到服务器<code>142.123.32.14</code>。当然，如果网络<code>142.123</code>底下也有子网络的话，就要通过网关<code>142.123.32.255</code>，之后才是服务器<code>142.123.32.14</code>。</p>
<h2 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h2><p>MAC地址一般说的就是网卡生产出来自带的12个十六进制数的ID，当然也可以通过软件生成一个随机的MAC地址，只要主机所在的网络路由器上的ARP表上没有就行。它能够在一个网络下确认主机发送者或接收者的身份。因为MAC地址都是厂家定的，对比IP地址，MAC地址就可以有唯一标识了，甚至一人手上说不定还能独享多个“唯一”。MAC地址例子如下：</p>
<p><code>00-0B-DB-45-A4-CC</code></p>
<p>前6个数代表制造商：<code>00-0B-DB</code><br>后6个数为唯一编号：<code>45-A4-CC</code></p>
<h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP协议让路由器记录下哪个IP地址对应哪个MAC地址。因为IP地址多数为动态，一个设备说不定某天就移民了，所以路由器一般都有一个ARP表记录和分配IP地址给底下的子民；要是有的子民刚移民过来没有记录在案，在有数据传送过来路由找不到人的情况下会发广播，以这样的操作令底下子民回应，之后强制记录在案。</p>
<p><strong><em>更多可以百度TCP/IP全家桶各种协议，比较重要的还有数据包结构、DHCP<a href="为网关节点管理下的主机进行动态IP地址的分配；有效防止人工操作的失误；有主机被迁移或更替的情况下能够自动更新配置">^4</a>和DNS<a href="域名服务器能够帮助解析域名到对应IP地址">^5</a>。</em></strong></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>TCP/IP</tag>
        <tag>MAC</tag>
        <tag>IPv6</tag>
        <tag>IPv4</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown Basic Syntax</title>
    <url>/2019/12/02/Markdown-Basic-Syntax/</url>
    <content><![CDATA[<p>This post is originated from <a href="//gist.github.com/apackeer/4159268" target="_blank" rel="noopener">here</a> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>
<a id="more"></a>

<hr>
<h1 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h1><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br><span class="line"></span><br><span class="line">Alternatively, for H1 and H2, an underline-ish style:</span><br><span class="line"></span><br><span class="line">Alt-H1</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">Alt-H2</span><br><span class="line">------</span><br></pre></td></tr></table></figure>

<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><p>Alternatively, for H1 and H2, an underline-ish style:</p>
<h1 id="Alt-H1"><a href="#Alt-H1" class="headerlink" title="Alt-H1"></a>Alt-H1</h1><h2 id="Alt-H2"><a href="#Alt-H2" class="headerlink" title="Alt-H2"></a>Alt-H2</h2><h2 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Emphasis, aka italics, with <span class="emphasis">*asterisks*</span> or <span class="emphasis">_underscores_</span>.</span><br><span class="line"></span><br><span class="line">Strong emphasis, aka bold, with <span class="strong">**asterisks**</span> or <span class="strong">__underscores__</span>.</span><br><span class="line"></span><br><span class="line">Combined emphasis with <span class="strong">**asterisks and _underscores_*</span>*.</span><br><span class="line"></span><br><span class="line">Strikethrough uses two tildes. ~~Scratch this.~~</span><br></pre></td></tr></table></figure>

<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>
<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>
<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>
<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>
<h2 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>First ordered list item</span><br><span class="line"><span class="bullet">2. </span>Another item</span><br><span class="line"><span class="bullet">  * </span>Unordered sub-list.</span><br><span class="line"><span class="bullet">1. </span>Actual numbers don't matter, just that it's a number</span><br><span class="line"><span class="bullet">  1. </span>Ordered sub-list</span><br><span class="line"><span class="bullet">4. </span>And another item.</span><br><span class="line"></span><br><span class="line">   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).</span><br><span class="line"></span><br><span class="line">   To have a line break without a paragraph, you will need to use two trailing spaces.  </span><br><span class="line">   Note that this line is separate, but within the same paragraph.  </span><br><span class="line">   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>Unordered list can use asterisks</span><br><span class="line"><span class="bullet">- </span>Or minuses</span><br><span class="line"><span class="bullet">+ </span>Or pluses</span><br><span class="line"><span class="bullet">- </span>Paragraph In unordered list</span><br><span class="line"></span><br><span class="line">  For example like this.</span><br><span class="line"></span><br><span class="line">Common Paragraph with some text.</span><br><span class="line">And more text.</span><br></pre></td></tr></table></figure>

<ol>
<li><p>First ordered list item</p>
</li>
<li><p>Another item</p>
<ul>
<li>Unordered sub-list.</li>
</ul>
</li>
<li><p>Actual numbers don’t matter, just that it’s a number</p>
<ol>
<li>Ordered sub-list</li>
</ol>
</li>
<li><p>And another item.</p>
<p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>
<p>To have a line break without a paragraph, you will need to use two trailing spaces.<br>Note that this line is separate, but within the same paragraph.<br>(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>
</li>
</ol>
<ul>
<li>Unordered list can use asterisks</li>
</ul>
<ul>
<li>Or minuses</li>
</ul>
<ul>
<li>Or pluses</li>
</ul>
<ul>
<li><p>Paragraph In unordered list</p>
<p>For example like this.</p>
</li>
</ul>
<p>Common Paragraph with some text.<br>And more text.</p>
<h2 id="Inline-HTML"><a href="#Inline-HTML" class="headerlink" title="Inline HTML"></a>Inline HTML</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>To reboot your computer, press <span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>ctrl<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>alt<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>del<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>.<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>


<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;dt&gt;Definition list&lt;/dt&gt;</span></span><br><span class="line"><span class="code">    &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="code">    &lt;dt&gt;Markdown in HTML&lt;/dt&gt;</span></span><br><span class="line"><span class="code">    &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br></pre></td></tr></table></figure>


<dl>
    <dt>Definition list</dt>
    <dd>Is something people use sometimes.</dd>

<pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;
&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</code></pre></dl>


<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">I'm an inline-style link</span>](<span class="link">//www.google.com</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">I'm an inline-style link with title</span>](<span class="link">//www.google.com "Google's Homepage"</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">I'm a reference-style link</span>][<span class="symbol">Arbitrary case-insensitive reference text</span>]</span><br><span class="line"></span><br><span class="line">[<span class="string">I'm a relative reference to a repository file</span>](<span class="link">../blob/master/LICENSE</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">You can use numbers for reference-style link definitions</span>][<span class="symbol">1</span>]</span><br><span class="line"></span><br><span class="line">Or leave it empty and use the [link text itself]</span><br><span class="line"></span><br><span class="line">Some text to show that the reference links can follow later.</span><br><span class="line"></span><br><span class="line">[<span class="symbol">arbitrary case-insensitive reference text</span>]: <span class="link">//hexo.io</span></span><br><span class="line">[<span class="symbol">1</span>]: <span class="link">//hexo.io/docs/</span></span><br><span class="line">[<span class="symbol">link text itself</span>]: <span class="link">//hexo.io/api/</span></span><br></pre></td></tr></table></figure>

<p><a href="//www.google.com" target="_blank" rel="noopener">I’m an inline-style link</a></p>
<p><a href="//www.google.com" target="_blank" rel="noopener" title="Google&#39;s Homepage">I’m an inline-style link with title</a></p>
<p><a href="//hexo.io" target="_blank" rel="noopener">I’m a reference-style link</a></p>
<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>
<p><a href="//hexo.io/docs/" target="_blank" rel="noopener">You can use numbers for reference-style link definitions</a></p>
<p>Or leave it empty and use the <a href="//hexo.io/api/" target="_blank" rel="noopener">link text itself</a></p>
<p>Some text to show that the reference links can follow later.</p>
<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">hover to see the title text:</span><br><span class="line"></span><br><span class="line">Inline-style:</span><br><span class="line"></span><br><span class="line">![<span class="string">alt text</span>](<span class="link">//hexo.io/icon/favicon-196x196.png "Logo Title Text 1"</span>)</span><br><span class="line"></span><br><span class="line">Reference-style:</span><br><span class="line">![<span class="string">alt text</span>][<span class="symbol">logo</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">logo</span>]: <span class="link">//hexo.io/icon/favicon-196x196.png "Logo Title Text 2"</span></span><br></pre></td></tr></table></figure>

<p>hover to see the title text:</p>
<p>Inline-style:</p>
<p><img src="//hexo.io/icon/favicon-196x196.png" alt="alt text" title="Logo Title Text 1" loading="lazy"></p>
<p>Reference-style:<br><img src="//hexo.io/icon/favicon-196x196.png" alt="alt text" title="Logo Title Text 2" loading="lazy"></p>
<h2 id="Code-and-Syntax-Highlighting"><a href="#Code-and-Syntax-Highlighting" class="headerlink" title="Code and Syntax Highlighting"></a>Code and Syntax Highlighting</h2><p>Inline <code>code</code> has <code>back-ticks around</code> it.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">"JavaScript syntax highlighting"</span>;</span><br><span class="line">alert(s);</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">"Python syntax highlighting"</span></span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">No language indicated, so no syntax highlighting.</span><br><span class="line">But let&#39;s throw in a &lt;b&gt;tag&lt;&#x2F;b&gt;.</span><br></pre></td></tr></table></figure>

<h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|                  | ASCII                           | HTML                          |</span><br><span class="line">| ---------------- | ------------------------------- | ----------------------------- |</span><br><span class="line">| Single backticks | <span class="code">`'Isn't this fun?'`</span>             | 'Isn't this fun?'             |</span><br><span class="line">| Quotes           | <span class="code">`"Isn't this fun?"`</span>             | "Isn't this fun?"             |</span><br><span class="line">| Dashes           | <span class="code">`-- is en-dash, --- is em-dash`</span> | -- is en-dash, --- is em-dash |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th></th>
<th>ASCII</th>
<th>HTML</th>
</tr>
</thead>
<tbody><tr>
<td>Single backticks</td>
<td><code>&#39;Isn&#39;t this fun?&#39;</code></td>
<td>‘Isn’t this fun?’</td>
</tr>
<tr>
<td>Quotes</td>
<td><code>&quot;Isn&#39;t this fun?&quot;</code></td>
<td>“Isn’t this fun?”</td>
</tr>
<tr>
<td>Dashes</td>
<td><code>-- is en-dash, --- is em-dash</code></td>
<td>– is en-dash, — is em-dash</td>
</tr>
</tbody></table>
<p>Colons can be used to align columns.</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| Tables        |      Are      | Cool |</span><br><span class="line">| ------------- | :-----------: | ---: |</span><br><span class="line">| col 3 is      | right-aligned |      |</span><br><span class="line">| col 2 is      |   centered    |      |</span><br><span class="line">| zebra stripes |   are neat    |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Tables</th>
<th align="center">Are</th>
<th align="right">Cool</th>
</tr>
</thead>
<tbody><tr>
<td>col 3 is</td>
<td align="center">right-aligned</td>
<td align="right"></td>
</tr>
<tr>
<td>col 2 is</td>
<td align="center">centered</td>
<td align="right"></td>
</tr>
<tr>
<td>zebra stripes</td>
<td align="center">are neat</td>
<td align="right"></td>
</tr>
</tbody></table>
<p>The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| | Markdown | Less           | Pretty     |     |</span><br><span class="line">| | ------------- | --------------- | ---------- |------- |</span><br><span class="line">| | <span class="emphasis">*Still*</span>   | <span class="code">`renders`</span> | <span class="strong">**nicely**</span> | |</span><br><span class="line">| | 1               | 2                 | 3          |          |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Markdown</th>
<th>Less</th>
<th>Pretty</th>
</tr>
</thead>
<tbody><tr>
<td><em>Still</em></td>
<td><code>renders</code></td>
<td><strong>nicely</strong></td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
</tr>
</tbody></table>
<h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$\sum_&#123;i&#x3D;0&#125;^n i^2 &#x3D; \frac&#123;(n^2+n)(2n+1)&#125;&#123;6&#125;$$</span><br><span class="line">$$</span><br><span class="line">f(n) &#x3D;</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\frac&#123;n&#125;&#123;2&#125;,  &amp; \text&#123;if $n$ is even&#125; \\\\[2ex]</span><br><span class="line">3n+1, &amp; \text&#123;if $n$ is odd&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>

<p>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$<br>$$<br>f(n) =<br>\begin{cases}<br>\frac{n}{2},  &amp; \text{if $n$ is even} \\[2ex]<br>3n+1, &amp; \text{if $n$ is odd}<br>\end{cases}<br>$$</p>
<blockquote>
<p>You can find more information about <strong>LaTeX</strong> mathematical expressions <a href="//math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">here</a>.</p>
</blockquote>
<h2 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h2><blockquote>
<p>Blockquotes are very handy in email to emulate reply text.<br>This line is part of the same quote.</p>
</blockquote>
<p>Quote break.</p>
<blockquote>
<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>
<h2 id="Horizontal-Rule"><a href="#Horizontal-Rule" class="headerlink" title="Horizontal Rule"></a>Horizontal Rule</h2><p>Three or more…</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">Hyphens</span><br><span class="line"></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"></span><br><span class="line">Asterisks</span><br><span class="line"></span><br><span class="line"><span class="emphasis">___</span></span><br><span class="line"></span><br><span class="line">Underscores</span><br></pre></td></tr></table></figure>

<hr>
<p>Hyphens</p>
<hr>
<p>Asterisks</p>
<hr>
<p>Underscores</p>
<h2 id="Line-Breaks"><a href="#Line-Breaks" class="headerlink" title="Line Breaks"></a>Line Breaks</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Here's a line for us to start with.</span><br><span class="line"></span><br><span class="line">This line is separated from the one above by two newlines, so it will be a <span class="emphasis">*separate paragraph*</span>.</span><br><span class="line"></span><br><span class="line">This line is also a separate paragraph, but...</span><br><span class="line">This line is only separated by a single newline, so it's a separate line in the <span class="emphasis">*same paragraph*</span>.</span><br></pre></td></tr></table></figure>


<p>Here’s a line for us to start with.</p>
<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>
<p>This line is also a separate paragraph, but…<br>This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>
<hr>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">This is a regular paragraph.</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;tr&gt;</span></span><br><span class="line"><span class="code">        &lt;td&gt;Foo&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;/tr&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">This is another regular paragraph.</span><br></pre></td></tr></table></figure>

<p>This is a regular paragraph.</p>
<table>
    <tr>
        <td>Foo</td>
    </tr>
</table>

<p>This is another regular paragraph.</p>
<h2 id="Youtube-videos"><a href="#Youtube-videos" class="headerlink" title="Youtube videos"></a>Youtube videos</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"//www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU</span></span></span></span><br><span class="line"><span class="xml">" target="_blank"&gt;</span><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"//img.youtube.com/vi/ARted4RniaU/0.jpg"</span></span></span></span><br><span class="line"><span class="xml">alt="IMAGE ALT TEXT HERE" width="240" height="180" border="10" /&gt;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">Pure markdown version:</span><br><span class="line"></span><br><span class="line">[<span class="string">![IMAGE ALT TEXT HERE</span>](<span class="link">//img.youtube.com/vi/ARted4RniaU/0.jpg</span>)](<span class="link">//www.youtube.com/watch?v=ARted4RniaU</span>)</span><br></pre></td></tr></table></figure>

<p><a href="//www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU
" target="_blank"><img src="//img.youtube.com/vi/ARted4RniaU/0.jpg"
alt="IMAGE ALT TEXT HERE" width="240" height="180" border="10" /></a></p>
<p>Pure markdown version:</p>
<p><a href="//www.youtube.com/watch?v=ARted4RniaU" target="_blank" rel="noopener"><img src="//img.youtube.com/vi/ARted4RniaU/0.jpg" alt="IMAGE ALT TEXT HERE" loading="lazy"></a></p>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title>旧版日记仿markdown编译代码</title>
    <url>/2019/02/21/%E6%97%A7%E7%89%88%E6%97%A5%E8%AE%B0%E4%BB%BFmarkdown%E7%BC%96%E8%AF%91%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>旧版日记仿markdown编译代码</p>
<a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'hexo-fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myDiary = fs.readFileSync(<span class="string">'source/my.diary'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timeRangeAndDiaries = myDiary.split(<span class="regexp">/-&#123;9,&#125;/</span>); <span class="comment">// Split by /-&#123;9,&#125;/ so that having time ranges and diaries separated (trimmed).</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; timeRangeAndDiaries.length; i++) &#123;</span><br><span class="line">    timeRangeAndDiaries[i] = timeRangeAndDiaries[i].trim();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timeRangeAndDiaries[i].startsWith(<span class="string">'#'</span>)) &#123; <span class="comment">// Edit time ranges to have h2 tags covered.</span></span><br><span class="line">        timeRangeAndDiaries[i] = <span class="string">'&lt;h2&gt;'</span> + timeRangeAndDiaries[i].replace(<span class="string">'#'</span>, <span class="string">''</span>).trim() + <span class="string">'&lt;/h2&gt;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// switch \n to &#123;newline&#125;</span></span><br><span class="line">        timeRangeAndDiaries[i] = timeRangeAndDiaries[i].replace(<span class="regexp">/\n+/g</span>, <span class="string">'&#123;newline&#125;'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Search list tags in each diaries and save them into temps for parts of paragraph.</span></span><br><span class="line">        <span class="keyword">var</span> tempLists = timeRangeAndDiaries[i].match(<span class="regexp">/\[list\](.*?)\[\/list\]/g</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Search img tags in each diaries and save them into temps for parts of paragraph.</span></span><br><span class="line">        <span class="keyword">var</span> tempImgs = timeRangeAndDiaries[i].match(<span class="regexp">/\[img\](.*?)\[\/img\]/g</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Edit the saved temps for parts of paragraph to html tags and replace them to each diary (clear out newline characters).</span></span><br><span class="line">        <span class="keyword">if</span> (tempLists != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; tempLists.length; j++) &#123;</span><br><span class="line">                <span class="keyword">var</span> temp = tempLists[j].replace(<span class="regexp">/\[\/?list\]/g</span>, <span class="string">''</span>).split(<span class="string">'&#123;newline&#125;'</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; temp.length; k++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> trimmed = temp[k].replace(<span class="regexp">/(&#123;newline&#125;)+/g</span>, <span class="string">''</span>).trim();</span><br><span class="line">                    <span class="keyword">if</span> (trimmed == <span class="string">''</span>) &#123;</span><br><span class="line">                        temp[k] = <span class="string">''</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        temp[k] = <span class="string">'&lt;li&gt;'</span> + trimmed + <span class="string">'&lt;/li&gt;'</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                tempLists[j] = <span class="string">'&lt;ul&gt;'</span> + temp.join(<span class="string">''</span>) + <span class="string">'&lt;/ul&gt;'</span>;</span><br><span class="line">                timeRangeAndDiaries[i] = timeRangeAndDiaries[i].replace(<span class="regexp">/\[list\](.*?)\[\/list\]/</span>, tempLists[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tempImgs != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; tempImgs.length; j++) &#123;</span><br><span class="line">                tempImgs[j] = <span class="string">'&lt;img src="'</span> + tempImgs[j].replace(<span class="regexp">/\[\/?img\]/g</span>, <span class="string">''</span>).replace(<span class="regexp">/(&#123;newline&#125;)+/g</span>, <span class="string">''</span>).trim() + <span class="string">'"&gt;'</span>;</span><br><span class="line">                timeRangeAndDiaries[i] = timeRangeAndDiaries[i].replace(<span class="regexp">/\[img\](.*?)\[\/img\]/</span>, tempImgs[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Split each diary by newline characters and save them into temps for paragraphing.</span></span><br><span class="line">        <span class="keyword">var</span> tempParagraphing = timeRangeAndDiaries[i].replace(<span class="regexp">/\n/g</span>, <span class="string">''</span>).split(<span class="string">'&#123;newline&#125;'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Edit the saved temps for paragraphing to html tags and replace them to each diary (clear out newline characters and empty lines).</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; tempParagraphing.length; j++) &#123;</span><br><span class="line">            <span class="keyword">var</span> trimmed = tempParagraphing[j].replace(<span class="regexp">/(&#123;newline&#125;)+/g</span>, <span class="string">''</span>).trim();</span><br><span class="line">            <span class="keyword">if</span> (trimmed == <span class="string">''</span>) &#123;</span><br><span class="line">                tempParagraphing[j] = <span class="string">''</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!trimmed.startsWith(<span class="string">'&lt;ul'</span>)) &#123;</span><br><span class="line">                tempParagraphing[j] = <span class="string">'&lt;p&gt;'</span> + trimmed + <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> tempDiary = tempParagraphing.join(<span class="string">''</span>);</span><br><span class="line">        <span class="keyword">if</span> (tempDiary.trim() != <span class="string">''</span>) &#123;</span><br><span class="line">            timeRangeAndDiaries[i] = <span class="string">'&lt;div class="diary-item"&gt;'</span> + tempDiary + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Join these converted time ranges and diaries into string.</span></span><br><span class="line"><span class="keyword">var</span> html = timeRangeAndDiaries.join(<span class="string">''</span>);</span><br><span class="line"><span class="comment">// console.log(html)</span></span><br><span class="line">fs.writeFileSync(<span class="string">'public/diaries.html'</span>, html);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>old blog</tag>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构之基础</title>
    <url>/2020/04/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>数据结构基础，了解数据结构的分类，认识一下抽象数据类。</p>
<a id="more"></a>

<h1 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h1><p><strong>内存中元素紧挨在一起的数据结构为顺序结构</strong>。在C语言中，声明一个整数结构类型长度为<code>5</code>的数组时，内存中会留出5个整数长度的连续空间用于存储数组。实际上，数组的指针可以说是指向在数组中的第一个元素。当要修改第4个元素时，计算机是找到了数组指针地址，跳跃3个整数长度的距离，从而找到第4个元素的位置。</p>
<h1 id="链式结构"><a href="#链式结构" class="headerlink" title="链式结构"></a>链式结构</h1><p><strong>内存中元素可连续也可不连续，通过指针寻找和连接元素的数据结构为链式结构</strong>。在Java语言中，链表（Linked List）和树（Tree）都属于链式结构。他们属于抽象的结构类型，类型所包含的元素被称为节点（Node）。链表节点中的值可以为整数类、浮点类、字符串等，包括抽象数据类；但链表节点中还会包含有节点的一个后继元素指针。树节点对比链表节点的不同在于树节点中可以包含有多个后继元素指针。总结起来就是<strong>链式结构节点在内存中连续摆放不是必须的</strong>，当计算机查找某个节点时，会走遍目标节点前的所有节点，从而顺着第一个节点的指针找到目标指针。</p>
<h1 id="比较顺序结构和链式结构"><a href="#比较顺序结构和链式结构" class="headerlink" title="比较顺序结构和链式结构"></a>比较顺序结构和链式结构</h1><p><img src="/gallery/data-structure-random-linked-ram.png" alt="顺序结构和链式结构在内存中的不同" loading="lazy"></p>
<ul>
<li>顺序结构在内存中有固定最大长度，而链式结构在内存中没有，所以在流动数据多的情况下，链式结构对空间利用更灵活。</li>
<li>顺序结构在内存中是元素之间是连续的，而链式结构在内存中很可能是不连续的，所以在查找元素时，通过地址计算公式查找，顺序结构的效率更高。</li>
<li>在首部添加元素或删除中间某个元素的情况下，链式结构的效率会更高，因为对比顺序结构，链式结构不需要重新排列。</li>
<li>顺序结构最大长度难以确定的情况下，会产生太多的储存空间“碎片”，而链式结构原本就是“碎片化”的。</li>
</ul>
<h1 id="C语言数据类型"><a href="#C语言数据类型" class="headerlink" title="C语言数据类型"></a>C语言数据类型</h1><p>原子/基本类型：short, int, long, float, double, char<br>结构/构造类型：数组, struct, union, enum<br>其他：指针，空（void）</p>
<h1 id="抽象数据类型（Abstract-Data-Type）"><a href="#抽象数据类型（Abstract-Data-Type）" class="headerlink" title="抽象数据类型（Abstract Data Type）"></a>抽象数据类型（Abstract Data Type）</h1><p>区别于基本数据类型，基本数据类型有设定数据占用空间的极限、数据表示的方式和内存中结构的特性；抽象数据类型基于基本数据类型形成更复杂的数据类型，例如链表（Linked List）和树（Tree）都属于抽象数据类。颜色（Color）、坐标（Point）等结构类也都属于抽象数据类。</p>
<blockquote>
<p>所谓抽象数据类型就是把数据类型和相关操作捆绑在一起。</p>
</blockquote>
<p>Color抽象数据类:<br>由Red、Green和Blue，3个范围为0-255的整数值表示颜色范围，加上一个范围为0-1的浮点型Alpha数值表示透明度。</p>
<p>Point抽象数据类:<br>由x、y和z，3个整数值表示三维空间中的坐标。</p>
<h1 id="抽象数据类型伪代码"><a href="#抽象数据类型伪代码" class="headerlink" title="抽象数据类型伪代码"></a>抽象数据类型伪代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ADT 抽象数据类型名</span><br><span class="line">Data</span><br><span class="line">  数据元素之间逻辑关系的定义</span><br><span class="line">Operation</span><br><span class="line">  操作</span><br><span class="line">endADT</span><br></pre></td></tr></table></figure>

<blockquote>
<p>本文参考：<br><a href="https://www.bilibili.com/video/BV1jW411K7yg" target="_blank" rel="noopener">【C语言描述】《数据结构和算法》（小甲鱼）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>抽象数据类</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构之线性表List</title>
    <url>/2020/04/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A8List/</url>
    <content><![CDATA[<p>线性表（List），了解线性表的基础知识，认识一下线性表的种类。</p>
<a id="more"></a>

<h1 id="线性表List"><a href="#线性表List" class="headerlink" title="线性表List"></a>线性表List</h1><p>线性表（List）：由另个或多个元素组成的有限序列。<strong>元素是有序的，可以被排列的</strong>。在有序结构中，某个元素<code>ai</code>前面的元素<code>ai-1</code>称为<strong>前驱元素</strong>，后面的元素<code>ai+1</code>称为<strong>后继元素</strong>。在Java语言中，数组（ArrayList）和链表（Linked List）都属于线性表。其中数组使用了顺序结构，而链表使用了链式结构。</p>
<p>线性表的数据对象集合为<code>{a1,a2,...,an-1,an}</code>，每个元素的类型均为<code>DataType</code>。<strong>数据元素之间的关系是一对一的关系。</strong>其中，除第一个元素<code>a1</code>外，每个元素有且只有一个直接前驱元素，除最后一个元素<code>an</code>外，每个元素有且只有一个直接后继元素。</p>
<h1 id="线性表伪代码"><a href="#线性表伪代码" class="headerlink" title="线性表伪代码"></a>线性表伪代码</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ADT 线性表（List）</span><br><span class="line">Data</span><br><span class="line">  数据对象集合 &#123;a1,a2,...,an-1,an&#125;</span><br><span class="line">Operation</span><br><span class="line">  init(*L)：初始化空线性表L</span><br><span class="line">  isEmpty(L)：判断线性表是否为空</span><br><span class="line">  clear(*L)：清空线性表</span><br><span class="line">  getElement(L,i,*e)：将线性表L中第i个元素返回给e</span><br><span class="line">  elementAt(L,e)：线性表L中查找与e相等的元素，返回元素的位置</span><br><span class="line">  insert(*L,i,e)：线性表L中第i个位置插入新元素e</span><br><span class="line">  delete(*L,i,*e)：删除线性表L中第i个位置元素，并返回该元素给e</span><br><span class="line">  length(L)：返回线性表L的元数个数</span><br><span class="line">endADT</span><br></pre></td></tr></table></figure>

<h1 id="线性表的顺序存储结构"><a href="#线性表的顺序存储结构" class="headerlink" title="线性表的顺序存储结构"></a>线性表的顺序存储结构</h1><p>线性表的顺序存储结构封装需要3个属性：</p>
<ul>
<li>存储空间初始位置，数组指针</li>
<li>线性表的最大长度，指存储空间总长度，初始化后不变</li>
<li>线性表的当前长度，指表中元素数量，大于等于0，小于表的最大长度</li>
</ul>
<h2 id="顺序存储结构的地址计算方法"><a href="#顺序存储结构的地址计算方法" class="headerlink" title="顺序存储结构的地址计算方法"></a>顺序存储结构的地址计算方法</h2><p><strong>注：<code>i</code>从“1”开始</strong></p>
<p>假设每个元素类型的<code>DataType</code>都需要占用<code>c</code>个储存单位（字节），那么线性表中第<code>i+1</code>个元素和第<code>i</code>个元素的存储位置的关系是（LOC为获得存储位置的函数）：</p>
<p><code>LOC(ai+1) = LOC(ai) + c</code></p>
<p>所以找第<code>i</code>个元素<code>ai</code>的储存位置可以又线性表初始指针指向的<code>a1</code>推算出：</p>
<p><strong><code>LOC(ai) = LOC(a1) + (i-1) * c</code></strong></p>
<p>通过这个公式，计算出线性表中任意位置的地址，所用的时间都是相同的，那么他的存储时间性能就是<code>O(1)</code>，<strong>这种结构通常被称为随机存储结构。</strong></p>
<h1 id="线性表的链式存储结构"><a href="#线性表的链式存储结构" class="headerlink" title="线性表的链式存储结构"></a>线性表的链式存储结构</h1><p>顺序存储结构最大的缺点，插入和删除需要移动大量元素，从而保持表中元素邻居的关系；链式存储结构通过携带后继元素的存储地址就解决了这个缺点。</p>
<p>链式存储结构的线性表中元素称为“存储映像”，也称为“节点（Node）”。每个节点都是由两部分组成：</p>
<ul>
<li>数据域：储存数据元素信息的域</li>
<li>指针域：存储直接后继元素地址的域</li>
</ul>
<h2 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h2><p><code>n</code>个节点链接成一个链表，即为线性表<code>(a1,a2,...,an-1,an)</code>的链式存储结构。因为此链表的每个节点中只包含一个指针域，所以叫做单链表。</p>
<p><img src="/gallery/data-structure-linked-list-normal.png" alt="单链表图示" loading="lazy"></p>
<p>单链表必须有一个头部加上0到多个节点。头指针是链表指向第一个节点的指针，如果链表有头结点，则头指针指向头结点。头结点携带第一个元素的节点指针，放在第一个节点之前，其数据域一般无意义，但也可以存放链表的长度。头结点不是必须的，但是头结点可以放一些对列表有用的变量。</p>
<p>尾指针是指向单链表的最后一个节点的指针，这个指针不是必须的，但是尾指针有好处，比如需要在尾部插入新节点。</p>
<p><strong>若线性表需要频繁查找，很少进行插入和删除操作是，宜采用顺序存储结构。</strong></p>
<p><strong>若需要频繁插入和删除时，宜采用单链表结构。</strong></p>
<h2 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h2><p>在内存中建立一个数组，在数组最大长度内的空间中再建立一个链表，这种链表就是静态链表。静态链表通过“游标（Cursor）”指向后继元素所处数组中的“下标（Index）”。下图为静态链表转普通链表，最大长度为<code>100</code>，第一个元素游标指向备用链表的头节点（既当前链表尾节点的游标，也是尾指针），最后一个元素游标指向当前链表头节点。</p>
<p><img src="/gallery/data-structure-linked-list-static-to-normal.png" alt="静态链表转普通链表" loading="lazy"></p>
<ul>
<li>数组中第一个和最后一个元素不存放数据</li>
<li>未使用的数组元素被称为备用链表</li>
<li>数组第一个元素，即<code>Index = 0</code>的元素的游标（Cursor）存放备用链表的第一个节点的下标</li>
<li>数组最后一个元素，即<code>Index = MAX_SIZE-1</code>的元素的游标（Cursor）存放当前链表的第一个节点的下标</li>
<li>静态链表初始化时，<code>Index = 0</code>的元素的游标应从<code>1</code>开始，而<code>Index = MAX_SIZE-1</code>的元素的游标则是<code>0</code>，表示空链表</li>
</ul>
<h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><p>在单链表中，如果不从头结点出发，就无法访问到全部节点。循环链表就解决了这个问题。只要有链表中某一节点的指针，就能跑完全部节点。当表为空时，头部后继指针指向头部本身。</p>
<p><strong>循环链表所用的方法就是把尾节点的空指针指向头节点，使单链表形成一个环，这种头尾相接的单链表被称为单循环链表，简称循环链表。</strong></p>
<p>原单链表判断尾节点用<code>node.next === null ?</code>，现在则是用<code>node.next === head ?</code>。</p>
<h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><p>对比单链表，双向链表的节点有两个指针：前驱指针和后继指针。双向列表允许从尾部往回跑。当表为空时，头部前驱指针和后继指针都指向头部本身。</p>
<h1 id="找单链表中间的节点的方法"><a href="#找单链表中间的节点的方法" class="headerlink" title="找单链表中间的节点的方法"></a>找单链表中间的节点的方法</h1><p>利用快慢指针原理：设置两个指针<code>*search</code>和<code>*middle</code>都指向单链表的头结点。其中<code>*search</code>的移动速度是<code>*middle</code>的2倍。当<code>*search</code>指向尾节点时，<code>*middle</code>正好就在中间。</p>
<p>在一个长度为100的单链表中，当<code>*search</code>指向第100个节点时，<code>*middle</code>指向第50个节点。</p>
<p>在一个长度为101的单链表中，当<code>*search</code>指向102（即超出长度）时，<code>*middle</code>指向第51个节点，正好在中间。</p>
<h1 id="判断一个链表是否有环"><a href="#判断一个链表是否有环" class="headerlink" title="判断一个链表是否有环"></a>判断一个链表是否有环</h1><p>方法一：设置两个指针<code>*q</code>和<code>*b</code>。<code>*q</code>一直在走的情况下，每遇到一个节点，<code>*b</code>就从新从头结点开始走。如果<code>*q</code>所在当前步数等于<code>*b</code>从头开始数的步数，则<code>*q</code>继续往前走一步，而<code>*b</code>从新走。如果<code>*q</code>所在当前步数不等于<code>*b</code>的从头开始数的步数，则存在环。这种方法可以找到环所在节点。</p>
<p>方法二：设置两个指针<code>*q</code>和<code>*b</code>都指向单链表的头结点。其中<code>*q</code>的移动速度是<code>*b</code>的2倍，若在某个时候<code>*q == *b</code>，则存在环。一般偶数量节点的单循环链表跑两次后<code>*q == *b</code>。</p>
<blockquote>
<p>本文参考：<br><a href="https://www.bilibili.com/video/BV1jW411K7yg" target="_blank" rel="noopener">【C语言描述】《数据结构和算法》（小甲鱼）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>线性表</tag>
        <tag>List</tag>
      </tags>
  </entry>
  <entry>
    <title>网易云音乐歌单JS音乐播放器JS代码</title>
    <url>/2019/01/17/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95JS%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8JS%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p><img src="/gallery/yaoplayer-0.jpg" alt="JS音乐播放器截图" loading="lazy"><br>网易云音乐歌单JS音乐播放器JS代码<br>感谢<a href="//github.com/messoer/mess-api-doc" target="_blank" rel="noopener">MessAPI</a>提供的网易云音乐API<br>代码依赖jQuery和fontawesome</p>
<a id="more"></a>

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.<span class="keyword">get</span>('https://v1.itooi.cn/netease/songList', &#123;</span><br><span class="line">	<span class="string">'id'</span>: <span class="number">998389130</span> <span class="comment">// 此处歌单ID</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (json.data != <span class="literal">undefined</span> &amp;&amp; json.data != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">		json.data.tracks != <span class="literal">undefined</span> &amp;&amp; json.data.tracks != <span class="literal">null</span>) &#123;</span><br><span class="line">		$(<span class="string">'body'</span>).append(<span class="keyword">new</span> YaoPlayer(<span class="string">'YaoPlayer'</span>, json.data.tracks.map(<span class="function"><span class="params">song</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">'name'</span>: song.name,</span><br><span class="line">        <span class="string">'singer'</span>: song.artists.map(<span class="function"><span class="params">artist</span> =&gt;</span> artist.name).join(<span class="string">', '</span>),</span><br><span class="line">        <span class="string">'lrc'</span>: <span class="string">'Not found'</span>,</span><br><span class="line">        <span class="string">'pic'</span>: song.album.picUrl,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">`https://v1.itooi.cn/netease/url?id=<span class="subst">$&#123;song.id&#125;</span>&amp;quality=128`</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;)));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;, <span class="string">'json'</span>);</span><br></pre></td></tr></table></figure>

<h2 id="插件全代码"><a href="#插件全代码" class="headerlink" title="插件全代码"></a>插件全代码</h2>]]></content>
      <categories>
        <category>Blog</category>
        <category>Plugin</category>
      </categories>
      <tags>
        <tag>音乐播放器</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构之栈Stack和队列Queue</title>
    <url>/2020/04/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%88Stack%E5%92%8C%E9%98%9F%E5%88%97Queue/</url>
    <content><![CDATA[<p>栈（Stack）和队列（Queue），了解栈和队列的基础知识，学习它们的基础应用。</p>
<a id="more"></a>

<h1 id="栈Stack"><a href="#栈Stack" class="headerlink" title="栈Stack"></a>栈Stack</h1><p>栈Stack是一种线性结构，是线性表的一种具体形式。栈这种后进先出（Last In First Out，LIFO）的应用非常广泛，例如网页的前进后退功能，编辑器的后一步前一步功能，方法调用时的函数栈等等。</p>
<p>栈Stack的特性：</p>
<ul>
<li>栈的元素必须“后进先出”</li>
<li>栈的操作只能于线性表表尾进行</li>
<li>栈的表尾被称为栈顶（Top），栈的表头被称为栈底（bottom）</li>
</ul>
<p>栈Stack的操作：</p>
<ul>
<li>插入操作（Push），进栈</li>
<li>删除操作（Pop），出栈</li>
</ul>
<p><img src="/gallery/data-structure-stack.png" alt="Stack Pop And Push" loading="lazy"></p>
<h2 id="栈的顺序存储结构"><a href="#栈的顺序存储结构" class="headerlink" title="栈的顺序存储结构"></a>栈的顺序存储结构</h2><p>应用顺序存储结构的栈，元素必须从开始表尾进行操作，从而节省下元素前移补充位置的操作，而不像链式结构可以从表头操作。当栈初始化时，不含有任何数据的栈被称为空栈，此时栈顶就是栈底。</p>
<h2 id="栈的链式存储结构"><a href="#栈的链式存储结构" class="headerlink" title="栈的链式存储结构"></a>栈的链式存储结构</h2><p><strong>栈一般使用顺序存储结构</strong>实现。使用链式存储结构时，栈底为链表头部，栈顶为链表尾部。</p>
<h2 id="使用栈来进行进制转换"><a href="#使用栈来进行进制转换" class="headerlink" title="使用栈来进行进制转换"></a>使用栈来进行进制转换</h2><p>例子，使用顺序存储结构的栈计算把<code>8</code>位数的二进制数转换成十进制数。</p>
<figure class="highlight js"><figcaption><span>Javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> stack = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]; <span class="comment">// 11001001 (2)</span></span><br><span class="line"><span class="comment">// 1*2^0 + 0*2^1 + 0*2^2 + 1*2^3 + 0*2^4 + 0*2^5 + 1*2^6 + 1*2^7</span></span><br><span class="line"><span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> power = <span class="number">0</span>; <span class="comment">// start with power of 0 in first digit</span></span><br><span class="line"><span class="keyword">while</span> (stack.length) &#123;</span><br><span class="line">  result += stack.pop() * <span class="built_in">Math</span>.pow(<span class="number">2</span>, power++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// result = 201 (10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Faster way in JavaScript</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'11001001'</span>, <span class="number">2</span>).toString(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>

<p>例子，使用顺序存储结构的栈计算把<code>8</code>位数的二进制数转换成八进制数。</p>
<figure class="highlight js"><figcaption><span>Javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> stack = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]; <span class="comment">// 11001001 (2)</span></span><br><span class="line"><span class="comment">// 001=&gt;1, 001=&gt;1, 11=&gt;3, final 311 (8)</span></span><br><span class="line"><span class="keyword">let</span> temp = [];</span><br><span class="line"><span class="keyword">while</span> (stack.length) &#123;</span><br><span class="line">  <span class="comment">// 3-digit pair</span></span><br><span class="line">  <span class="keyword">let</span> d0 = stack.pop() | <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> d1 = (stack.pop() | <span class="number">0</span>) * <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">let</span> d2 = (stack.pop() | <span class="number">0</span>) * <span class="number">4</span>;</span><br><span class="line">  <span class="keyword">let</span> D = d0 + d1 + d2;</span><br><span class="line">  temp.push(D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> result = temp.reverse().join(<span class="string">''</span>); <span class="comment">// result = 311 (8)</span></span><br><span class="line">temp = <span class="built_in">parseInt</span>(result, <span class="number">8</span>); <span class="comment">// 201 (10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Faster way in JavaScript</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'11001001'</span>, <span class="number">2</span>).toString(<span class="number">8</span>);</span><br></pre></td></tr></table></figure>

<p>例子，使用顺序存储结构的栈计算把<code>8</code>位数的二进制数转换成十六进制数。</p>
<figure class="highlight js"><figcaption><span>Javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> stack = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]; <span class="comment">// 11001001 (2)</span></span><br><span class="line"><span class="comment">// 1001=&gt;9, 1100=&gt;C, final C9 (16)</span></span><br><span class="line"><span class="keyword">let</span> letters = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>];</span><br><span class="line"><span class="keyword">let</span> temp = [];</span><br><span class="line"><span class="keyword">while</span> (stack.length) &#123;</span><br><span class="line">  <span class="comment">// 4-digit pair</span></span><br><span class="line">  <span class="keyword">let</span> d0 = stack.pop() | <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> d1 = (stack.pop() | <span class="number">0</span>) * <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">let</span> d2 = (stack.pop() | <span class="number">0</span>) * <span class="number">4</span>;</span><br><span class="line">  <span class="keyword">let</span> d3 = (stack.pop() | <span class="number">0</span>) * <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">let</span> D = d0 + d1 + d2 + d3;</span><br><span class="line">  temp.push(D &gt; <span class="number">9</span> ? letters[D % <span class="number">10</span>] : D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> result = temp.reverse().join(<span class="string">''</span>); <span class="comment">// result = C9 (16)</span></span><br><span class="line">temp = <span class="built_in">parseInt</span>(result, <span class="number">16</span>); <span class="comment">// 201 (10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Faster way in JavaScript</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'11001001'</span>, <span class="number">2</span>).toString(<span class="number">16</span>);</span><br></pre></td></tr></table></figure>

<h2 id="使用栈来计算普通数学表达式"><a href="#使用栈来计算普通数学表达式" class="headerlink" title="使用栈来计算普通数学表达式"></a>使用栈来计算普通数学表达式</h2><p>计算<code>1 + (2 - 3 * 4.5) / 6</code>;</p>
<p>第一步，转换中缀表达式到后缀表达式（逆波兰表达式）。</p>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// Expected Result: 1 2 3 4.5 * - 6 / +</span></span><br><span class="line"><span class="keyword">let</span> input = <span class="string">'1 + (2 - 3 * 4.5) / 6'</span>;</span><br><span class="line">input = input.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>); <span class="comment">// 1+(2-3*4.5)/6</span></span><br><span class="line"><span class="keyword">let</span> numbers = input.split(<span class="regexp">/[\+\-\*\/\(\)]+/</span>);</span><br><span class="line"><span class="comment">// ["1", "2", "3", "4.5", "6"]</span></span><br><span class="line">numbers.forEach(<span class="function">(<span class="params">num, i</span>) =&gt;</span> &#123;</span><br><span class="line">  input = input.replace(num, i); <span class="comment">// 0+(1-2*3)/4</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">let</span> result = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">let</span> stack = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> value = input.charAt(i);</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/[\+\-\*\/\(\)]/</span>.test(value)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (value === <span class="string">')'</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> symbol = stack.pop();</span><br><span class="line">      <span class="keyword">while</span> (symbol !== <span class="string">'('</span>) &#123;</span><br><span class="line">        result += <span class="string">`<span class="subst">$&#123;symbol&#125;</span> `</span>;</span><br><span class="line">        symbol = stack.pop();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (stack.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> symbol = stack.pop();</span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/\*\//</span>.test(symbol) &amp;&amp; !<span class="regexp">/\*\//</span>.test(value)) &#123;</span><br><span class="line">          result += <span class="string">`<span class="subst">$&#123;symbol&#125;</span> `</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          stack.push(symbol);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      stack.push(value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result += <span class="string">`<span class="subst">$&#123;numbers[value]&#125;</span> `</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (stack.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  result += <span class="string">`<span class="subst">$&#123;stack.pop()&#125;</span> `</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// result = "1 2 3 4.5 * - 6 / + "</span></span><br></pre></td></tr></table></figure>

<p>第二步，计算转换后的逆波兰表达式，最后输出结果。</p>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// Expected Result: -0.9166666666666667</span></span><br><span class="line"><span class="keyword">let</span> input = <span class="string">'1 2 3 4.5 * - 6 / + '</span>;</span><br><span class="line">input = input.trim().split(<span class="regexp">/\s/</span>);</span><br><span class="line"><span class="comment">// ["1", "2", "3", "4.5", "*", "-", "6", "/", "+"]</span></span><br><span class="line"><span class="keyword">let</span> stack = [];</span><br><span class="line"><span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> value = input[i];</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">isNaN</span>(value)) &#123;</span><br><span class="line">    <span class="keyword">let</span> backNum = stack.pop();</span><br><span class="line">    <span class="keyword">let</span> frontNum = stack.pop();</span><br><span class="line">    <span class="keyword">let</span> subResult = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (value === <span class="string">'+'</span>) &#123;</span><br><span class="line">      subResult = frontNum + backNum;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="string">'-'</span>) &#123;</span><br><span class="line">      subResult = frontNum - backNum;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="string">'*'</span>) &#123;</span><br><span class="line">      subResult = frontNum * backNum;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value === <span class="string">'/'</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (backNum === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Divisor cannot be 0'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      subResult = frontNum / backNum;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Operator must be "+", "-", "*" or "/"'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (stack.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      stack.push(subResult);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result = subResult;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    stack.push(<span class="built_in">parseFloat</span>(value));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// result = -0.9166666666666667</span></span><br></pre></td></tr></table></figure>

<h1 id="队列Queue"><a href="#队列Queue" class="headerlink" title="队列Queue"></a>队列Queue</h1><p>队列Queue是一种线性结构，也是线性表的一种具体形式。队列这种先进先出（First In First Out，FIFO）的应用也非常广泛，是只允许在一段进行插入操作，而在另一端进行删除操作的线性表，例如输入缓冲功能，任务顺序加载功能等等。</p>
<p>队列可以用顺序储存结构实现，但是跟栈相反，<strong>队列一般都用链式储存结构</strong>实现。</p>
<p>队列Queue的特性：</p>
<ul>
<li>队列的元素必须“后进先出”</li>
<li>队列的操作只能于线性表头尾进行</li>
</ul>
<p>队列Queue的操作：</p>
<ul>
<li>插入操作（Offer），进队列</li>
<li>删除操作（Poll），出队列</li>
</ul>
<p><img src="/gallery/data-structure-queue.png" alt="Queue Offer And Poll" loading="lazy"></p>
<blockquote>
<p>本文参考：<br><a href="https://www.bilibili.com/video/BV1jW411K7yg" target="_blank" rel="noopener">【C语言描述】《数据结构和算法》（小甲鱼）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>Stack</tag>
        <tag>Queue</tag>
      </tags>
  </entry>
  <entry>
    <title>算法之基础</title>
    <url>/2020/04/18/%E7%AE%97%E6%B3%95%E4%B9%8B%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>算法基础，了解算法的基础知识，算法的种类，知道什么是好算法。</p>
<a id="more"></a>

<h1 id="算法特性"><a href="#算法特性" class="headerlink" title="算法特性"></a>算法特性</h1><ul>
<li><strong>输入</strong>：可以有零个或多个参数</li>
<li><strong>输出</strong>：必须有一个或多个结果</li>
<li><strong>有穷性</strong>：算法必须会结束，没有无限循环</li>
<li><strong>确定性</strong>：有唯一结果</li>
<li><strong>可行性</strong>：算法每一步都能通过执行有限次数完成</li>
</ul>
<h1 id="算法设计要求"><a href="#算法设计要求" class="headerlink" title="算法设计要求"></a>算法设计要求</h1><ul>
<li><strong>正确性</strong>：算法至少具有输入、输出和过程明确的加工处理，正确反映问题的需求，最后得到期望的答案<ul>
<li>算法程序没有语法错误</li>
<li>算法程序对于合法输入能产生期望的答案</li>
<li>算法程序对于非法输入能产生警告和提示</li>
<li>算法程序对于故意掉难得测试输入都能产生期望的结果</li>
</ul>
</li>
<li><strong>可读性</strong>：算法便于阅读、理解和交流</li>
<li><strong>健壮性</strong>：能够处理异常、崩溃或莫名其妙的结果</li>
<li><strong>高时间效率和低存储量</strong>：算法要考虑处理速度和内存用量</li>
</ul>
<h1 id="算法效率度量方法"><a href="#算法效率度量方法" class="headerlink" title="算法效率度量方法"></a>算法效率度量方法</h1><ul>
<li>事后统计方法：通过执行多个输入测试，记录执行时间平均值</li>
<li>事前估算方法：通过统计方法对算法进行估算，涉及以下因素<ol>
<li>算法策略，<strong>例子使用公式或者循环等</strong></li>
<li>编译后的代码质量，<strong>基础操作的次数统计</strong></li>
<li>问题的输入规模，<strong>例子数值大小或元素数量等</strong></li>
<li>机器执行指令的速度，<strong>硬件性能</strong></li>
</ol>
</li>
</ul>
<p><strong>算法基础种类分别有：<code>1</code>、<code>n</code>、<code>n*n</code>。</strong></p>
<p>一般使用公式或瀑布式条件判断的算法策略属于<code>1</code>；使用单个循环的属于<code>n</code>；使用嵌套循环的属于<code>n*n</code>。3种算法中往往常数算法<code>1</code>要优于<code>n</code>和<code>n*n</code>。给以下基础操作次数公式分类：</p>
<ul>
<li><code>1</code>：<code>3</code>、<code>5</code>、<code>9</code>等</li>
<li><code>n</code>：<code>n</code>、<code>n+1</code>、<code>2n+3</code>等</li>
<li><code>n*n</code>：<code>n^2</code>、<code>n^2+5</code>、<code>2n^3+1</code>等</li>
</ul>
<p><strong>一般判断算法好坏，更应该关注函数公式的主项：指数最高项。</strong><br>比如算法<code>2n^2+n+3</code>对比算法<code>n^3+2n+1</code>，因为<code>2n^2</code>指数低于<code>n^3</code>，所以算法<code>2n^2+n+3</code>优于算法<code>n^3+2n+1</code>。</p>
<h2 id="怎么分析一个算法的输入时间？"><a href="#怎么分析一个算法的输入时间？" class="headerlink" title="怎么分析一个算法的输入时间？"></a>怎么分析一个算法的输入时间？</h2><ul>
<li>抽象算法：去除算法中循环的外包装、条件的判断、变量的声明、打印输出等操作</li>
<li>指令计数：统计关联的输入模式下基础操作的数量</li>
</ul>
<h2 id="求和1-100的算法例子分析"><a href="#求和1-100的算法例子分析" class="headerlink" title="求和1-100的算法例子分析"></a>求和1-100的算法例子分析</h2><p>以下<em>算法一</em>，算法策略使用<code>循环</code>，编译后的代码质量为<code>n</code>次，问题的输入规模<code>100</code>，机器执行指令的速度取决于算法运行所在计算机。</p>
<figure class="highlight js"><figcaption><span>JavaScript 算法一</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>, i = <span class="number">1</span>, n = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (; i &lt;= n; i++) &#123;</span><br><span class="line">  sum += i;                  <span class="comment">// 执行 n 次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以下<em>算法二</em>，算法策略使用<code>公式</code>，编译后的代码质量为<code>1</code>次，问题的输入规模<code>100</code>，机器执行指令的速度取决于算法运行所在计算机。</p>
<figure class="highlight js"><figcaption><span>JavaScript 算法二</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>, i = <span class="number">1</span>, n = <span class="number">100</span>;</span><br><span class="line">sum = (i + n) * n  / <span class="number">2</span>;      <span class="comment">// 执行 1 次</span></span><br></pre></td></tr></table></figure>

<p>对比以上算法，它们的输入规模都是<code>100</code>，在同一计算机运行的情况下，<strong>算法一</strong>的基础操作次数受输入规模的影响，造成工作量超出<strong>算法二</strong>，<strong>所以算法二效率更高</strong>。</p>
<h2 id="求和3x3表格内数值的例子分析"><a href="#求和3x3表格内数值的例子分析" class="headerlink" title="求和3x3表格内数值的例子分析"></a>求和3x3表格内数值的例子分析</h2><p>以下<em>表格遍历例子</em>，算法策略使用<code>嵌套的循环</code>，编译后的代码质量为<code>n^2</code>次，问题的输入规模<code>3x3</code>，机器执行指令的速度取决于算法运行所在计算机。</p>
<figure class="highlight js"><figcaption><span>JavaScript 表格遍历求和例子</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>, </span><br><span class="line">    table = [</span><br><span class="line">      [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">      [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">      [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],</span><br><span class="line">    ];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= table.length; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt;= table[i].length; j++) &#123;</span><br><span class="line">    sum += table[i][j];      <span class="comment">// 执行 n^2 次</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上算法，它根据表格的大小，基础操作的数量是以指数上升的，<strong>所以<code>3x3</code>的表格内数值总和计算一共有基础操作<code>3^2</code>等于9次</strong>。</p>
<h1 id="用大O记法表示算法时间复杂度"><a href="#用大O记法表示算法时间复杂度" class="headerlink" title="用大O记法表示算法时间复杂度"></a>用大O记法表示算法时间复杂度</h1><p>复杂度分为：<strong>时间复杂度</strong>或<strong>空间复杂度</strong><br><strong>一般计算“复杂度”是指“时间复杂度”，而不是空间复杂度，目前主流还是时间复杂度，不求用内存换取时间。</strong></p>
<p><strong>T(n) = O(f(n))</strong>，<code>f(n)</code>为算法的函数或入口，随着输入规模<code>n</code>的增长，<code>T(n)</code>增长最慢的算法为最优算法。因为以下原因：</p>
<p><strong>基础操作数量 = 时间</strong></p>
<p>所以当<code>n</code>翻倍时，<em>基础操作数量</em>增长越少，花费的<em>时间</em>越少。</p>
<p>上面用到的三个求和算法例子，如果用大O表示算法的时间复杂度分别为<code>O(1)</code>、<code>O(n)</code>、<code>O(n^2)</code>。</p>
<p><strong>大O记法表示时间的增长率</strong></p>
<ul>
<li><code>O(1)</code>：增长率不变</li>
<li><code>O(n)</code>：增长率倍数增长</li>
<li><code>O(n^2)</code>：增长率指数增长</li>
</ul>
<h2 id="推导大O阶方法"><a href="#推导大O阶方法" class="headerlink" title="推导大O阶方法"></a>推导大O阶方法</h2><p>用一下方法来推导<code>5</code>、<code>2n+3</code>、<code>n(n+1)/2</code>和<code>O(logn)</code>的大O阶：</p>
<ol>
<li>用常数1取代所有加法常数</li>
<li>只保留最高阶项</li>
<li>最高阶项不是1的话，去除这个项相乘的常数</li>
</ol>
<p><code>5</code> =&gt; <code>O(1)</code>，<br><code>2n+3</code> =&gt; <code>O(n)</code>，<br><code>n(n+1)/2</code> =&gt; <code>O(n^2)</code></p>
<p>一面这个例子的话就是<code>O(logn)</code>：</p>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">1</span>, n = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; n) &#123;</span><br><span class="line">  i *= <span class="number">2</span>; <span class="comment">// 2^x = n，那么 x = log(2)n，x为循环次数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="常见的时间复杂度"><a href="#常见的时间复杂度" class="headerlink" title="常见的时间复杂度"></a>常见的时间复杂度</h2><table>
<thead>
<tr>
<th align="center">例子</th>
<th align="center">时间复杂度</th>
<th align="center">术语</th>
</tr>
</thead>
<tbody><tr>
<td align="center">5</td>
<td align="center">O(1)</td>
<td align="center">常数阶</td>
</tr>
<tr>
<td align="center">3n+4</td>
<td align="center">O(n)</td>
<td align="center">线性阶</td>
</tr>
<tr>
<td align="center">3n^2+4n+5</td>
<td align="center">O(n^2)</td>
<td align="center">平方阶</td>
</tr>
<tr>
<td align="center">3log(2)n+4</td>
<td align="center">O(logn)</td>
<td align="center">对数阶</td>
</tr>
<tr>
<td align="center">2n+3nlog(2)n+14</td>
<td align="center">O(nlogn)</td>
<td align="center">nlogn阶</td>
</tr>
<tr>
<td align="center">n^3+2n^2+4n+6</td>
<td align="center">O(n^3)</td>
<td align="center">立方阶</td>
</tr>
<tr>
<td align="center">2^n</td>
<td align="center">O(2^n)</td>
<td align="center">指数阶</td>
</tr>
</tbody></table>
<p>时间复杂度对比：<br><strong><code>O(1)</code> &lt; <code>O(logn)</code> &lt; <code>O(n)</code> &lt; <code>O(nlogn)</code> &lt; <code>O(n^2)</code> &lt; <code>O(n^3)</code> &lt; <code>O(2^n)</code> &lt; <code>O(n!)</code> &lt; <code>O(n^n)</code></strong></p>
<blockquote>
<p>本文参考：<br><a href="https://www.bilibili.com/video/BV1jW411K7yg" target="_blank" rel="noopener">【C语言描述】《数据结构和算法》（小甲鱼）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>Big O</tag>
      </tags>
  </entry>
  <entry>
    <title>测试区2048JS代码</title>
    <url>/2019/01/17/%E6%B5%8B%E8%AF%95%E5%8C%BA2048JS%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p><img src="/gallery/yao2048-0.jpg" alt="测试区Yao2048截图" loading="lazy"><br>测试区2048JS代码</p>
<a id="more"></a>

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _2048 = <span class="keyword">new</span> Yao2048(<span class="built_in">document</span>.body);</span><br><span class="line">_2048.show();</span><br></pre></td></tr></table></figure>

<h2 id="JS全代码"><a href="#JS全代码" class="headerlink" title="JS全代码"></a>JS全代码</h2>
]]></content>
      <categories>
        <category>Blog</category>
        <category>Plugin</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>2048</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo主题Mustom使用指南（对应主题1.0版）</title>
    <url>/2020/04/15/Hexo%E4%B8%BB%E9%A2%98Mustom%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<ul>
<li>本主题<a href="//github.com/jinyaoMa/hexo-theme-mustom" target="_blank" rel="noopener">Mustom</a>是我参考了卡片式和窗口展示的样式设计的Hexo主题。</li>
<li>本主题通过大量的replaceWith函数和PJAX来加载，而且用了Live2D的插件，初始加载时回流特别厉害。</li>
<li>本主题可以衍生一个CSS的框架，但是作者本人目前还是在给每个组件都弄一个单独的样式表。</li>
<li>本主题把各类资源文件都分门别类了，在以后添加内容方面应该还是较方便的。</li>
</ul>
<a id="more"></a>

<h1 id="Hexo根目录结构"><a href="#Hexo根目录结构" class="headerlink" title="Hexo根目录结构"></a>Hexo根目录结构</h1><p><strong>注：主题文件可以下载<a href="//github.com/jinyaoMa/ma-jinyao.cn" target="_blank" rel="noopener">本站</a>所有源代码后，通过复制粘贴<code>themes/mustom</code>文件夹获得，或者下载<a href="//github.com/jinyaoMa/hexo-theme-mustom" target="_blank" rel="noopener">Mustom</a>所有源代码获得</strong><br><strong>注：以下文件及文件夹都是使用Mustom主题必要的结构</strong></p>
<p>先来看看<a href="//github.com/jinyaoMa/ma-jinyao.cn" target="_blank" rel="noopener">本站</a>的根目录结构。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─scaffolds    : 模板</span><br><span class="line">├─source       : 内容资源文件夹</span><br><span class="line">├─themes       : 下载的主题放这里</span><br><span class="line">├─package.json : 里面可以看我都用了什么没有魔改过的Hexo插件</span><br><span class="line">├─_config.yml  : 根配置文件</span><br></pre></td></tr></table></figure>

<p>这就是一个普通Hexo建站的初始结构。这里主要讲下，<strong>使用我的Mustom主题时，可以使用<code>scaffolds</code>里我的模板，里面包含了必要的front-matter变量。可以复制粘贴整个<code>scaffolds</code>文件去覆盖原本的文件夹。推荐按照<a href="//github.com/jinyaoMa/ma-jinyao.cn" target="_blank" rel="noopener">本站</a>里的<code>package.json</code>来安装依赖，因为基本上安装的依赖都是用于优化和兼容。可以复制粘贴本站的<code>package.json</code>去替换原本的文件，之后运行命令<code>npm i</code>安装依赖。之后所有的例子默认都使用了我的模板和依赖之后的操作。</strong></p>
<h1 id="config-yml根配置文件"><a href="#config-yml根配置文件" class="headerlink" title="_config.yml根配置文件"></a>_config.yml根配置文件</h1><p><strong>注：使用本主题的你可以在上面添加变量和修改变量的值，但是最好不要删除某一个变量，你可以留个空字符串</strong><br><strong>可以在复制粘贴以下配置之后，通过网站效果慢慢改</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">"耀 の 个人网站 | Mark の Personal Website"</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">"耀の个人网站, 耀的个人网站, Mark の Personal Website, Mark's Personal Website, 耀的部落阁, 耀の部落阁, jinyaoMa, Mustom, Hexo"</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">jinyaoMa</span> <span class="string">(</span> <span class="string">耀</span> <span class="string">/</span> <span class="string">Mark</span> <span class="string">)</span></span><br><span class="line"><span class="attr">year:</span> <span class="number">2019</span> <span class="comment"># 建站年</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ma-jinyao.cn</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">docs</span> <span class="comment"># 方便使用Github Page</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">code</span> <span class="comment"># markdown使用include_code标签</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"code/*.*"</span> <span class="comment"># 排除code_dir</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"extension/**/*.html"</span> <span class="comment"># 排除extension</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"*.html"</span> <span class="comment"># 如果在在主目录source文件夹里放了搜索引擎验证的.html文件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"CNAME"</span> <span class="comment"># 如果在在主目录source文件夹里放了CNAME文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">"  "</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## Use post's date for updated date unless set in front-matter</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">mustom</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">all_minifier:</span> <span class="literal">true</span> <span class="comment"># 如果装了 hexo-all-minifier</span></span><br><span class="line"><span class="attr">markdown:</span> <span class="comment"># 如果换了原装 hexo-renderer-marked, 用了 hexo-renderer-markdown-it</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">'“”‘’'</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">'v'</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">headerlink</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">'left'</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">nofollow:</span> <span class="comment"># 如果装了 hexo-filter-nofollow</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">sitemap:</span> <span class="comment"># 如果装了 hexo-generator-sitemap</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">rel:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">autoprefixer:</span> <span class="comment"># 如果装了 hexo-autoprefixer</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"*.min.css"</span></span><br><span class="line">  <span class="attr">overrideBrowserslist:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"last 2 versions"</span></span><br><span class="line"><span class="attr">babelify:</span> <span class="comment"># 如果装了 hexo-renderer-babelify + @babel/preset-env</span></span><br><span class="line">  <span class="attr">presets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"@babel/preset-env"</span></span><br><span class="line">  <span class="attr">sourceMaps:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="comment"># 如果装了 hexo-filter-mathjax</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">none</span> <span class="comment"># or 'ams' or 'all'</span></span><br><span class="line">  <span class="attr">single_dollars:</span> <span class="literal">true</span> <span class="comment"># enable single dollar signs as in-line math delimiters</span></span><br><span class="line">  <span class="attr">cjk_width:</span> <span class="number">0.9</span> <span class="comment"># relative CJK char width</span></span><br><span class="line">  <span class="attr">normal_width:</span> <span class="number">0.6</span> <span class="comment"># relative normal (monospace) width</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/source/asset/js/common/*.js"</span> <span class="comment"># 如果装了 hexo-renderer-babelify</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/source/asset/js/part/*.js"</span> <span class="comment"># 如果装了 hexo-renderer-babelify</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/source/asset/js/plugin/!(L2Dwidget.0.min.js)"</span> <span class="comment"># 如果装了 hexo-renderer-babelify</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 百度主动推送</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">1000</span> <span class="comment"># 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">ma-jinyao.cn</span> <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">""</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidu_translate:</span> <span class="comment"># 用于划词翻译组件</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">""</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="attr">valine:</span> <span class="comment"># 用于评论组件</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">""</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索引擎验证</span></span><br><span class="line"><span class="attr">google_site_verification:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>

<h1 id="themes-mustom目录结构"><a href="#themes-mustom目录结构" class="headerlink" title="themes/mustom目录结构"></a>themes/mustom目录结构</h1><p>接下来看看<a href="//github.com/jinyaoMa/ma-jinyao.cn/tree/master/themes/mustom" target="_blank" rel="noopener">themes/mustom</a>的目录结构。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐&#x2F;一言组件配置、新增组件时涉及</span><br><span class="line">├─source : 主题资源文件夹</span><br><span class="line">|   ├─browser.ejs : 不用babelify时旧浏览器会重定向到这个页面</span><br><span class="line">|   ├─robots.txt</span><br><span class="line">|   ├─sw.tpl : pwa需要加载的service worker模板</span><br><span class="line">|   ├─asset</span><br><span class="line">|   |   ├─part : 所有组件模板文件放这</span><br><span class="line">|   |   |  ├─audioplayer.ejs</span><br><span class="line">|   |   |  ├─brand.ejs</span><br><span class="line">|   |   |  ├─codelib.ejs</span><br><span class="line">|   |   |  ├─comment.ejs</span><br><span class="line">|   |   |  ├─extension.ejs</span><br><span class="line">|   |   |  ├─footer.ejs</span><br><span class="line">|   |   |  ├─gallery.ejs</span><br><span class="line">|   |   |  ├─goingto.ejs</span><br><span class="line">|   |   |  ├─hitokoto.ejs</span><br><span class="line">|   |   |  ├─menus.ejs</span><br><span class="line">|   |   |  ├─page.ejs</span><br><span class="line">|   |   |  ├─panels.ejs</span><br><span class="line">|   |   |  ├─pather.ejs</span><br><span class="line">|   |   |  ├─post.ejs</span><br><span class="line">|   |   |  ├─recentposts.ejs</span><br><span class="line">|   |   |  ├─records.ejs</span><br><span class="line">|   |   |  ├─search.ejs</span><br><span class="line">|   |   |  ├─settings.ejs</span><br><span class="line">|   |   |  ├─sitename.ejs</span><br><span class="line">|   |   |  ├─skin.ejs</span><br><span class="line">|   |   |  ├─timeline.ejs</span><br><span class="line">|   |   |  ├─toc.ejs</span><br><span class="line">|   |   |  ├─translater.ejs</span><br><span class="line">|   |   |  ├─xaside.ejs</span><br><span class="line">|   |   |  ├─xcanvas.ejs</span><br><span class="line">|   |   |  ├─xdrawer.ejs</span><br><span class="line">|   |   |  └xsearch.ejs</span><br><span class="line">|   |   ├─live2d : Live2D的文件放这</span><br><span class="line">|   |   |   ├─haruto.model.json</span><br><span class="line">|   |   |   ├─haruto.physics.json</span><br><span class="line">|   |   |   ├─mtn</span><br><span class="line">|   |   |   |  ├─01.mtn</span><br><span class="line">|   |   |   |  ├─02.mtn</span><br><span class="line">|   |   |   |  ├─03.mtn</span><br><span class="line">|   |   |   |  ├─04.mtn</span><br><span class="line">|   |   |   |  ├─05.mtn</span><br><span class="line">|   |   |   |  ├─06.mtn</span><br><span class="line">|   |   |   |  ├─07.mtn</span><br><span class="line">|   |   |   |  ├─08.mtn</span><br><span class="line">|   |   |   |  ├─09.mtn</span><br><span class="line">|   |   |   |  └idle_02.mtn</span><br><span class="line">|   |   |   ├─moc</span><br><span class="line">|   |   |   |  ├─haruto.moc</span><br><span class="line">|   |   |   |  ├─haruto.2048</span><br><span class="line">|   |   |   |  |      └texture_00.png</span><br><span class="line">|   |   ├─lang : 所有的语言界面资源文件放这</span><br><span class="line">|   |   |  ├─en.yml : 英文</span><br><span class="line">|   |   |  └zh-cn.yml : 中文</span><br><span class="line">|   |   ├─js : 所有的JS资源文件放这</span><br><span class="line">|   |   | ├─main.js : 管理所有资源的加载和程序</span><br><span class="line">|   |   | ├─nomodule.js : 不使用babelify时用得到的旧浏览器重定向</span><br><span class="line">|   |   | ├─plugin : 所有第三方JS插件模块</span><br><span class="line">|   |   | |   ├─APlayer.min.js</span><br><span class="line">|   |   | |   ├─av-min.js</span><br><span class="line">|   |   | |   ├─evanyou.js</span><br><span class="line">|   |   | |   ├─L2Dwidget.0.min.js</span><br><span class="line">|   |   | |   ├─L2Dwidget.min.js</span><br><span class="line">|   |   | |   ├─md5.min.js</span><br><span class="line">|   |   | |   ├─Meting.min.js</span><br><span class="line">|   |   | |   ├─socialShare.min.js</span><br><span class="line">|   |   | |   └Valine.min.js</span><br><span class="line">|   |   | ├─part : 所有组件加载必要的模块</span><br><span class="line">|   |   | |  ├─audioplayer.js</span><br><span class="line">|   |   | |  ├─brand.js</span><br><span class="line">|   |   | |  ├─codelib.js</span><br><span class="line">|   |   | |  ├─comment.js</span><br><span class="line">|   |   | |  ├─extension.js</span><br><span class="line">|   |   | |  ├─footer.js</span><br><span class="line">|   |   | |  ├─gallery.js</span><br><span class="line">|   |   | |  ├─goingto.js</span><br><span class="line">|   |   | |  ├─hitokoto.js</span><br><span class="line">|   |   | |  ├─menus.js</span><br><span class="line">|   |   | |  ├─page.js</span><br><span class="line">|   |   | |  ├─panels.js</span><br><span class="line">|   |   | |  ├─pather.js</span><br><span class="line">|   |   | |  ├─post.js</span><br><span class="line">|   |   | |  ├─recentposts.js</span><br><span class="line">|   |   | |  ├─records.js</span><br><span class="line">|   |   | |  ├─search.js</span><br><span class="line">|   |   | |  ├─settings.js</span><br><span class="line">|   |   | |  ├─sitename.js</span><br><span class="line">|   |   | |  ├─skin.js</span><br><span class="line">|   |   | |  ├─timeline.js</span><br><span class="line">|   |   | |  ├─toc.js</span><br><span class="line">|   |   | |  ├─translater.js</span><br><span class="line">|   |   | |  ├─xaside.js</span><br><span class="line">|   |   | |  ├─xcanvas.js</span><br><span class="line">|   |   | |  ├─xdrawer.js</span><br><span class="line">|   |   | |  └xsearch.js</span><br><span class="line">|   |   | ├─common : 包含所有通用JS函数</span><br><span class="line">|   |   | |   ├─ajax.js</span><br><span class="line">|   |   | |   ├─api.js</span><br><span class="line">|   |   | |   ├─config.js</span><br><span class="line">|   |   | |   ├─fetch.js</span><br><span class="line">|   |   | |   ├─lang.js</span><br><span class="line">|   |   | |   ├─part.js</span><br><span class="line">|   |   | |   ├─storage.js</span><br><span class="line">|   |   | |   └util.js</span><br><span class="line">|   |   ├─img : 所有的固定图像资源文件放这</span><br><span class="line">|   |   |  ├─android-chrome-192x192.png</span><br><span class="line">|   |   |  ├─android-chrome-512x512.png</span><br><span class="line">|   |   |  ├─author.large.png</span><br><span class="line">|   |   |  ├─author.medium.png</span><br><span class="line">|   |   |  ├─author.small.png</span><br><span class="line">|   |   |  ├─by-nc-sa.svg</span><br><span class="line">|   |   |  ├─icon.large.png</span><br><span class="line">|   |   |  ├─icon.medium.png</span><br><span class="line">|   |   |  ├─icon.small.png</span><br><span class="line">|   |   |  ├─qf3cu.huaji.png</span><br><span class="line">|   |   |  ├─qf3cu.jpg</span><br><span class="line">|   |   |  ├─qf3cu.png</span><br><span class="line">|   |   |  ├─qf3cu.temp.bw.png</span><br><span class="line">|   |   |  ├─qf3cu.temp.png</span><br><span class="line">|   |   |  ├─qq.png</span><br><span class="line">|   |   |  ├─start.png</span><br><span class="line">|   |   |  ├─start.reverse.png</span><br><span class="line">|   |   |  └wechat.png</span><br><span class="line">|   |   ├─font : 所有的字体文件放这</span><br><span class="line">|   |   |  ├─fa-brands-400.eot</span><br><span class="line">|   |   |  ├─fa-brands-400.svg</span><br><span class="line">|   |   |  ├─fa-brands-400.ttf</span><br><span class="line">|   |   |  ├─fa-brands-400.woff</span><br><span class="line">|   |   |  ├─fa-brands-400.woff2</span><br><span class="line">|   |   |  ├─fa-regular-400.eot</span><br><span class="line">|   |   |  ├─fa-regular-400.svg</span><br><span class="line">|   |   |  ├─fa-regular-400.ttf</span><br><span class="line">|   |   |  ├─fa-regular-400.woff</span><br><span class="line">|   |   |  ├─fa-regular-400.woff2</span><br><span class="line">|   |   |  ├─fa-solid-900.eot</span><br><span class="line">|   |   |  ├─fa-solid-900.svg</span><br><span class="line">|   |   |  ├─fa-solid-900.ttf</span><br><span class="line">|   |   |  ├─fa-solid-900.woff</span><br><span class="line">|   |   |  ├─fa-solid-900.woff2</span><br><span class="line">|   |   |  ├─iconfont.eot</span><br><span class="line">|   |   |  ├─iconfont.svg</span><br><span class="line">|   |   |  ├─iconfont.ttf</span><br><span class="line">|   |   |  ├─iconfont.woff</span><br><span class="line">|   |   |  └SourceHanSansCN.otf</span><br><span class="line">|   |   ├─css : 所有的样式文件放这</span><br><span class="line">|   |   |  ├─style.styl : 引用了所有的样式</span><br><span class="line">|   |   |  ├─_plugin : 所有第三方样式插件</span><br><span class="line">|   |   |  |    ├─APlayer.min.css</span><br><span class="line">|   |   |  |    ├─fontawesome.min.css</span><br><span class="line">|   |   |  |    ├─github-markdown.min.css</span><br><span class="line">|   |   |  |    ├─highlight.styl</span><br><span class="line">|   |   |  |    └share.min.css</span><br><span class="line">|   |   |  ├─_part : 所有组件样式</span><br><span class="line">|   |   |  |   ├─audioplayer.styl</span><br><span class="line">|   |   |  |   ├─brand.styl</span><br><span class="line">|   |   |  |   ├─codelib.styl</span><br><span class="line">|   |   |  |   ├─comment.styl</span><br><span class="line">|   |   |  |   ├─extension.styl</span><br><span class="line">|   |   |  |   ├─footer.styl</span><br><span class="line">|   |   |  |   ├─gallery.styl</span><br><span class="line">|   |   |  |   ├─goingto.styl</span><br><span class="line">|   |   |  |   ├─hitokoto.styl</span><br><span class="line">|   |   |  |   ├─menus.styl</span><br><span class="line">|   |   |  |   ├─page.styl</span><br><span class="line">|   |   |  |   ├─panels.styl</span><br><span class="line">|   |   |  |   ├─pather.styl</span><br><span class="line">|   |   |  |   ├─post.styl</span><br><span class="line">|   |   |  |   ├─recentposts.styl</span><br><span class="line">|   |   |  |   ├─records.styl</span><br><span class="line">|   |   |  |   ├─search.styl</span><br><span class="line">|   |   |  |   ├─settings.styl</span><br><span class="line">|   |   |  |   ├─sitename.styl</span><br><span class="line">|   |   |  |   ├─skin.styl</span><br><span class="line">|   |   |  |   ├─timeline.styl</span><br><span class="line">|   |   |  |   ├─toc.styl</span><br><span class="line">|   |   |  |   ├─translater.styl</span><br><span class="line">|   |   |  |   ├─xaside.styl</span><br><span class="line">|   |   |  |   ├─xcanvas.styl</span><br><span class="line">|   |   |  |   ├─xdrawer.styl</span><br><span class="line">|   |   |  |   └xsearch.styl</span><br><span class="line">|   |   |  ├─_common : 包含所有页面的通用样式</span><br><span class="line">|   |   |  |    ├─color.styl : 所有的受皮肤影响的颜色配置</span><br><span class="line">|   |   |  |    ├─dimension.styl : 所有的固定距离、固定值等配置</span><br><span class="line">|   |   |  |    └layout.styl : 所有页面通用样式，主要包含“m-”开头的主模板样式</span><br><span class="line">├─scripts : 主题预处理脚本文件夹</span><br><span class="line">|    ├─$filter.js</span><br><span class="line">|    ├─$helper.js</span><br><span class="line">|    ├─$renderer.js</span><br><span class="line">|    ├─renderer</span><br><span class="line">|    |    ├─$partplus.js</span><br><span class="line">|    |    └$template.js</span><br><span class="line">|    ├─plugin : 放改过的预处理时用到的第三方插件</span><br><span class="line">|    |   ├─pangunode.js</span><br><span class="line">|    |   ├─toc.js</span><br><span class="line">|    |   ├─hexo-generator-restful</span><br><span class="line">|    |   |           ├─index.js</span><br><span class="line">|    |   |           ├─lib</span><br><span class="line">|    |   |           |  └generator.js</span><br><span class="line">|    |   ├─hexo-abbrlink</span><br><span class="line">|    |   |       ├─index.js</span><br><span class="line">|    |   |       ├─lib</span><br><span class="line">|    |   |       |  ├─crc16.js</span><br><span class="line">|    |   |       |  ├─crc32.js</span><br><span class="line">|    |   |       |  ├─logic.js</span><br><span class="line">|    |   |       |  └model.js</span><br><span class="line">|    ├─helper : 放预处理渲染生成期间用到的函数</span><br><span class="line">|    |   ├─$count.js</span><br><span class="line">|    |   ├─$css.js</span><br><span class="line">|    |   ├─$encode.js</span><br><span class="line">|    |   ├─$forIn.js</span><br><span class="line">|    |   ├─$gallery.js</span><br><span class="line">|    |   ├─$js.js</span><br><span class="line">|    |   ├─$min2read.js</span><br><span class="line">|    |   ├─$mjs.js</span><br><span class="line">|    |   ├─$nomjs.js</span><br><span class="line">|    |   ├─$word4post.js</span><br><span class="line">|    |   └$word4site.js</span><br><span class="line">├─layout : 主题预处理页面模板文件夹</span><br><span class="line">|   ├─archive.ejs : 管理所有归档页面头部涉及的数据</span><br><span class="line">|   ├─index.ejs : 管理首页面头部涉及的数据</span><br><span class="line">|   ├─page.ejs : 管理所有单独页面头部涉及的数据</span><br><span class="line">|   ├─post.ejs : 管理所有文章页面头部涉及的数据</span><br><span class="line">|   ├─_partial</span><br><span class="line">|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及</span><br></pre></td></tr></table></figure>

<h2 id="普通使用主题时涉及的文件及文件夹"><a href="#普通使用主题时涉及的文件及文件夹" class="headerlink" title="普通使用主题时涉及的文件及文件夹"></a>普通使用主题时涉及的文件及文件夹</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─_config.yml : 主题配置文件，改菜单、改图标、改皮肤、改音乐&#x2F;一言组件配置、新增组件时涉及</span><br><span class="line">├─source : 主题资源文件夹</span><br><span class="line">|   ├─asset</span><br><span class="line">|   |   ├─part : 所有组件模板文件放这</span><br><span class="line">|   |   ├─lang : 所有的语言界面资源文件放这</span><br><span class="line">|   |   |  ├─en.yml : 英文</span><br><span class="line">|   |   |  └zh-cn.yml : 中文</span><br><span class="line">|   |   ├─js : 所有的JS资源文件放这</span><br><span class="line">|   |   | ├─main.js : 管理所有资源的加载和程序</span><br><span class="line">|   |   | ├─part : 所有组件加载必要的模块</span><br><span class="line">|   |   ├─css : 所有的样式文件放这</span><br><span class="line">|   |   |  ├─style.styl : 引用了所有的样式</span><br><span class="line">|   |   |  ├─_part : 所有组件样式</span><br><span class="line">├─layout : 主题预处理页面模板文件夹</span><br><span class="line">|   ├─_partial</span><br><span class="line">|   |    └frame.ejs : 网页模板，增减改组件和修改头部模板时涉及</span><br></pre></td></tr></table></figure>

<h1 id="source目录结构"><a href="#source目录结构" class="headerlink" title="source目录结构"></a>source目录结构</h1><p>再来看看<a href="//github.com/jinyaoMa/ma-jinyao.cn/tree/master/source" target="_blank" rel="noopener">source</a>的目录结构。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─CNAME : 锁定github pages域名定向</span><br><span class="line">├─_posts : 所有的文章</span><br><span class="line">|   ├─Gallery-Post-Not-Supported.md</span><br><span class="line">|   ├─Hello-Hexo.md</span><br><span class="line">|   ├─Helpful-Links.md</span><br><span class="line">|   ├─HTTP是什么？.md</span><br><span class="line">|   ├─Markdown-Basic-Syntax.md</span><br><span class="line">|   ├─Oracle-SQL-Basic-Usage.md</span><br><span class="line">|   ├─TCP-IP是什么？.md</span><br><span class="line">|   ├─主题hexo-theme-mustom使用指南.md</span><br><span class="line">|   ├─旧版日记仿markdown编译代码.md</span><br><span class="line">|   ├─测试区2048JS代码.md</span><br><span class="line">|   └网易云音乐歌单JS音乐播放器JS代码.md</span><br><span class="line">├─resume : 这是个“简历小贴士”单页面</span><br><span class="line">|   └index.md</span><br><span class="line">├─records : 这是个“记录”单页面</span><br><span class="line">|    ├─content.yml : 记录组件加载时从这里读取数据</span><br><span class="line">|    └index.md</span><br><span class="line">├─library : 这是个“代码库”单页面</span><br><span class="line">|    └index.md</span><br><span class="line">├─letter : 这是个“求职信小贴士”单页面</span><br><span class="line">|   └index.md</span><br><span class="line">├─gallery : 这是个“图库”单页面</span><br><span class="line">|    ├─FaceQ1583444636773.png</span><br><span class="line">|    ├─http-request-example.jpg</span><br><span class="line">|    ├─http-request-format.png</span><br><span class="line">|    ├─http-response-example.jpg</span><br><span class="line">|    ├─http-response-format.png</span><br><span class="line">|    ├─index.md</span><br><span class="line">|    ├─tcp-ip-ipv6-prefix.jpg</span><br><span class="line">|    ├─tcp-ip-router-network.jpg</span><br><span class="line">|    ├─tcp-ip-router-subnet.jpg</span><br><span class="line">|    ├─wallpaper-2311325.jpg</span><br><span class="line">|    ├─wallpaper-2572384.jpg</span><br><span class="line">|    ├─wallpaper-878514.jpg</span><br><span class="line">|    ├─yao2048-0.jpg</span><br><span class="line">|    └yaoplayer-0.jpg</span><br><span class="line">├─extension : 这个是本站左下角的扩展功能</span><br><span class="line">|     ├─content.yml : 扩展组件加载时从这里读取数据</span><br><span class="line">|     ├─test : “测试”扩展</span><br><span class="line">|     ├─resume : “简历生成”扩展</span><br><span class="line">|     ├─palette : “图像颜色提取”扩展</span><br><span class="line">|     ├─letter : “求职信”扩展</span><br><span class="line">├─code : 所有使用Hexo标签“include_code”的代码文件都放这</span><br><span class="line">├─about : 这是个“关于”单页面</span><br><span class="line">|   └index.md</span><br></pre></td></tr></table></figure>

<h1 id="新建单页面例子"><a href="#新建单页面例子" class="headerlink" title="新建单页面例子"></a>新建单页面例子</h1><p><strong>注：需要我的scaffolds/page.md模板为前提</strong></p>
<p>假如我要新建一个“友链”单页面，我需要运行新建命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">"links"</span></span><br></pre></td></tr></table></figure>

<p>运行命令后得到以下新目录结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─_posts</span><br><span class="line">├─resume</span><br><span class="line">├─records</span><br><span class="line">├─links : 新“友链”单页面</span><br><span class="line">|   └index.md : 模板生成的index.md</span><br><span class="line">├─library</span><br><span class="line">├─letter</span><br><span class="line">├─gallery</span><br><span class="line">├─extension</span><br><span class="line">├─code</span><br><span class="line">├─about</span><br></pre></td></tr></table></figure>

<p>如何修改<code>links/index.md</code>可以参考<a href="//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/source/about/index.md" target="_blank" rel="noopener">about/index.md</a></p>
<h2 id="添加菜单项目"><a href="#添加菜单项目" class="headerlink" title="添加菜单项目"></a>添加菜单项目</h2><p>在主题配置<code>_config.yml</code>中，按格式新增<code>menus</code>下的项目</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menus:</span></span><br><span class="line">  <span class="attr">main:</span> <span class="comment"># 项目组</span></span><br><span class="line">    <span class="attr">home:</span> <span class="comment"># 项目</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/</span> <span class="comment"># 项目链接</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">'&lt;i class="fas fa-home fa-fw"&gt;&lt;/i&gt;'</span> <span class="comment"># 项目图标</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="comment"># 项目</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/archives/</span> <span class="comment"># 项目链接</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">'&lt;i class="fas fa-archive fa-fw"&gt;&lt;/i&gt;'</span> <span class="comment"># 项目图标</span></span><br><span class="line">    <span class="attr">about:</span> <span class="comment"># 项目</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/about/</span> <span class="comment"># 项目链接</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">'&lt;i class="fas fa-user fa-fw"&gt;&lt;/i&gt;'</span> <span class="comment"># 项目图标</span></span><br><span class="line">    <span class="attr">links:</span> <span class="comment"># 新项目 &lt;----------------------------------------------------</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/links/</span>  <span class="comment"># 新项目链接 &lt;----------------------------------------</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">'&lt;i class="fas fa-link fa-fw"&gt;&lt;/i&gt;'</span> <span class="comment"># 新项目图标 &lt;------------</span></span><br></pre></td></tr></table></figure>

<p>接下来，在主题<code>source/asset/lang</code>文件夹中的<code>.yml</code>语言文件新增<code>menus</code>下的项目</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menus:</span></span><br><span class="line">  <span class="attr">main:</span> <span class="comment"># 对应_config.yml中的项目组</span></span><br><span class="line">    <span class="attr">caption:</span> <span class="string">本站</span> <span class="comment"># 项目组名称</span></span><br><span class="line">    <span class="attr">items:</span> <span class="comment"># 对应_config.yml中的项目</span></span><br><span class="line">      <span class="attr">home:</span> <span class="string">首页</span> <span class="comment"># 项目名称</span></span><br><span class="line">      <span class="attr">archive:</span> <span class="string">归档</span> <span class="comment"># 项目名称</span></span><br><span class="line">      <span class="attr">about:</span> <span class="string">关于</span> <span class="comment"># 项目名称</span></span><br><span class="line">      <span class="attr">links:</span> <span class="string">友链</span> <span class="comment"># 新项目名称 &lt;-----------------------------------------</span></span><br></pre></td></tr></table></figure>

<h1 id="新建文章例子"><a href="#新建文章例子" class="headerlink" title="新建文章例子"></a>新建文章例子</h1><p><strong>注：需要我的scaffolds/post.md模板为前提</strong></p>
<p>假如我要新建一个“HTTP是什么？”文章，我需要运行新建命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"HTTP是什么？"</span></span><br></pre></td></tr></table></figure>

<p>运行命令后得到以下新目录结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─_posts</span><br><span class="line">|   └HTTP是什么？.md : 新“HTTP是什么？”文章</span><br><span class="line">├─resume</span><br><span class="line">├─records</span><br><span class="line">├─links</span><br><span class="line">├─library</span><br><span class="line">├─letter</span><br><span class="line">├─gallery</span><br><span class="line">├─extension</span><br><span class="line">├─code</span><br><span class="line">├─about</span><br></pre></td></tr></table></figure>

<p>打开<code>HTTP是什么？.md</code>，可以看到front-matter中没有abbrlink，没有关系，这是自动生成。<strong>如果文章里使用了MathJax，需要设置<code>mathjax: true</code>。</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">HTTP是什么？</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="bullet">-</span> <span class="literal">null</span> <span class="comment"># 分类设置</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">null</span> <span class="comment"># 标签设置</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-04</span><span class="number">-10</span> <span class="number">14</span><span class="string">:15:34</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2020</span><span class="number">-04</span><span class="number">-10</span> <span class="number">14</span><span class="string">:15:34</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h1 id="添加组件例子"><a href="#添加组件例子" class="headerlink" title="添加组件例子"></a>添加组件例子</h1><p>假如我要在“友链”单页面里添加一个像”记录”单页面下的记录组件，命名为<code>links</code>组件：</p>
<p><strong>首先，在Hexo根目录下<code>source/links</code>文件夹建立一个<code>content.yml</code>用以记录友链，里面的内容可以是这样的：</strong></p>
<figure class="highlight yml"><figcaption><span>source/links/content.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># 友链模板</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jinyaoMa</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">//ma-jinyao.cn</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">//ma-jinyao.cn/asset/img/author.medium.png</span></span><br><span class="line"><span class="comment"># 其他友链</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">//baidu.com</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...以此类推</span></span><br></pre></td></tr></table></figure>

<p><strong>然后，在主题目录<code>themes/mustom</code>新建和修改以下必要的文件：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─_config.yml : 添加需要的图标</span><br><span class="line">├─source</span><br><span class="line">|   ├─asset</span><br><span class="line">|   |   ├─part</span><br><span class="line">|   |   |  └links.ejs : 必要“组件模板”</span><br><span class="line">|   |   ├─lang</span><br><span class="line">|   |   |  ├─en.yml : 添加需要的英文文本</span><br><span class="line">|   |   |  └zh-cn.yml : 添加需要的中文文本</span><br><span class="line">|   |   ├─js</span><br><span class="line">|   |   | ├─part</span><br><span class="line">|   |   | |  └links.js : 必要“JS加载模块”</span><br><span class="line">|   |   ├─css</span><br><span class="line">|   |   |  ├─_part</span><br><span class="line">|   |   |  |   └links.styl : 必要“组件样式”</span><br></pre></td></tr></table></figure>

<p><code>links.ejs</code>：可以参照<a href="//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/part/records.ejs" target="_blank" rel="noopener">asset/part/records.ejs</a>组件模板，刚开始可以只有以下部分：</p>
<figure class="highlight html"><figcaption><span>asset/part/links.ejs</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-links"</span>&gt;</span><span class="comment">&lt;!-- 注意类名 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-links-caption"</span>&gt;</span><span class="comment">&lt;!-- 窗口标题部分 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">theme.links.icon</span> %&gt;</span><span class="comment">&lt;!-- 窗口标题图标 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">data-lang</span>=<span class="string">"links.caption"</span>&gt;</span><span class="comment">&lt;!-- 加载语言文件中links.caption的字符串 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<code>_config.yml</code>中添加以下代码：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">'&lt;i class="fas fa-link fa-fw"&gt;&lt;/i&gt;'</span></span><br></pre></td></tr></table></figure>

<p>在<code>en.yml</code>和<code>zh-cn.yml</code>中添加以下代码：</p>
<figure class="highlight yml"><figcaption><span>en.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">caption:</span> <span class="string">LINKS</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><figcaption><span>zh-cn.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">caption:</span> <span class="string">友链</span></span><br></pre></td></tr></table></figure>

<p><code>links.js</code>：可以参照<a href="//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/js/part/records.js" target="_blank" rel="noopener">asset/js/part/records.js</a>加载模块，刚开始可以只有以下部分：</p>
<figure class="highlight js"><figcaption><span>asset/js/part/links.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> part <span class="keyword">from</span> <span class="string">"../common/part.js"</span>;</span><br><span class="line"><span class="keyword">let</span> tag = <span class="string">'links'</span>; <span class="comment">// 注意标签名</span></span><br><span class="line"><span class="keyword">let</span> element = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> init = <span class="function">(<span class="params">params, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  part(tag, el =&gt; &#123;</span><br><span class="line">    element = el;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(tag).replaceWith(element);</span><br><span class="line">    callback &amp;&amp; callback(element);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  tag,</span><br><span class="line">  init</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><code>links.styl</code>：可以参照<a href="//raw.githubusercontent.com/jinyaoMa/ma-jinyao.cn/master/themes/mustom/source/asset/css/_part/records.styl" target="_blank" rel="noopener">asset/css/_part/records.styl</a>组件样式，刚开始可以什么样式都没有。</p>
<p><strong>完成必要文件的新建之后，就要把这个组件加载到页面上，需要修改一下文件：</strong></p>
<p>在Hexo根目录<code>source/links/index.md</code>里面的front-matter中标记这个组件。</p>
<figure class="highlight yml"><figcaption><span>source/links/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">links</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">page</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">links</span></span><br><span class="line"><span class="attr">parts:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">page</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">links</span> <span class="comment"># 标记组件</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>在<code>themes/mustom</code>主题目录中<code>source/asset/css/style.styl</code>引用<code>links.styl</code>。</p>
<figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文件末尾添加</span></span><br><span class="line">@import <span class="string">'_part/links'</span></span><br></pre></td></tr></table></figure>

<p>在<code>themes/mustom</code>主题目录中<code>source/asset/js/main.js</code>对号插入以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 头部所有import下面</span></span><br><span class="line"><span class="keyword">import</span> links <span class="keyword">from</span> <span class="string">'./part/links.js'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Ctrl+F 查找 “Extra Operations”，在“Extra Operations”下添加代码加载组件到“links”单页面 */</span></span><br><span class="line"><span class="comment">// Extra Operations</span></span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/^\/(links)\//</span>.test(pathname())) &#123;</span><br><span class="line">  ajax(&#123;</span><br><span class="line">    url: <span class="string">`/links/content.json`</span>, <span class="comment">// content.yml 预编译成的JSON文件，友链的记录文件</span></span><br><span class="line">    method: <span class="string">'get'</span>,</span><br><span class="line">    dataType: <span class="string">'json'</span>,</span><br><span class="line">    success(data) &#123;</span><br><span class="line">      parts.includes(<span class="string">'links'</span>) &amp;&amp; links.init(&#123;</span><br><span class="line">        data</span><br><span class="line">      &#125;, el =&gt; &#123;</span><br><span class="line">        checklist.links = <span class="literal">true</span>;</span><br><span class="line">        progress.step(stepping);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在<code>themes/mustom</code>主题目录中<code>layout/_partial/frame.ejs</code>中<code>div.m-content</code>插入组件标签<code>&lt;links&gt;&lt;/links&gt;</code>。</p>
<p><strong>通过以上步骤就能把组件添加到单页面“友链”中</strong></p>
<h1 id="删除单页面组件"><a href="#删除单页面组件" class="headerlink" title="删除单页面组件"></a>删除单页面组件</h1><p>想要停用某个单页面组件只要在单页面所属<code>source/YourPage/index.md</code>里面的front-matter中注释掉组件标记即可，例如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">links</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">page</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">links</span></span><br><span class="line"><span class="attr">parts:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">page</span></span><br><span class="line">  <span class="comment"># - links # 注释掉组件标记</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p><strong><em>我这个主题所用技术都是比较野生和混杂，不懂可以Github Issue我，也可以百度。自己研究一下熟悉之后就简单了，因为来来去去也就几个地方，只是代码分得较细，改动过程鼠标可能比较累。</em></strong></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Mustom</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender 学习笔记</title>
    <url>/2019/06/26/note/blender-learn-note/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Blender</tag>
      </tags>
  </entry>
  <entry>
    <title>酷 Q 使用笔记</title>
    <url>/2019/05/15/note/coolq-use-note/</url>
    <content><![CDATA[<!-- 2020-04-03 19:45:31 -->

<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://web2.qq.com/" target="_blank" rel="noopener">Webqq</a> 早已于 2019-01-01 起正式停止服务。</p>
<p>那么以此为基础的 qq 机器人便全部失效。以前折腾的也已作废。</p>
<ul>
<li><a href="https://github.com/pandolia/qqbot" target="_blank" rel="noopener">qqbot</a></li>
</ul>
<p>因此，所剩的尚跨可靠的选择似乎只有 <a href="https://cqp.cc/" target="_blank" rel="noopener">酷 Q</a> 还说得过去。</p>
<p>本文便用于记录配置过程中的坑。</p>
<a id="more"></a>

<h2 id="Progress"><a href="#Progress" class="headerlink" title="Progress"></a>Progress</h2><p>想要长久在线，自然是要挂在服务器上的。<br>那么 Linux 便是跨不过去的坎。</p>
<p>想让 酷 Q 在 Linux 上运行则推荐使用 <a href="https://www.docker.com/" target="_blank" rel="noopener">docker</a> 。</p>
<p><a href="https://cqp.cc/t/34558" target="_blank" rel="noopener">[发布]酷 Q on Docker</a></p>
<blockquote>
<p>当前版本为 3.1</p>
</blockquote>
<h3 id="Install-Docker"><a href="#Install-Docker" class="headerlink" title="Install Docker"></a>Install Docker</h3><p>Linux 不同主流发行版本在官方文档中都有详细的安装过程。</p>
<blockquote>
<p><a href="https://docs.docker.com/install/linux/docker-ce/debian/" target="_blank" rel="noopener">Get Docker CE</a></p>
</blockquote>
<p>CentOS:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install docker</span><br><span class="line"><span class="comment"># 启动 Docker</span></span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<p>但 Deepin (即深度) 基于 Debian 进行了定制，本以为按照 Debian 进行安装就可以，但没能成功。<br>无法找到 Deepin 的安装版本。</p>
<p><a href="https://bbs.deepin.org/forum.php?mod=viewthread&tid=139514&page=1&authorid=76809" target="_blank" rel="noopener">深度系统如何安装 docker？</a></p>
<p>尝试了文中的做法也没有成功。<br>问题出在 <code>sudo add-apt-repository</code> 。</p>
<p>尝试修改了 <code>/etc/lsb-release</code>，竟然成功了。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">; DISTRIB_ID=Deepin</span></span><br><span class="line"><span class="attr">DISTRIB_ID</span>=Debian</span><br><span class="line"><span class="attr">DISTRIB_RELEASE</span>=<span class="string">"15.10"</span></span><br><span class="line"><span class="attr">DISTRIB_DESCRIPTION</span>=<span class="string">"Deepin 15.10"</span></span><br><span class="line"><span class="comment">; DISTRIB_CODENAME=stable</span></span><br><span class="line"><span class="attr">DISTRIB_CODENAME</span>=wheezy</span><br></pre></td></tr></table></figure>

<p>等安装好后，为防止以后系统更新等 Bug，又改回了 <code>Deepin/stable</code>。</p>
<h3 id="安装-酷-Q"><a href="#安装-酷-Q" class="headerlink" title="安装 酷 Q"></a>安装 酷 Q</h3><h4 id="下载-酷-Q-Docker-镜像"><a href="#下载-酷-Q-Docker-镜像" class="headerlink" title="下载 酷 Q Docker 镜像"></a>下载 酷 Q Docker 镜像</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull coolq/wine-coolq</span><br></pre></td></tr></table></figure>

<p>在任意目录创建一个空文件夹，用于持久化存放 酷 Q 数据：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir /root/coolq-data <span class="comment"># 任意路径均可</span></span><br></pre></td></tr></table></figure>

<p>运行 酷 Q 镜像</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name=coolq --rm -p 8080:9000 -v /root/coolq-data:/home/user/coolq -e VNC_PASSWD=12345678 -e COOLQ_ACCOUNT=123456 coolq/wine-coolq</span><br></pre></td></tr></table></figure>

<p>Example:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name=coolq --rm -p 8080:9000 -v /root/coolq-data:/home/yunyou/coolq -e VNC_PASSWD=yunyou -e COOLQ_ACCOUNT=xiaoai coolq/wine-coolq</span><br><span class="line">docker run --name=coolq -d -p 8080:9000 -v /root/coolq-data:/home/yunyou/coolq -e VNC_PASSWD=yunyou -e COOLQ_ACCOUNT=xiaoai coolq/wine-coolq</span><br></pre></td></tr></table></figure>

<h4 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h4><p>启动容器</p>
<p><code>--rm</code> 替换为 <code>-d</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name=coolq -d -p 8080:9000 -v /root/coolq-data:/home/user/coolq -e VNC_PASSWD=12345678 -e COOLQ_ACCOUNT=123456 coolq/wine-coolq</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Argument</th>
<th>Example</th>
</tr>
</thead>
<tbody><tr>
<td>远程监听端口</td>
<td>8080</td>
</tr>
<tr>
<td>数据存放位置</td>
<td>/root/coolq-data</td>
</tr>
<tr>
<td>远程访问密码</td>
<td>12345678</td>
</tr>
<tr>
<td>机器人帐号</td>
<td>123456</td>
</tr>
</tbody></table>
<p>查看日志</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker logs coolq</span><br></pre></td></tr></table></figure>

<p>启动/停止服务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker start coolq</span><br><span class="line">docker stop coolq</span><br></pre></td></tr></table></figure>

<h3 id="安装-CoolQ-HTTP-API-插件"><a href="#安装-CoolQ-HTTP-API-插件" class="headerlink" title="安装 CoolQ HTTP API 插件"></a>安装 <a href="https://cqhttp.cc/" target="_blank" rel="noopener">CoolQ HTTP API 插件</a></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull richardchien/cqhttp:latest</span><br></pre></td></tr></table></figure>

<p>或者 <a href="https://cqhttp.cc/docs/4.10/#/?id=手动安装" target="_blank" rel="noopener">手动安装</a></p>
<h4 id="Run-Coolq"><a href="#Run-Coolq" class="headerlink" title="Run Coolq"></a>Run Coolq</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -ti --rm --name cqhttp-test \</span><br><span class="line">            -v $(<span class="built_in">pwd</span>)/coolq:/home/user/coolq \  <span class="comment"># 将宿主目录挂载到容器内用于持久化 酷Q 的程序文件</span></span><br><span class="line">            -p 9000:9000 \  <span class="comment"># noVNC 端口，用于从浏览器控制 酷Q</span></span><br><span class="line">            -p 5700:5700 \  <span class="comment"># HTTP API 插件开放的端口</span></span><br><span class="line">            -e COOLQ_ACCOUNT=123456 \ <span class="comment"># 要登录的 QQ 账号，可选但建议填</span></span><br><span class="line">            -e CQHTTP_POST_URL=http://example.com:8080 \  <span class="comment"># 事件上报地址</span></span><br><span class="line">            -e CQHTTP_SERVE_DATA_FILES=yes \  <span class="comment"># 允许通过 HTTP 接口访问 酷Q 数据文件</span></span><br><span class="line">            richardchien/cqhttp:latest</span><br></pre></td></tr></table></figure>

<p>进入容器内部，添加需改环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -ti 容器ID&#x2F;容器名  &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<h3 id="安装-NoneBot"><a href="#安装-NoneBot" class="headerlink" title="安装 NoneBot"></a>安装 NoneBot</h3><p>因为自己 C++ 并不怎么熟悉，所以打算使用 api 插件，来使用 Node.js/Python 来开发。</p>
<p>随后发现了 <a href="https://github.com/richardchien/nonebot" target="_blank" rel="noopener">NoneBot</a> 这样封装好的框架，使用 Python 。</p>
<p>参见文档进行安装。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pip 为 python 的包管理工具，请提前安装好 Python , pip 。</span></span><br><span class="line"><span class="comment"># More Info: https://yunyoujun.cn/note/linux-learn-note/</span></span><br><span class="line">pip install nonebot</span><br></pre></td></tr></table></figure>

<p>使用参见 <a href="https://nonebot.cqp.moe/" target="_blank" rel="noopener">NoneBot 文档</a></p>
<h3 id="GitHub-Webhook"><a href="#GitHub-Webhook" class="headerlink" title="GitHub Webhook"></a>GitHub Webhook</h3><p><a href="https://yunyoujun.cn/project/QQ-XiaoAi/#WebHooks-自动部署" target="_blank" rel="noopener">WebHooks-自动部署</a></p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="端口号未开启"><a href="#端口号未开启" class="headerlink" title="端口号未开启"></a>端口号未开启</h3><p>T^T 这个问题找了我好久</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</span><br><span class="line">service iptables save <span class="comment">#保存iptables规则</span></span><br></pre></td></tr></table></figure>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>GitHub: <a href="https://github.com/YunYouJun/xiao-ai" target="_blank" rel="noopener">xiao-ai</a></p>
<hr>
<p>TO BE CONTINUED.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>CoolQ</tag>
      </tags>
  </entry>
  <entry>
    <title>记 Laravel 线上部署的坑</title>
    <url>/2017/08/20/note/a-trap-about-laravel-deploy/</url>
    <content><![CDATA[<h1 id="Trap"><a href="#Trap" class="headerlink" title="Trap"></a>Trap</h1><p>采用 <a href="https://yunyoujun.cn/2017/08/20/lnmp%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%8C%85/" target="_blank" rel="noopener">lnmp 一键安装包</a> 部署基础环境。</p>
<a id="more"></a>

<hr>
<h2 id="php-函数功能被关闭"><a href="#php-函数功能被关闭" class="headerlink" title="php 函数功能被关闭"></a>php 函数功能被关闭</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[Symfony\Component\Process\Exception\RuntimeException] The Process class relies on proc_open, <span class="built_in">which</span> is not available on your PHP installation.</span><br><span class="line">[ErrorException] proc_get_status() has been disabled <span class="keyword">for</span> security reasons</span><br></pre></td></tr></table></figure>

<blockquote>
<p>原因应该是 php 默认某些函数功能未启用。<br>解决方法</p>
</blockquote>
<p>打开 php.ini，搜索 disable_functions 段类似代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">disable_functions &#x3D; passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server</span><br></pre></td></tr></table></figure>

<p>从中将 proc_open 以及 proc_get_status 删除即可。</p>
<hr>
<h2 id="目录权限问题"><a href="#目录权限问题" class="headerlink" title="目录权限问题"></a>目录权限问题</h2><p>为了运行 <code>Laravel</code>，我们需要为一些项目目录配置权限.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo chmod 775 /home/blog/storage</span><br><span class="line">sudo chmod 775 /home/blog/bootstrap/cache</span><br></pre></td></tr></table></figure>

<p>LNMP 一键安装包中含有<code>.user.ini</code>,权限会被拒绝。</p>
<p>需使用：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">chattr -i /&#123;目录&#125;/.user.ini</span><br></pre></td></tr></table></figure>

<p>并删除：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm .user.ini</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参见：<a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html#user.ini" target="_blank" rel="noopener">防跨目录设置</a></p>
</blockquote>
<hr>
<h2 id="nginx-配置文件"><a href="#nginx-配置文件" class="headerlink" title="nginx 配置文件"></a>nginx 配置文件</h2><p>打开<code>/usr/local/nginx/conf/nginx.conf</code>文件，并找到 server{}字段中如下代码。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include enable-php.conf;</span></span><br></pre></td></tr></table></figure>

<p>此处需注释，不然会报错 500。</p>
<p><strong>原因：</strong><br>引入了 php 配置，其中有句 try_files 开启就有报错.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新增 支持laravel 优雅链接，在laravel 文档里有说明</span></span><br><span class="line">location / &#123;</span><br><span class="line">            try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#新增 支持php 的配置</span></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">#不能有下面这句 try_files ,不然报错500</span></span><br><span class="line"><span class="comment"># try_files $uri /index.php =404;</span></span><br><span class="line"></span><br><span class="line">fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line"></span><br><span class="line"><span class="comment">#这句注意 后面是.sock 不是127.0.0..1</span></span><br><span class="line"></span><br><span class="line">fastcgi_pass  unix:/tmp/php-cgi.sock;</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line"></span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参见:<a href="http://blog.csdn.net/dahuzix/article/details/73197718" target="_blank" rel="noopener">http://blog.csdn.net/dahuzix/article/details/73197718</a></p>
</blockquote>
<h2 id="nginx-配置遭遇-No-inputfile-specified"><a href="#nginx-配置遭遇-No-inputfile-specified" class="headerlink" title="nginx 配置遭遇 No inputfile specified"></a>nginx 配置遭遇 No inputfile specified</h2><p><code>php.ini</code> <code>(/etc/php/cgi/php.ini)|(/usr/local/php/etc)</code> 的配置中这两项</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cgi.fix_pathinfo=1  <span class="comment">#（这个是自己添加的）</span></span><br><span class="line">doc_root=</span><br></pre></td></tr></table></figure>

<h2 id="lnmp-重启"><a href="#lnmp-重启" class="headerlink" title="lnmp 重启"></a>lnmp 重启</h2><p>修改 nginx、php 等配置后一定要进行重启。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">lnmp restart  <span class="comment"># 全部重启</span></span><br><span class="line">lnmp nginx restart <span class="comment"># nginx重启</span></span><br></pre></td></tr></table></figure>

<h2 id="Laravel-中-seeder-执行失败"><a href="#Laravel-中-seeder-执行失败" class="headerlink" title="Laravel 中 seeder 执行失败"></a>Laravel 中 seeder 执行失败</h2><ul>
<li>当第一次执行完 <code>php artisan db:seed</code> 后，增加新的 seeder 文件时执行会报错。错误信息如下 <code>[ReflectionException] Class ***TableSeeder does not exist</code></li>
<li>确保新的 seeder 文件和全局 database seeder 是在同一个 seeder 目录下了，仍然会出现这个问题的原因是: <strong>我们需要清理下之前执行生成的 classmap 信息。</strong></li>
<li>在控制台中执行 <code>composer dump-autoload</code>,然后再执行 <code>php artisan db:seed</code> .</li>
</ul>
<blockquote>
<p>参见：<a href="http://www.jianshu.com/p/27a76e702d71" target="_blank" rel="noopener">http://www.jianshu.com/p/27a76e702d71</a></p>
</blockquote>
<h2 id="记得生成密钥"><a href="#记得生成密钥" class="headerlink" title="记得生成密钥"></a>记得生成密钥</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure>

<hr>
<p>To be continued.</p>
]]></content>
      <categories>
        <category>崬少的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>让百度收录你的 GitHub Pages 博客</title>
    <url>/2019/03/03/note/baidu-seo-about-github-pages/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为一些历史缘故，GitHub 拒绝了百度的爬虫检索。<br>而这也导致托管在 GitHub 之上的博客无法被百度检索到。</p>
<p>虽然标题是让百度收录你的 GitHub Pages 博客，但终究还是走了取巧的措施。</p>
<a id="more"></a>

<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>那就是使用 <a href="https://coding.net/pages" target="_blank" rel="noopener">Coding Pages</a> 托管，但这就又似乎背离了我们的初衷，显得不够优雅。</p>
<p>GitHub 只是不能被百度收录，但 Bing, Google 等搜索引擎，均可正常收录。</p>
<p>所以只需要针对百度的搜索引擎做特定的解析，只有当百度爬虫检索时，才会将域名解析至 Coding Pages 搭建的镜像网站上。</p>
<p>Coding Pages 可以和 GitHub Pages 使用方式相差无几，不再多述。<br>（为方便推送，可以编写个脚本，向两端同时推送内容。）</p>
<p>Example:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># backup.sh</span></span><br><span class="line">info=<span class="variable">$1</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"<span class="variable">$info</span>"</span></span><br><span class="line">git push github hexo</span><br><span class="line">git push coding hexo</span><br></pre></td></tr></table></figure>

<p>Usage:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./backup.sh <span class="string">'update blog'</span></span><br></pre></td></tr></table></figure>

<p>重点则在于设置域名的解析。<br>我使用的是腾讯云。</p>
<p>添加记录 设置 CNAME 的线路类型 -&gt; 搜索引擎 -&gt; 百度</p>
<p><img src="https://cos.yunyoujun.cn/blog/posts/set-domain-cname-type-baidu.png" alt="set-domain-cname-type-baidu.png" loading="lazy"></p>
<p>此时再使用<a href="https://ziyuan.baidu.com/site" target="_blank" rel="noopener">百度站点管理</a>抓取，便可显示抓取成功。</p>
<p>在百度搜索框中输入 <code>site: 你的域名</code> 就可以检索域名收录情况。</p>
<p>当然估计还要几天的刷新才会有结果。</p>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>此前为了能够被收录，便迁移使用了 Coding Pages，但是 Coding Pages 没有提供 IP 地址以供 A 记录解析，<br>而腾讯域名邮箱 MX 记录解析又和 CNAME 冲突（在很久前是可以设置的，但是我手贱调整了一下后就……），<br>便又迁移回了 GitHub Pages 。</p>
<p>而百度以往收录的索引，随着时间，便几乎消失殆尽了。</p>
<p>已经一点点又出来了~</p>
<hr>
<p>其实还可以通过使用国内的 CDN 解决，具体可以参见 <a href="https://www.yunyoujun.cn/note/use-cdn-speed-up-site/" target="_blank" rel="noopener">使用 CDN 加速你的 GitHub Pages 网站</a>。</p>
]]></content>
      <categories>
        <category>崬少的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>GitHub</tag>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>Composer使用笔记</title>
    <url>/2017/09/02/note/composer-use-note/</url>
    <content><![CDATA[<a id="more"></a>

<blockquote>
<h4 id="autoload"><a href="#autoload" class="headerlink" title="autoload"></a>autoload</h4></blockquote>
<p>在 <code>composer.json</code> 中找到 <code>autoload</code> 字段</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"files": [</span><br><span class="line">            <span class="string">"app/Helpers.php"</span></span><br><span class="line">        ]</span><br></pre></td></tr></table></figure>

<p>添加上述代码，可以增加全局自动加载的文件,即可以在全局使用 <code>Helpers.php</code> 中定义的函数。</p>
<p>需在命令行下运行 <code>composer dump-autoload</code> ,让 composer 重建加载信息，再在其他的文件中使用这个类了。</p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 陷阱</title>
    <url>/2019/06/27/note/css-trap-note/</url>
    <content><![CDATA[<p>CSS 的奇妙 Bug</p>
<a id="more"></a>

<!-- for codepen -->
<script async src="https://static.codepen.io/assets/embed/ei.js"></script>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Margin-塌陷"><a href="#Margin-塌陷" class="headerlink" title="Margin 塌陷"></a>Margin 塌陷</h3><p>DEMO: <a href="https://codepen.io/YunYouJun/pen/WqXGpo" target="_blank" rel="noopener">Margin Collapse</a></p>
<p class="codepen" data-height="304" data-theme-id="0" data-default-tab="css,result" data-user="YunYouJun" data-slug-hash="WqXGpo" style="height: 304px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="Margin Collapse">
  <span>See the Pen <a href="https://codepen.io/YunYouJun/pen/WqXGpo/" target="_blank" rel="noopener">
  Margin Collapse</a> by YunYouJun (<a href="https://codepen.io/YunYouJun" target="_blank" rel="noopener">@YunYouJun</a>)
  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span>
</p>

<h4 id="父子间"><a href="#父子间" class="headerlink" title="父子间"></a>父子间</h4><p>添加 <code>overflow: hidden;</code></p>
<h4 id="兄弟间"><a href="#兄弟间" class="headerlink" title="兄弟间"></a>兄弟间</h4><p>添加 <code>float:left;</code></p>
<h3 id="transform-后-z-index-属性失效"><a href="#transform-后-z-index-属性失效" class="headerlink" title="transform 后 z-index 属性失效"></a>transform 后 z-index 属性失效</h3><p>Demo:</p>
<p class="codepen" data-height="265" data-theme-id="default" data-default-tab="css,result" data-user="YunYouJun" data-slug-hash="PowMQjP" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="transform vs z-index">
  <span>See the Pen <a href="https://codepen.io/YunYouJun/pen/PowMQjP" target="_blank" rel="noopener">
  transform vs z-index</a> by YunYouJun (<a href="https://codepen.io/YunYouJun" target="_blank" rel="noopener">@YunYouJun</a>)
  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span>
</p>

<p>原因主要是 <code>transform</code> 新创建了层叠上下文，影响了正常的 <code>z-index</code>。</p>
<p><strong>解决方案</strong>：添加 <code>transform-style: preserve-3d;</code>，使之变成 3d 显示方式。再通过 <code>transform: translateZ(-1px);</code> 来控制层级顺序。</p>
<ul>
<li><a href="https://link.jianshu.com/?t=http://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/" target="_blank" rel="noopener">张鑫旭博文：深入理解 css 中的层叠上下文和层叠顺序</a></li>
<li><a href="https://link.jianshu.com/?t=https://segmentfault.com/q/1010000002480824" target="_blank" rel="noopener">Segmentfault 回答：Transform 引起的 z-index “失效”</a></li>
</ul>
<h3 id="img-与父级元素下边框存在空隙"><a href="#img-与父级元素下边框存在空隙" class="headerlink" title="img 与父级元素下边框存在空隙"></a>img 与父级元素下边框存在空隙</h3><p>Demo:</p>
<p class="codepen" data-height="265" data-theme-id="default" data-default-tab="html,result" data-user="YunYouJun" data-slug-hash="dyPxmGY" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="img space with father">
  <span>See the Pen <a href="https://codepen.io/YunYouJun/pen/dyPxmGY" target="_blank" rel="noopener">
  img space with father</a> by YunYouJun (<a href="https://codepen.io/YunYouJun" target="_blank" rel="noopener">@YunYouJun</a>)
  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span>
</p>

<p>可以看到在底部，背景的红色透了出来。<br>其主要原因是文字默认的行高所产生的问题。（参见 demo）</p>
<p><strong>解决方案</strong>：默认的 <code>vertical-align</code> 属性为 <code>baseline</code>，我们只需要为 <code>img</code> 添加 <code>vertical-align: bottom</code> （<code>middle | top | bottom</code> 都可以）。</p>
<blockquote>
<p><a href="https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">CSS 深入理解 vertical-align 和 line-height 的基友关系</a></p>
</blockquote>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Deepin 使用笔记</title>
    <url>/2019/04/29/note/deepin-use-note/</url>
    <content><![CDATA[<p><a href="https://www.deepin.org/" target="_blank" rel="noopener">Deepin</a></p>
<p>深度操作系统 - Linux 发行版</p>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为最近电脑中了恶意软件的圈套，清除又恨麻烦。<br>想到兴许还有几月便可以换上新装备，而现今有没有对电脑的稳定需求，便索性安装成 Linux 尝尝鲜。<br>早便听得 Deepin 的本土化和常用软件兼容性做得很好，便以其为主，记录一下还原当初 Windows 工作环境的过程。</p>
<p>More info: <a href="../linux-use-note/">Linux 使用笔记</a></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p><a href="https://wiki.deepin.org/" target="_blank" rel="noopener">Wiki</a></p>
<p>安装过程很简单，下载镜像，刻入 U 盘。</p>
<p>U 盘启动器制作工具：</p>
<ul>
<li><a href="https://etcher.io/" target="_blank" rel="noopener">etcher</a></li>
<li><a href="https://rufus.ie/" target="_blank" rel="noopener">rufus</a></li>
</ul>
<h3 id="System"><a href="#System" class="headerlink" title="System"></a>System</h3><p>安装好后最好切换为阿里云的 CDN ，比官方的速度还要快些。</p>
<p>不需要 <code>vim /etc/apt/sources.list</code> 修改</p>
<p><code>系统设置菜单 &gt; 更新 &gt; 更新设置 &gt; 切换镜像源</code> 即可，若为显示 <code>切换镜像源</code>，需要先关闭 <code>智能镜像源</code>。</p>
<h4 id="蓝牙键盘"><a href="#蓝牙键盘" class="headerlink" title="蓝牙键盘"></a>蓝牙键盘</h4><p>我的蓝牙键盘罗技 Keyboard K480，连接时还需要输入配对码，所以不能简单通过系统自带蓝牙连接上。</p>
<h5 id="bluetoothctl"><a href="#bluetoothctl" class="headerlink" title="bluetoothctl"></a>bluetoothctl</h5><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo service bluetooth start <span class="comment"># 打开系统蓝牙</span></span><br><span class="line">bluetoothctl <span class="comment"># 进入bluetoothctl</span></span><br><span class="line">power on</span><br><span class="line">agent on</span><br><span class="line">default-agent</span><br><span class="line">scan on <span class="comment"># 扫描其它蓝牙设备</span></span><br><span class="line">pair YourDeviceMacAddress <span class="comment"># 与设备配对（请把 YourDeviceMacAddress 换成你蓝牙键盘的 MAC 地址）</span></span><br><span class="line"><span class="comment"># 这时终端应该会显示如下类似信息</span></span><br><span class="line"><span class="comment"># [agent] Passkey: 123456</span></span><br><span class="line"><span class="comment"># 在键盘上输入配对码后回车</span></span><br><span class="line">trust YourDeviceMacAddress <span class="comment"># 信任该设备</span></span><br><span class="line">connect YourDeviceMacAddress <span class="comment"># 连接该设备</span></span><br><span class="line"><span class="comment"># 这时候键盘上的指示灯不再闪烁，则键盘已成功连接</span></span><br></pre></td></tr></table></figure>

<p>or</p>
<h5 id="blueman"><a href="#blueman" class="headerlink" title="blueman"></a>blueman</h5><p>一款功能强大的蓝牙管理器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install blueman</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.lolimay.cn/2018/11/07/deepin-keyboard-k380/" target="_blank" rel="noopener">deepin连接罗技蓝牙键盘K380</a></p>
</blockquote>
<h4 id="打印机"><a href="#打印机" class="headerlink" title="打印机"></a>打印机</h4><p><a href="https://wiki.deepin.org/wiki/打印机" target="_blank" rel="noopener">打印机 - deepin wiki</a></p>
<p><a href="https://wiki.deepin.org/wiki/Deepin上使用惠普打印机" target="_blank" rel="noopener">Deepin上使用惠普打印机 - deepin wiki</a></p>
<p>首先按照官方教程，安装好相关厂商打印机的驱动。</p>
<h5 id="无线打印机"><a href="#无线打印机" class="headerlink" title="无线打印机"></a>无线打印机</h5><p>Linux 下似乎识别不了 <code>169.254.x.x</code> 网段，所以如果在此段的打印机需要先将无线打印机地址设置为 <code>DHCP</code>。<br>（我是先用家里另外一台 Windows 系统电脑，进入 <code>169.254.x.x</code> 设置的。）</p>
<p>设置为 <code>DHCP</code>后，会自动切换到 <code>192.168.x.x</code>。<br>此时再输入 <code>hp-setup</code> 设置无线打印机，最后 <code>ho-setup 192.168.x.x</code> 添加无线打印机。</p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>开发常用命令笔记</title>
    <url>/2017/08/21/note/dev-command-note/</url>
    <content><![CDATA[<p>Some Commands Record.</p>
<h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><a href="https://yunyoujun.cn/note/linux-learn-note/" target="_blank" rel="noopener">Linux</a></h3><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a><a href="https://yunyoujun.cn/note/git-learn-note/" target="_blank" rel="noopener">Git</a></h3><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><ul>
<li>显示所有环境变量 <code>env</code></li>
<li>导出变量 <code>export NODE_ENV=&#39;production&#39;</code></li>
<li>删除变量 <code>unset NODE_ENV</code></li>
</ul>
<blockquote>
<p><code>NODE_ENV</code> 为举例变量名，可使用任意名称</p>
</blockquote>
<h3 id="命令行打开网页或文件夹"><a href="#命令行打开网页或文件夹" class="headerlink" title="命令行打开网页或文件夹"></a>命令行打开网页或文件夹</h3><ul>
<li>Linux : <code>open xxx</code></li>
<li>Windows : 打开网页 <code>start xxx</code> | 打开文件资源管理器 <code>explorer</code></li>
</ul>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>打开网址 &lt;yunyoujun.cn&gt;：<br><code>start yunyoujun.cn</code></p>
<p>打开当前目录：<br><code>explorer .</code></p>
<h3 id="amp-amp-与"><a href="#amp-amp-与" class="headerlink" title="&amp;&amp; 与 ||"></a>&amp;&amp; 与 ||</h3><ul>
<li><code>;</code> 如果被分号(;)所分隔的命令会连续的执行下去，就算是错误的命令也会继续执行后面的命令。</li>
<li>如果第一个命令执行成功，与操作符 ( &amp;&amp; )才会执行第二个命令</li>
<li>如果第一个命令执行失败，或操作符 ( || )才会执行第二个命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># algolia.sh</span></span><br><span class="line"><span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY=xxx</span><br><span class="line">hexo clean</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如上文件在 <code>git bash</code> 中执行时为逐行执行，执行完 <code>hexo clean</code> 后（不管从成功还是失败）执行 <code>hexo alglolia</code></p>
</li>
<li><p><code>hexo clean &amp;&amp; hexo algolia</code> 则意味着 <code>hexo clean</code> 执行成功，才会执行 <code>hexo algolia</code></p>
</li>
</ul>
<hr>
<h3 id="Java-MVN"><a href="#Java-MVN" class="headerlink" title="Java MVN"></a>Java MVN</h3><ul>
<li><p>编译 Java :<br><code>mvn compile (默认放在 src/main/java 目录下)</code></p>
</li>
<li><p>执行 java 类 :<br><code>mvn exec:java -Dexec.mainClass=&quot;bean.User&quot;</code></p>
</li>
<li><p>运行服务器 :<br><code>mvn tomcat7:run</code></p>
</li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 学习笔记</title>
    <url>/2017/08/21/note/git-learn-note/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Gulp 使用笔记</title>
    <url>/2019/01/25/note/gulp-use-note/</url>
    <content><![CDATA[<p><a href="https://gulpjs.com/" target="_blank" rel="noopener">Gulp</a></p>
<ul>
<li><a href="https://gulpjs.com/docs/en/api/concepts" target="_blank" rel="noopener">API</a></li>
</ul>
<a id="more"></a>

<p><a href="https://gulpjs.com/docs/en/getting-started/explaining-globs#special-character-double-star" target="_blank" rel="noopener">Special character: ** (double-star)</a></p>
<hr>
<p>To be continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Gulp</tag>
      </tags>
  </entry>
  <entry>
    <title>Everyday Auto Xuexiqiangguo</title>
    <url>/2019/05/16/note/everyday-auto-xuexiqiangguo/</url>
    <content><![CDATA[<p>You know what I mean.</p>
<a id="more"></a>

<p>GitHub: <a href="https://github.com/fuck-xuexiqiangguo/Fuck-XueXiQiangGuo" target="_blank" rel="noopener">Fuck-XueXiQiangGuo</a></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p><a href="https://github.com/fuck-xuexiqiangguo/Fuck-XueXiQiangGuo#直接在命令行界面运行" target="_blank" rel="noopener">直接在命令行界面运行</a></p>
<p><code>github</code> 源下载很慢，可以试试<a href="https://cdn.staticaly.com/gh/fuck-xuexiqiangguo/Fuck-XueXiQiangGuo/master/Fuck%E5%AD%A6%E4%B9%A0%E5%BC%BA%E5%9B%BD-linux.zip" target="_blank" rel="noopener">镜像2</a>。</p>
<p>网站说明文档提供的是 <code>Ubuntu</code> 系列安装方法，与 <code>CentOS</code> 系列略有区别。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum update</span><br><span class="line">yum upgrade</span><br><span class="line">yum install -y \</span><br><span class="line">    wget \</span><br><span class="line">    unzip \</span><br><span class="line">    Xvfb \</span><br><span class="line">    gtk3 \</span><br><span class="line">    libXScrnSaver \</span><br><span class="line">    <span class="comment"># alsa-lib-devel.x86_64</span></span><br><span class="line"></span><br><span class="line">Xvfb -ac -screen scrn 1280x2000x24 :9.0 &amp;</span><br><span class="line"><span class="built_in">export</span> DISPLAY=:9.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并解压程序</span></span><br><span class="line">wget -O fuck-xuexiqiangguo.zip https://cdn.staticaly.com/gh/fuck-xuexiqiangguo/Fuck-XueXiQiangGuo/master/Fuck学习强国-linux.zip</span><br><span class="line">unzip -q -d ./fuck-xuexiqiangguo/ fuck-xuexiqiangguo.zip</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> fuck-xuexiqiangguo</span><br><span class="line">chmod +x ./Fuck学习强国</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行程序</span></span><br><span class="line">./Fuck学习强国 --headless</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待片刻，使用学习强国APP扫描屏幕上的二维码登录</span></span><br></pre></td></tr></table></figure>

<h2 id="Help"><a href="#Help" class="headerlink" title="Help"></a>Help</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./Fuck学习强国 --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<h2 id="Auto"><a href="#Auto" class="headerlink" title="Auto"></a>Auto</h2><p>编写每天随机时间执行脚本。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/crontab</span></span><br><span class="line">0 8 * * * root /home/yunyou/bash/start-xxqg.sh</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /home/yunyou/bash/start-xxqg.sh</span></span><br><span class="line"><span class="comment"># start-xxqg.sh</span></span><br><span class="line">python3 /home/yunyou/bash/close-xxqg.py</span><br><span class="line">screen -r xxqg</span><br><span class="line"><span class="comment"># sleep $&#123;RANDOM&#125;'s'</span></span><br><span class="line"><span class="built_in">export</span> DISPLAY=:9.0</span><br><span class="line"><span class="built_in">cd</span> /home/yunyou/github/fuck-xuexiqiangguo</span><br><span class="line">./Fuck学习强国 --headless</span><br></pre></td></tr></table></figure>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kill xuexiqiangguo</span></span><br><span class="line"><span class="comment"># vim /home/yunyou/bash/close-xxqg.py</span></span><br><span class="line"><span class="comment"># close-xxqg.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line">list = os.popen(<span class="string">"ps -ef|grep ./Fuck|grep headless|grep -v grep|awk '&#123;print $2&#125;'"</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> pid <span class="keyword">in</span> list:</span><br><span class="line">    os.kill(int(pid),signal.SIGKILL)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 学习笔记</title>
    <url>/2019/04/06/note/javascript-learn-note/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Learn JavaScript.</p>
<a id="more"></a>

<h2 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h2><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><ul>
<li><input disabled="" type="checkbox"> <a href="http://liubin.org/promises-book/" target="_blank" rel="noopener">JavaScript Promise迷你书（中文版）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises" target="_blank" rel="noopener">使用 Promises - JavaScript | MDN</a></li>
<li><input disabled="" type="checkbox"> <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener">Promise - JavaScript | MDN</a></li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX 使用笔记</title>
    <url>/2019/10/21/note/latex-use-note/</url>
    <content><![CDATA[<p>LaTeX 使用过程的一些笔记与资源</p>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想起毕业论文虽然是用 <a href="https://baike.baidu.com/item/LaTeX" target="_blank" rel="noopener">LaTeX</a> 写的，还特地改了一个模版出来。</p>
<blockquote>
<p><a href="https://github.com/YunYouJun/smuthesis" target="_blank" rel="noopener">SmuThesis</a> 基于 <a href="https://github.com/xueruini/thuthesis" target="_blank" rel="noopener">ThuThesis</a> 修改，Orz，不过想来也几乎不会有人用。</p>
</blockquote>
<p>但现在使用方法也同样早已忘了一干二净。<br>那时还是本地配置的环境，体积巨大繁琐无比。</p>
<p>直到后来发现了 <a href="https://www.sharelatex.com/" target="_blank" rel="noopener">ShareLaTeX - 在线 LaTeX 编辑器</a>，而现在又与 <a href="https://www.overleaf.com" target="_blank" rel="noopener">Overleaf</a> 强强联手，甚至省去抉择的烦恼。<br>便打算好好磨练一番技巧。</p>
<p><img src="https://www.sharelatex.com/img/ol_plus_sl.png" alt="Overleaf + ShareLaTeX" loading="lazy"></p>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><a href="https://www.overleaf.com" target="_blank" rel="noopener">Overleaf, Online LaTex Editor</a></li>
<li><a href="https://cn.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes" target="_blank" rel="noopener">Learn LaTeX in 30 minutes - Overleaf</a></li>
<li><a href="https://yunyoujun.cn/share/trans-learn-latex-in-30-minutes/" target="_blank" rel="noopener">【译】30分钟学会 LaTeX</a>(XP，自己翻译的)</li>
<li><a href="https://github.com/CTeX-org/lshort-zh-cn/releases" target="_blank" rel="noopener">CTeX-org/lshort-zh-cn - 一份（不太）简短的 LaTex 中文介绍</a></li>
</ul>
<h3 id="Bibtex"><a href="#Bibtex" class="headerlink" title="Bibtex"></a>Bibtex</h3><p>管理参考文献（最喜欢的功能了）</p>
<ul>
<li><a href="https://www.overleaf.com/learn/latex/Bibliography_management_in_LaTeX" target="_blank" rel="noopener">Bibliography management in LaTeX</a></li>
<li><a href="https://www.overleaf.com/learn/latex/Bibliography_management_with_bibtex" target="_blank" rel="noopener">Bibliography management with bibtex - Overleaf</a></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 静态博客搭建笔记</title>
    <url>/2017/10/13/note/hexo-build-note/</url>
    <content><![CDATA[<blockquote>
<p>Wordpress 你放心，我暂时是不会抛弃你的。<br>2017.12.11 正式抛弃 2333</p>
</blockquote>
<hr>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>：快速、简洁且高效的博客框架</p>
<a id="more"></a>

<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>多语言文档（含中文）</li>
<li>静态博客，无需服务器</li>
<li>部署、迁移、备份方便</li>
<li>Geek</li>
</ul>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>跟随文档步骤即可：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="推荐主题"><a href="#推荐主题" class="headerlink" title="推荐主题"></a>推荐主题</h2><ul>
<li><a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">hexo-theme-yun</a>：没错，是私货</li>
<li><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>：应该是最出名的 Hexo 主题</li>
</ul>
<hr>
<h2 id="一些解决方案"><a href="#一些解决方案" class="headerlink" title="一些解决方案"></a>一些解决方案</h2><h3 id="备份自己的-Hexo-源文件"><a href="#备份自己的-Hexo-源文件" class="headerlink" title="备份自己的 Hexo 源文件"></a>备份自己的 Hexo 源文件</h3><ul>
<li>在本地的 GitHub Pages 的项目(xxx.github.io)中,通过 <code>git bash</code> 建立新的分支 hexo<br>(可以现在 GitHub 上新建再 clone 自自己的文件夹)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure>

<ul>
<li><code>git checkout hexo</code> 切换至 hexo 分支</li>
<li>此后对 hexo 源文件的配置修改等操作，默认在此分支下操作即可</li>
<li>将修改推送至远程分支</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">'update hexo backup'</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>

<h3 id="每次命令执行繁琐，使用批处理"><a href="#每次命令执行繁琐，使用批处理" class="headerlink" title="每次命令执行繁琐，使用批处理"></a>每次命令执行繁琐，使用批处理</h3><ul>
<li>在 Hexo 根目录下新建批处理文件 <code>update.sh</code>,并编辑如下内容。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo d -g <span class="comment"># 重新部署 Hexo</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">'update hexo backup'</span></span><br><span class="line">git push origin hexo <span class="comment"># 备份 Hexo 源文件</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在 Hexo 根目录下，通过如下命令执行。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./update.sh</span><br></pre></td></tr></table></figure>

<h3 id="集成-Algolia-搜索插件"><a href="#集成-Algolia-搜索插件" class="headerlink" title="集成 Algolia 搜索插件"></a><a href="https://www.npmjs.com/package/hexo-algolia" target="_blank" rel="noopener">集成 Algolia 搜索插件</a></h3><h4 id="Algolia"><a href="#Algolia" class="headerlink" title="Algolia"></a><a href="https://www.algolia.com/" target="_blank" rel="noopener">Algolia</a></h4><p>The Most Reliable Platform for Building Search.</p>
<p>在 hexo 的 <code>_config.yml</code> 文件中，添加 algolia 配置。（注释记得去掉）</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">'xxx'</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">'xxx'</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">'my-hexo-blog'</span> <span class="string">//</span> <span class="string">填写在</span> <span class="string">aloglia</span> <span class="string">中设置的名称</span></span><br><span class="line">  <span class="attr">chunkSize:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">excerpt</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">excerpt:strip</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gallery</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">permalink</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">photos</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">slug</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tags</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">title</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-algolia --save // 使用 npm 安装 hexo-algolia 插件</span><br><span class="line"><span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY=xxx // xxx 为 apiKey</span><br><span class="line">hexo clean</span><br><span class="line">hexo algolia // 生成index</span><br></pre></td></tr></table></figure>

<h3 id="为-Next-主题添加阅读次数统计"><a href="#为-Next-主题添加阅读次数统计" class="headerlink" title="为 Next 主题添加阅读次数统计"></a>为 Next 主题添加阅读次数统计</h3><p><a href="http://leancloud.cn" target="_blank" rel="noopener"><strong>LeanCloud</strong></a><br>采用第三方 LeanCloud 服务实现</p>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a> 主题集成了 LeanCloud 统计。</p>
<ul>
<li>进入官网，注册账号，创建应用（开发版为免费使用）</li>
<li>进入创建的应用中，选择左侧导航栏中的“存储”，随后点击“创建 Class”，将 Class 名称填为 Counter，并选择<strong>无限制</strong>选项。</li>
<li>进入 Next 主题配置文件 <code>_config.yml</code> ，配置 <code>leancloud_visitors</code> 属性 <code>enable</code> 为 <code>true</code>，并配置对应的 <code>App ID</code> 与 <code>App Key</code> 。 (在 <code>LeanCloud</code> 左侧导航栏的设置界面，单击“应用 Key”可以看到应用的 App ID 和 App Key。)</li>
</ul>
<hr>
<h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><h3 id="配置-theme-next"><a href="#配置-theme-next" class="headerlink" title="配置 theme/next"></a>配置 theme/next</h3><p>可以在 <code>source</code> 文件夹(含有 <code>_post</code> 的文件夹)下新建 <code>_data</code> 文件夹，并在其中新建 <code>next.yml</code>。其后将需要特定的配置从 <code>theme/next/_config.yml</code> 中复制过来即可。</p>
<p>如果需要覆盖 <code>_config.yml</code> 默认配置， 修改 <code>next.yml</code> 中 <code>override: true</code>。</p>
<h3 id="自动生成目录"><a href="#自动生成目录" class="headerlink" title="自动生成目录"></a>自动生成目录</h3><p>开启 toc (Table of Contents)，</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">toc: true</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>也可以在设置 <code>next.yml</code>中设置默认开启。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Table Of Contents in the Sidebar</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>在 <a href="https://yunyoujun.github.io" target="_blank" rel="noopener">GitHub Pages</a> 和 <a href="https://yunyoujun.coding.me" target="_blank" rel="noopener">Coding Pages</a> 上都进行了部署。</p>
<p><code>_config.yml</code> 可参考 <a href="https://github.com/YunYouJun/yunyoujun.github.io" target="_blank" rel="noopener">GitHub Address</a></p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Windows 中使用 Makefile</title>
    <url>/2018/05/05/note/makefile-in-windows/</url>
    <content><![CDATA[<h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>在 Windows 上使用 Makefile</p>
<a id="more"></a>

<h2 id="Reason"><a href="#Reason" class="headerlink" title="Reason"></a>Reason</h2><p>使用 Latex 的过程中用到了 Makefile ，但是 Makefile 是 Linux 上带的</p>
<h2 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h2><p>安装 <a href="https://sourceforge.net/projects/mingw/" target="_blank" rel="noopener">MinGW</a></p>
<p>安装好后记得勾选 <code>mingw32-make</code></p>
<p>Installation -&gt; apply</p>
<p>找到 <code>make.exe</code> 所处路径，为 Windows 系统新增环境变量</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">MinGW</span>\<span class="title">msys</span>\1.0\<span class="title">bin</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>makefile</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 学习笔记</title>
    <url>/2019/04/08/note/linux-learn-note/</url>
    <content><![CDATA[<p>记录一些笔记与坑</p>
<a id="more"></a>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><a href="http://linux.vbird.org/" target="_blank" rel="noopener">鸟哥的 Linux 私房菜</a></li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><h4 id="Deepin"><a href="#Deepin" class="headerlink" title="Deepin"></a><a href="https://www.deepin.org/" target="_blank" rel="noopener">Deepin</a></h4><ul>
<li><a href="../deepin-use-note/">Deepin 使用笔记</a></li>
</ul>
<h3 id="Virtual-Machine"><a href="#Virtual-Machine" class="headerlink" title="Virtual Machine"></a>Virtual Machine</h3><ul>
<li><a href="https://www.virtualbox.org/" target="_blank" rel="noopener">Virual Box</a></li>
</ul>
<h3 id="Some-tools"><a href="#Some-tools" class="headerlink" title="Some tools"></a>Some tools</h3><h4 id="nscd"><a href="#nscd" class="headerlink" title="nscd"></a>nscd</h4><p>管理 DNS 缓存</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install nscd</span><br><span class="line">sudo service nscd restart</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/nscd restart</span></span><br></pre></td></tr></table></figure>

<h2 id="Dev"><a href="#Dev" class="headerlink" title="Dev"></a>Dev</h2><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><h4 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></h4><p>需要先安装 <code>zsh</code></p>
<p>GitHub 上星数很多的一个项目，自己还没有搞明白，不过大致是可以帮助更方便使用 bash 的工具。</p>
<p>配置插件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim ~/.zshrc</span></span><br><span class="line">plugins=(</span><br><span class="line">  git</span><br><span class="line">  zsh-autosuggestions</span><br><span class="line">  zsh-syntax-highlighting</span><br><span class="line">  node</span><br><span class="line">  npm</span><br><span class="line">  python</span><br><span class="line">  sudo</span><br><span class="line">  autojump</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/wiki" target="_blank" rel="noopener">oh-my-zsh | wiki</a></li>
<li><a href="https://www.yuque.com/yunyoujun/notes/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh 常用插件配置指南</a></li>
</ul>
<h4 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h4><p>配置环境变量</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">code ~/.zshrc</span><br><span class="line"><span class="comment"># 进入文件</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"应用程序路径:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="comment"># $PATH 不可丢掉，是环境中别的变量，冒号为分隔符。</span></span><br></pre></td></tr></table></figure>

<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>

<h4 id="git-config-–global"><a href="#git-config-–global" class="headerlink" title="git config –global"></a>git config –global</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">"me@yunyoujun.cn"</span></span><br><span class="line">git config --global user.name <span class="string">"YunYouJun"</span></span><br></pre></td></tr></table></figure>

<p>记住密码</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8" target="_blank" rel="noopener">Git-工具-凭证存储</a></p>
</blockquote>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a><a href="https://github.com/nodejs/help/wiki/Installation" target="_blank" rel="noopener">Node.js</a></h3><p><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a></p>
<p>Linux 安装 <code>Node.js</code> 的最方便的工具</p>
<p>如果速度太慢，可以更换为国内镜像：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node</span><br></pre></td></tr></table></figure>

<h4 id="安装-nvm"><a href="#安装-nvm" class="headerlink" title="安装 nvm"></a>安装 nvm</h4><blockquote>
<p><a href="https://github.com/nvm-sh/nvm#installation-and-update" target="_blank" rel="noopener">https://github.com/nvm-sh/nvm#installation-and-update</a><br>参考官方文档使用最新的安装脚本</p>
</blockquote>
<p>如果仍然 <code>command not found</code>，可以添加进 <code>~/.bashrc</code>, <code>~/.zshrc</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim ~/.zshrc</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure>

<h4 id="安装-Node"><a href="#安装-Node" class="headerlink" title="安装 Node"></a>安装 Node</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install latest node</span></span><br><span class="line">nvm install node</span><br><span class="line"><span class="comment"># install stable node</span></span><br><span class="line">nvm install stable</span><br></pre></td></tr></table></figure>

<h4 id="安装-Python3"><a href="#安装-Python3" class="headerlink" title="安装 Python3"></a>安装 Python3</h4><p>使用 <a href="https://npm.taobao.org/mirrors/python/3.7.3/" target="_blank" rel="noopener">淘宝镜像</a> 快一些</p>
<p><a href="https://npm.taobao.org/mirrors/python/3.7.3/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/python/3.7.3/</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://npm.taobao.org/mirrors/python/3.7.3/Python-3.7.3.tgz</span><br><span class="line">tar -xvzf Python-3.7.3.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.7.3</span><br><span class="line"><span class="comment"># 这个需要提前安装 否则 make install 可能报错</span></span><br><span class="line">sudo apt-get install libffi-dev</span><br><span class="line">sudo apt install libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-dev</span><br><span class="line">./configure --with-ssl</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://stackoverflow.com/questions/45954528/pip-is-configured-with-locations-that-require-tls-ssl-however-the-ssl-module-in" target="_blank" rel="noopener">pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available</a></p>
</blockquote>
<p>临时解决方案</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip3 install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com ssl xxx</span><br></pre></td></tr></table></figure>

<p>通用解决方案</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt install libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-dev</span><br><span class="line"><span class="comment"># 随后重新编译安装</span></span><br></pre></td></tr></table></figure>

<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><h3 id="apt-apt-get"><a href="#apt-apt-get" class="headerlink" title="apt apt-get"></a>apt apt-get</h3><p><code>apt</code> = <code>apt-get</code> + <code>apt-cache</code> + <code>apt-config</code></p>
<p>简单来说就是：apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install xxx</span><br><span class="line">sudo apt remove xxx</span><br></pre></td></tr></table></figure>

<blockquote>
<p>常用命令</p>
</blockquote>
<ul>
<li>为文件目录树全部赋予权限：<code>chmod 775 -R filename</code></li>
<li>迭代删除文件夹中所有内容：<code>rm -rf &amp;lt;filename or dirname&amp;gt;</code></li>
</ul>
<h3 id="挂载数据盘"><a href="#挂载数据盘" class="headerlink" title="挂载数据盘"></a>挂载数据盘</h3><ul>
<li>查看已有磁盘：<code>fdisk -l</code></li>
<li>挂载磁盘：<code>mount /dev/vdb1 /home/data</code></li>
</ul>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Virtual-Box-安装-CentOS-时，鼠标不显示"><a href="#Virtual-Box-安装-CentOS-时，鼠标不显示" class="headerlink" title="Virtual Box 安装 CentOS 时，鼠标不显示"></a>Virtual Box 安装 CentOS 时，鼠标不显示</h3><ul>
<li>Virtual Box 6.0</li>
<li>CentOS 7.x</li>
</ul>
<p>Solution:</p>
<blockquote>
<p>设置 -&gt; 显示 -&gt; 屏幕 -&gt; 显卡控制器 -&gt; 切换为 VBoxVGA</p>
</blockquote>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx 配置笔记</title>
    <url>/2018/05/24/note/nginx-conf-note/</url>
    <content><![CDATA[<a id="more"></a>

<h2 id="Nginx-反向代理"><a href="#Nginx-反向代理" class="headerlink" title="Nginx 反向代理"></a>Nginx 反向代理</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upstream nuxt &#123;</span><br><span class="line">    server 127.0.0.1:3000; #nuxt项目 监听端口</span><br><span class="line">    keepalive 64;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name coc.yunyoujun.cn;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">        proxy_cache_bypass $http_upgrade;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;nuxt; #反向代理</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="API-代理"><a href="#API-代理" class="headerlink" title="API 代理"></a>API 代理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"># ...</span><br><span class="line">  location &#x2F;api&#x2F; &#123;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;api.clashofclans.com&#x2F;v1&#x2F;;</span><br><span class="line"></span><br><span class="line">    add_header Access-Control-Allow-Origin *;</span><br><span class="line">    add_header Access-Control-Allow-Methods &quot;POST, GET, OPTIONS&quot;;</span><br><span class="line">    add_header Access-Control-Allow-Headers &quot;Origin, Authorization, Accept&quot;;</span><br><span class="line">    add_header Access-Control-Allow-Credentials true;</span><br><span class="line">  &#125;</span><br><span class="line"># ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://segmentfault.com/a/1190000012774650" target="_blank" rel="noopener">next.js、nuxt.js 等服务端渲染框架构建的项目部署到服务器，并用 PM2 守护程序</a></p>
</blockquote>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel 使用笔记</title>
    <url>/2017/08/21/note/laravel-use-note/</url>
    <content><![CDATA[<p>Laravel 框架使用过程中的一些笔记。</p>
<a id="more"></a>

<h2 id="线上部署"><a href="#线上部署" class="headerlink" title="线上部署"></a>线上部署</h2><h3 id="相关过程"><a href="#相关过程" class="headerlink" title="相关过程"></a>相关过程</h3><ol>
<li><a href="/note/lnmp-install/">LNMP 一键安装包</a></li>
<li><a href="/note/a-trap-about-laravel-deploy/">记 LNMP 一键安装后 Laravel 线上部署的坑</a></li>
</ol>
<hr>
<h3 id="关键步骤"><a href="#关键步骤" class="headerlink" title="关键步骤"></a>关键步骤</h3><h4 id="安装-composer"><a href="#安装-composer" class="headerlink" title="安装 composer"></a>安装 composer</h4><ul>
<li><a href="https://getcomposer.org/" target="_blank" rel="noopener">Composer 官网</a></li>
<li><a href="https://developer.aliyun.com/composer" target="_blank" rel="noopener">阿里云 Composer 全量镜像</a></li>
</ul>
<h4 id="git-部署"><a href="#git-部署" class="headerlink" title="git 部署"></a>git 部署</h4><ul>
<li>安装 git，<code>$ sudo apt install git</code>。</li>
<li>创建 ssh-key，<code>$ ssh-keygen -t rsa -C &quot;邮箱&quot;</code>,一路回车。</li>
<li><code>$ cat ~/.ssh/id_rsa.pub</code> 复制公钥到 github 上。添加 ssh key。</li>
<li><code>$ cd /home/wwwroot</code> 到放置项目代码的文件夹</li>
<li><code>$ git clone git@github.com:用户名/项目名.git</code>，从 github 获取线上代码。</li>
<li><code>$ cp .env.example .env</code> 对.env 文件并进行配置。（app_key,database,mail 等）</li>
<li><code>$ composer install</code> 安装相关包</li>
<li><code>$ php artisan migrate</code> 安装数据库迁移</li>
</ul>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="数据库字符长度过长"><a href="#数据库字符长度过长" class="headerlink" title="数据库字符长度过长"></a>数据库字符长度过长</h3><p>参见 <a href="https://segmentfault.com/a/1190000008416200" target="_blank" rel="noopener">Laravel 5.4 migrate 时报错: Specified key was too long error</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">1071 Specified key was too long; max key length is 767 bytes</span><br></pre></td></tr></table></figure>

<p>MySql 支持的 utf8 编码最大字符长度为 3 字节，如果遇到 4 字节的宽字符就会出现插入异常。三个字节 UTF-8 最大能编码的 Unicode 字符是 0xffff ，即 Unicode 中的基本多文种平面（BMP）。因而包括 Emoji 表情（Emoji 是一种特殊的 Unicode 编码）在内的非基本多文种平面的 Unicode 字符都无法使用 MySql 的 utf8 字符集存储。</p>
<p>这也应该就是 Laravel 5.4 改用 4 字节长度的 utf8mb4 字符编码的原因之一。不过要注意的是，只有 MySql 5.5.3 版本以后才开始支持 utf8mb4 字符编码（查看版本：selection version();）。如果 MySql 版本过低，需要进行版本更新。</p>
<h4 id="解决方案（二选一）"><a href="#解决方案（二选一）" class="headerlink" title="解决方案（二选一）"></a>解决方案（二选一）</h4><ol>
<li>升级 MySql 版本到 5.5.3 以上。</li>
<li>手动配置迁移命令 migrate 生成的默认字符串长度，在 <code>app\Providers\AppServiceProders</code> 中调用 <code>Schema::defaultStringLength</code> 方法来实现配置：</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Bootstrap any application services.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   Schema::defaultStringLength(<span class="number">191</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="模版插件"><a href="#模版插件" class="headerlink" title="模版插件"></a>模版插件</h2><h3 id="Laravel-admin"><a href="#Laravel-admin" class="headerlink" title="Laravel-admin"></a>Laravel-admin</h3><ul>
<li>GitHub: <a href="https://github.com/z-song/laravel-admin" target="_blank" rel="noopener">https://github.com/z-song/laravel-admin</a></li>
<li>中文文档： <a href="http://laravel-admin.org/docs/#/zh/" target="_blank" rel="noopener">http://laravel-admin.org/docs/#/zh/</a></li>
<li>官网：<a href="http://laravel-admin.org" target="_blank" rel="noopener">http://laravel-admin.org</a></li>
<li>Demo: <a href="http://laravel-admin.org/demo/auth/login" target="_blank" rel="noopener">http://laravel-admin.org/demo/auth/login</a></li>
</ul>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>Laravel</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 CCD 或 FABRIK 实现逆向动力学</title>
    <url>/2020/01/14/note/methods-for-inverse-kinematics/</url>
    <content><![CDATA[<a id="more"></a>

<p>动力学主要分为正向动力学（FK）和反向动力学（IK）。<br>正向动力学实现起来十分简单，了解点基本原理，或者网上一搜，都能写出来。<br>反向动力学中比较流行的方法则是 Cyclic Coordinate Descent（CCD）和 <a href="https://www.sciencedirect.com/science/article/pii/S1524070311000178" target="_blank" rel="noopener">Forward And Backward Reaching Inverse Kinematics</a> (FABRIK)。<br>还有几何分析与雅可比矩阵的方法，计算起来比较复杂，用的不是太多。</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Inverse_kinematics" target="_blank" rel="noopener">Inverse kinematics</a></li>
<li><a href="http://www.cs.cmu.edu/~15464-s13/lectures/lecture6/jlander_gamedev_nov98.pdf" target="_blank" rel="noopener">Making Kine More Flexible</a></li>
<li><a href="https://blog.csdn.net/noahzuo/article/details/53908141" target="_blank" rel="noopener">角色动画研究 —— IK的三种结算方法</a></li>
</ul>
<p>维基百科和一些论文、博客也讲得很清楚了。<br><del>（摔，那你水这篇文章干什么？）</del><br>为了大家更方便地从代码层级来理解，这篇文章最主要的作用大概就是提供 Demo 了。</p>
<p>下面主要分为 CCD 和 FABRIK（话说 IK 代表的就是逆向动力学，为啥 CCD 缩写不带 IK，而 FABRIK 缩写通常带 IK 呢？） 两种方法来说。</p>
<h2 id="CCD"><a href="#CCD" class="headerlink" title="CCD"></a>CCD</h2><ul>
<li><a href="https://blog.csdn.net/noahzuo/article/details/53908141" target="_blank" rel="noopener">角色动画研究 —— IK的三种结算方法</a></li>
<li><a href="http://www.ryanjuckett.com/programming/cyclic-coordinate-descent-in-2d/" target="_blank" rel="noopener">Cyclic Coordinate Descent in 2D</a></li>
</ul>
<h3 id="CCD-p5-js"><a href="#CCD-p5-js" class="headerlink" title="CCD - p5.js"></a>CCD - <a href="https://p5js.org/zh-Hans/" target="_blank" rel="noopener">p5.js</a></h3><p>Fullscreen: <a href="https://editor.p5js.org/YunYouJun/full/kJJqXPATQ" target="_blank" rel="noopener">https://editor.p5js.org/YunYouJun/full/kJJqXPATQ</a><br>Editor: <a href="https://editor.p5js.org/YunYouJun/sketches/kJJqXPATQ" target="_blank" rel="noopener">https://editor.p5js.org/YunYouJun/sketches/kJJqXPATQ</a></p>
<blockquote>
<p>代码参考自：<a href="https://www.davepagurek.com/blog/inverse-kinematics/" target="_blank" rel="noopener">Simple Inverse Kinematics - Dave Pagurek</a></p>
</blockquote>
<h2 id="FABRIK"><a href="#FABRIK" class="headerlink" title="FABRIK"></a>FABRIK</h2><p>FABRIK 是一种<a href="https://baike.baidu.com/item/%E5%90%AF%E5%8F%91%E5%BC%8F%E7%AE%97%E6%B3%95/938987" target="_blank" rel="noopener">启发式算法</a>。实现起来较为简单，计算又少又快。</p>
<p>原文的算法出自这篇论文 <a href="https://www.sciencedirect.com/science/article/pii/S1524070311000178" target="_blank" rel="noopener">FABRIK: A fast, iterative solver for the Inverse Kinematics problem</a></p>
<p>算法的大致描述看<a href="https://blog.csdn.net/noahzuo/article/details/80188366" target="_blank" rel="noopener">这里</a>也可以理解，就不再多述。</p>
<h3 id="FABRIK-p5-js"><a href="#FABRIK-p5-js" class="headerlink" title="FABRIK - p5.js"></a>FABRIK - <a href="https://p5js.org/zh-Hans/" target="_blank" rel="noopener">p5.js</a></h3><p>Fullscreen: <a href="https://editor.p5js.org/YunYouJun/embed/bS8jB3EsC" target="_blank" rel="noopener">https://editor.p5js.org/YunYouJun/embed/bS8jB3EsC</a><br>Editor: <a href="https://editor.p5js.org/YunYouJun/sketches/bS8jB3EsC" target="_blank" rel="noopener">https://editor.p5js.org/YunYouJun/sketches/bS8jB3EsC</a></p>
<blockquote>
<p>代码参考自：<a href="https://thecodingtrain.com/CodingChallenges/064.3-inverse-kinematics-fixed-point" target="_blank" rel="noopener">Inverse Kinematics - Fixed Point - Coding Challenge #64.3 · The Coding Train</a></p>
</blockquote>
<h3 id="Cocos-Creator"><a href="#Cocos-Creator" class="headerlink" title="Cocos Creator"></a>Cocos Creator</h3><p>新年 🧨 版（小 bug 之后修）</p>
<p><img src="https://i.loli.net/2020/01/16/aw4Z2vzNULps586.png" alt="image.png" loading="lazy"></p>
<p>GitHub: <a href="https://github.com/YunYouJun/cocos-creator-ik/" target="_blank" rel="noopener">https://github.com/YunYouJun/cocos-creator-ik/</a></p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>计算机图形学</tag>
        <tag>学习</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>npm &amp; yarn 常用包与命令</title>
    <url>/2017/10/06/note/npm-and-yarn/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>笔记</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 笔记</title>
    <url>/2017/09/19/note/node-js-note/</url>
    <content><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>学习 Node.js 中的一些笔记与资源。</p>
<a id="more"></a>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Node-js-部署"><a href="#Node-js-部署" class="headerlink" title="Node.js 部署"></a>Node.js 部署</h3><ul>
<li>使用git安装 <code>nvm</code> (Git install) : <code>git clone https://github.com/creationix/nvm.git .nvm</code> (使用 <code>cd ~/</code> ，在root目录下安装即可。)</li>
<li>安装稳定版本 <code>node.js</code> : <code>nvm install stable</code></li>
</ul>
<p>参见：<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">https://github.com/creationix/nvm</a></p>
<h3 id="Node-js-在LNMP环境下部署"><a href="#Node-js-在LNMP环境下部署" class="headerlink" title="Node.js 在LNMP环境下部署"></a>Node.js 在LNMP环境下部署</h3><ul>
<li>lnmp 创建虚拟主机</li>
<li>进入 <code>/usr/local/nginx/conf/vhost</code> 文件夹下修改conf虚拟主机配置。</li>
<li>将conf配置文件中 <code>location</code> 内容全部替换为如下内容：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header   X-Real-IP            $remote_addr;</span><br><span class="line">    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header   Host                   $http_host;</span><br><span class="line">    proxy_set_header   X-NginX-Proxy    true;</span><br><span class="line">    proxy_set_header   Connection &quot;&quot;;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_pass        http:&#x2F;&#x2F;127.0.0.1:3000;</span><br><span class="line">    &#x2F;&#x2F;此处端口号，应与设置中nodejs监听的端口号一致</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>重启 <code>nginx</code> 服务器</li>
</ul>
<h3 id="Node-js-实战教程"><a href="#Node-js-实战教程" class="headerlink" title="Node.js 实战教程"></a>Node.js 实战教程</h3><ul>
<li><a href="https://github.com/nswbmw/N-blog" target="_blank" rel="noopener">N-blog</a> (使用 Express + MongoDB 搭建多人博客)</li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>在 macOS 下配置 OpenGL</title>
    <url>/2019/10/01/note/opengl-with-macos/</url>
    <content><![CDATA[<p>More info in <a href="https://yunyoujun.cn/note/webgl-from-zero" target="_blank" rel="noopener">从零开始的 WebGL</a>.</p>
<a id="more"></a>

<h2 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h2><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><ul>
<li><a href="https://book.douban.com/subject/10543022/" target="_blank" rel="noopener">计算机图形学（第四版）</a></li>
<li><a href="https://book.douban.com/subject/10777165/" target="_blank" rel="noopener">交互式计算机图形学 基于 OpenGL 的自顶向下方法(第六版)</a></li>
</ul>
<h3 id="Online"><a href="#Online" class="headerlink" title="Online"></a>Online</h3><ul>
<li><a href="https://learnopengl-cn.github.io/" target="_blank" rel="noopener">LearnOpenGL CN</a></li>
<li><a href="http://www.opengl-tutorial.org/cn/" target="_blank" rel="noopener">opengl-tutorial</a></li>
</ul>
<h2 id="Progress"><a href="#Progress" class="headerlink" title="Progress"></a>Progress</h2><ul>
<li>macOS</li>
<li><a href="https://www.jetbrains.com/clion/" target="_blank" rel="noopener">CLion: A cross-platform IDE for C and C++</a></li>
<li><a href="https://glad.dav1d.de/" target="_blank" rel="noopener">glad</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install glfw</span><br></pre></td></tr></table></figure>

<p>下载 <a href="https://glad.dav1d.de/" target="_blank" rel="noopener">glad</a>，macOS 据说只支持 3.3，所以我选择了 <code>gl: 3.3</code> 和 <code>Profile: Core</code>。<br>解压后将 <code>glad</code> 文件夹直接放入 <code>/usr/local/Cellar</code> 文件夹下。</p>
<p>可以直接用命令 copy 或者，cd 到文件夹下输入 <code>open .</code> 用 finder 打开文件夹。</p>
<p>CLion 新建 C++ 相关默认项目，修改默认项目中的 <code>CMakeLists.txt</code> 即可。</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CMakeLists.txt</span></span><br><span class="line">cmake_minimum_required(VERSION 3.14)</span><br><span class="line">set(PROJECT_NAME <span class="string">"testOpenGL"</span>)</span><br><span class="line">project($&#123;PROJECT_NAME&#125;)</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 14)</span><br><span class="line"></span><br><span class="line">set(GLFW_H /usr/local/Cellar/glfw/3.3/<span class="keyword">include</span>/GLFW)</span><br><span class="line">set(GLAD_H /usr/local/Cellar/glad/<span class="keyword">include</span>)</span><br><span class="line">set(KH_H /usr/local/Cellar/glad/<span class="keyword">include</span>/KHR)</span><br><span class="line">include_directories($&#123;GLFW_H&#125; $&#123;GLAD_H&#125; $&#123;KH_H&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加目标链接</span></span><br><span class="line">set(GLFW_LINK /usr/local/Cellar/glfw/3.3/lib/libglfw.3.dylib)</span><br><span class="line">link_libraries($&#123;OPENGL&#125; $&#123;GLFW_LINK&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行编译命令</span></span><br><span class="line">set(SOURCE_FILES <span class="string">"src/glad.c"</span> <span class="string">"main.cpp"</span>)</span><br><span class="line">add_executable($&#123;PROJECT_NAME&#125; $&#123;SOURCE_FILES&#125;)</span><br><span class="line"></span><br><span class="line">if (APPLE)</span><br><span class="line">    target_link_libraries($&#123;PROJECT_NAME&#125; <span class="string">"-framework OpenGL"</span>)</span><br><span class="line">    target_link_libraries($&#123;PROJECT_NAME&#125; <span class="string">"-framework GLUT"</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br></pre></td></tr></table></figure>

<p>修改后记得右击 <code>CMakeLists.txr</code> 执行 <code>Reload CMake Project</code>。</p>
<p>粘贴下方代码，尝试画一个三角形看看吧。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glfw3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">key_callback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> key, <span class="keyword">int</span> scancode, <span class="keyword">int</span> action, <span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//如果按下ESC，把windowShouldClose设置为True，外面的循环会关闭应用</span></span><br><span class="line">    <span class="keyword">if</span>(key==GLFW_KEY_ESCAPE &amp;&amp; action == GLFW_PRESS)</span><br><span class="line">        glfwSetWindowShouldClose(window, GL_TRUE);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"ESC"</span>&lt;&lt;mode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!glfwInit())</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//创建窗口以及上下文</span></span><br><span class="line">    GLFWwindow* window = glfwCreateWindow(<span class="number">640</span>, <span class="number">480</span>, <span class="string">"hello world"</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span>(!window)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建失败会返回NULL</span></span><br><span class="line">        glfwTerminate();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//建立当前窗口的上下文</span></span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">    glfwSetKeyCallback(window, key_callback); <span class="comment">//注册回调函数</span></span><br><span class="line">    <span class="comment">//循环，直到用户关闭窗口</span></span><br><span class="line">    <span class="keyword">while</span>(!glfwWindowShouldClose(window))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*******轮询事件*******/</span></span><br><span class="line">        glfwPollEvents();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*******渲染*******/</span></span><br><span class="line">        <span class="comment">//选择清空的颜色RGBA</span></span><br><span class="line">        glClearColor(<span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.3</span>, <span class="number">1</span>);</span><br><span class="line">        glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始画一个三角形</span></span><br><span class="line">        glBegin(GL_TRIANGLES);</span><br><span class="line">        glColor3f(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//Red</span></span><br><span class="line">        glVertex3f(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        glColor3f(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>); <span class="comment">//Green</span></span><br><span class="line">        glVertex3f(<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        glColor3f(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>); <span class="comment">//Blue</span></span><br><span class="line">        glVertex3f(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//结束一个画图步骤</span></span><br><span class="line">        glEnd();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/******交换缓冲区，更新window上的内容******/</span></span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line">    &#125;</span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ref: <a href="https://www.cnblogs.com/shayue/p/Mac-CLion-xiaOpenGL-huan-jing-pei-zhi.html" target="_blank" rel="noopener">https://www.cnblogs.com/shayue/p/Mac-CLion-xiaOpenGL-huan-jing-pei-zhi.html</a><br>对原文多处进行了修改，CMakeLists.txt 内容缩减。使得步骤更为简单。</p>
</blockquote>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>macOS</tag>
        <tag>CLion</tag>
        <tag>OpenGL</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 学习笔记</title>
    <url>/2018/01/23/note/python-learn-note/</url>
    <content><![CDATA[<h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>记录一些关于 Python 学习过程中的规范、问题与技巧。</p>
<a id="more"></a>

<h1 id="About"><a href="#About" class="headerlink" title="About"></a>About</h1><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ul>
<li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">Python 教程 - 廖雪峰的官方网站</a> （内容详细）</li>
<li><a href="https://bop.mol.uno/" target="_blank" rel="noopener">《简明 Python 教程》</a> （排版舒适）</li>
<li><a href="http://crossincode.com/home/" target="_blank" rel="noopener">Crossin 的编程教室</a> （适合初学）</li>
</ul>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul>
<li><a href="https://github.com/YunYouJun/python-learn" target="_blank" rel="noopener">python-learn</a></li>
</ul>
<h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><ul>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a>（自己目前使用的是这个，需要配置。因为自己还写些其他语言代码，为省事便配置在了一起。）</li>
<li><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">PyCharm</a></li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><code>ctrl + p</code></p>
<p>安装插件 <code>Python</code> （就叫 Python），输入如下命令，或直接在扩展里搜索。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ext install python</span><br></pre></td></tr></table></figure>

<p><code>ctrl + shift + b</code> 运行，或者右键选择在终端中运行 Python 文件。</p>
<p>记得还会自动提示安装 <code>pylint</code> (python 代码规范提示工具)。</p>
<p>如果安装失败，decoding 之类的，根据代码提示，ctrl + 路径进入文件，修改出错行编码 <code>utf-8</code> 为 <code>gbk</code> 。</p>
<h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><p>（文件 -&gt; 首选项 -&gt; 设置）</p>
<p>强迫症患者，<code>C0111</code> 这类警告可以在用户设置里添加如下代码去掉。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">"python.linting.pylintArgs": ["--disable=C,R"],</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>因为平时写 js 用的是 tab 替换为两个空格， python 我看教程一般用的是四个空格缩进，就单独对 python 进行四个空格缩进设置了。</p>
<p>用户设置中添加如下代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">    "[python]": &#123;</span><br><span class="line">        "editor.tabSize": 4</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h2><h3 id="缩进规范"><a href="#缩进规范" class="headerlink" title="缩进规范"></a>缩进规范</h3><p>官方推荐使用 4 个空格缩进</p>
<h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><p>文件名</p>
<ul>
<li>尽量使用小写命名</li>
<li>首字母保持小写</li>
<li>尽量不要用下划线(除非多个单词，且数量不多的情况)</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">snake_case</span><br><span class="line"><span class="comment"># 正确的模块名</span></span><br><span class="line"><span class="keyword">import</span> decoder</span><br><span class="line"><span class="keyword">import</span> html_parser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的模块名</span></span><br><span class="line"><span class="keyword">import</span> Decoder</span><br></pre></td></tr></table></figure>

<h4 id="类名"><a href="#类名" class="headerlink" title="类名"></a>类名</h4><p>使用驼峰(CamelCase)命名风格</p>
<ul>
<li>首字母大写</li>
<li>私有类可用一个下划线开头</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Farm</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimalFarm</span><span class="params">(Farm)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_PrivateFarm</span><span class="params">(Farm)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul>
<li>全小写</li>
<li>可使用下划线连接</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_with_some</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 私有函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_private_func</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<h4 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h4><ul>
<li>全小写</li>
<li>可使用下划线连接</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    school_name = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 常量采用全大写，如有多个单词，使用下划线隔开</span></span><br><span class="line">MAX_NUM = <span class="number">100</span></span><br><span class="line">MAX_IQ = <span class="number">1000</span></span><br></pre></td></tr></table></figure>

<h2 id="Python2-amp-Python3"><a href="#Python2-amp-Python3" class="headerlink" title="Python2 &amp; Python3"></a>Python2 &amp; Python3</h2><h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><p>Python2 中的 <code>urllib2</code>, 在 Python3 中为 <code>urllib.request</code></p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="comment"># 修改为</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br></pre></td></tr></table></figure>

<h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><p>Python3:</p>
<ul>
<li>_thread</li>
<li>threading(推荐使用)</li>
</ul>
<p>Python2 <code>thread</code> 模块已被废弃。用户可以使用 threading 模块代替。所以，在 Python3 中不能再使用”thread” 模块。为了兼容性，Python3 将 thread 重命名为 “_thread”。</p>
<p><a href="http://www.runoob.com/python3/python3-multithreading.html" target="_blank" rel="noopener">Python3 多线程 | 菜鸟教程</a></p>
<h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><h2 id="如何退出解释器提示符"><a href="#如何退出解释器提示符" class="headerlink" title="如何退出解释器提示符"></a>如何退出解释器提示符</h2><h3 id="Linux-amp-OS-X"><a href="#Linux-amp-OS-X" class="headerlink" title="Linux &amp; OS X"></a>Linux &amp; OS X</h3><p>按下 <kbd>ctrl</kbd> + <kbd>d</kbd> 组合键或输入 <code>exit()</code> 并敲下 <kbd>enter</kbd></p>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>按下 <kbd>ctrl</kbd> + <kbd>z</kbd> 组合键并敲击 <kbd>enter</kbd></p>
<h2 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h2><p>如果你需要获得 Python 中有关任何函数或语句的快速信息，你可以使用其内置的 <code>help</code> 功能。</p>
<p>例如，运行 <code>help(&#39;len&#39;)</code> 命令——这将显示出有关 len 函数的帮助，了解其是用来计算项目数量的。</p>
<blockquote>
<p>按下 <kbd>q</kbd> 键可以退出帮助。</p>
</blockquote>
<h1 id="TIMELINE"><a href="#TIMELINE" class="headerlink" title="TIMELINE"></a>TIMELINE</h1><ul>
<li><input checked="" disabled="" type="checkbox"> 2018-01-23 ~ 2018-02-20 Crossin 的编程教室 - Python 入门</li>
<li><input disabled="" type="checkbox"> 2018-09-01 Python 教程 - 廖雪峰的官方网站</li>
<li><input checked="" disabled="" type="checkbox"> 2018-09-01 ~ 2018-12-28 简明 Python 教程</li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>potree 使用笔记</title>
    <url>/2019/10/14/note/potree-use-note/</url>
    <content><![CDATA[<p>potree: WebGL point cloud viewer for large datasets</p>
<a id="more"></a>

<h2 id="Set-up-server"><a href="#Set-up-server" class="headerlink" title="Set up server"></a>Set up server</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python -m xxx.py  <span class="comment">#以模块的方式启动</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer    <span class="comment">#python2中启动一个简单的http服务器</span></span><br><span class="line">python -m http.server    <span class="comment">#python3中启动一个简单的http服务器</span></span><br></pre></td></tr></table></figure>

<p>官方提供的 release 是 <code>.exe</code>，</p>
<p><a href="https://github.com/potree/PotreeConverter" target="_blank" rel="noopener">PotreeConverter</a></p>
<p>macOS</p>
<p><img src="https://m.qpic.cn/psc?/V11qBdwm0lufP3/dnjxTVPfVsTHn6B76MCWBfFVxV2q0diTZODDxgdCI.ScB1pEGYMXHFwlZmd9rNrOklnh4*2IeVcGVL8nnDvh.mXkJvvhT*M65mIszkl1Soc!/b&bo=vACxALwAsQACKQ0!&rf=viewer_4" alt="关爱智障.jpg" loading="lazy"></p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>potree</tag>
        <tag>点云</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的 Minecraft 服务器</title>
    <url>/2019/02/21/note/set-up-my-minecraft-server/</url>
    <content><![CDATA[<h2 id="闲话"><a href="#闲话" class="headerlink" title="闲话"></a>闲话</h2><p>腾讯云的学生机其实续费了几年，也没怎么使用它。<br>阿里云的学生机更是到前几个月，干脆让它过期了。</p>
<p>如今，既别无他用，有想到群内的小伙伴们之前一起在玩 MC ，便索性用来搭建一个私服。<br>记录下过程，以便看官参考，或自己日后复现。</p>
<a id="more"></a>

<h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>本实验设备为 CentOS 7，其他 Linux 服务器可举一反三。</p>
<h2 id="Set-up"><a href="#Set-up" class="headerlink" title="Set up"></a>Set up</h2><p>想让 Minecraft 在 Linux 上运行，自然需要其 Java 版本。</p>
<h3 id="Install-Java"><a href="#Install-Java" class="headerlink" title="Install Java"></a>Install Java</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看可获得的 java 版本</span></span><br><span class="line">yum -y list java*</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 java</span></span><br><span class="line">yum -y install java-latest-openjdk</span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line"><span class="comment"># apt install default-jdk</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-Minecraft-Server"><a href="#Install-Minecraft-Server" class="headerlink" title="Install Minecraft Server"></a>Install Minecraft Server</h3><p>安装 Minecraft 服务器版本</p>
<p><a href="https://www.minecraft.net/zh-hans/download/server/" target="_blank" rel="noopener">下载 MINECRAFT ：JAVA 版的服务器</a></p>
<h4 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h4><p>几经辗转，发现官服是安装不了插件的。</p>
<p><a href="http://mineplugin.org" target="_blank" rel="noopener">http://mineplugin.org</a></p>
<p>如有兴趣，可参考百科安装不同服务器版本。</p>
<p>你可以在 <a href="https://www.minecraft.net/zh-hans/download/server/" target="_blank" rel="noopener">这里</a> 下载官方 JAVA 版的最新版本服务器。（替换下方下载链接）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir /opt/minecraft</span><br><span class="line"><span class="built_in">cd</span> /opt/minecraft</span><br><span class="line"><span class="comment"># 若没有 wget，需先安装</span></span><br><span class="line"><span class="comment"># yum -y wget</span></span><br><span class="line">wget https://launcher.mojang.com/v1/objects/bb2b6b1aefcd70dfd1892149ac3a215f6c636b07/server.jar</span><br><span class="line"><span class="comment"># 1.14.4</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">java -Xms512M -Xmx1024M -jar server.jar nogui</span><br><span class="line"><span class="comment"># 初次允许结束会返回一个错误，将会生成一个新的 eula.txt 文件</span></span><br></pre></td></tr></table></figure>

<p>配置可自行修改</p>
<ul>
<li><code>-Xms512M</code> 服务端能使用的最小内存</li>
<li><code>-Xmx1024M</code> 最大内存</li>
</ul>
<p>需要同意文件里的协议，通过下面这条命令将 <code>eula=true</code> 添加到文件中：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i.orig <span class="string">'s/eula=false/eula=true/g'</span> eula.txt</span><br><span class="line"><span class="comment"># 再次运行</span></span><br><span class="line">java -Xms512M -Xmx1024M -jar server.jar nogui</span><br></pre></td></tr></table></figure>

<h3 id="编写自动化脚本"><a href="#编写自动化脚本" class="headerlink" title="编写自动化脚本"></a>编写自动化脚本</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nano /opt/minecraft/start-mc.sh</span><br></pre></td></tr></table></figure>

<p>键入以下内容</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> /opt/minecraft/ &amp;&amp; java -Xms2048M -Xmx3472M -jar server.jar nogui</span><br><span class="line"><span class="comment"># 保存并退出</span></span><br><span class="line"><span class="comment"># 按 ctrl+x y 回车</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给予执行权限</span></span><br><span class="line">chmod +x /opt/minecraft/start-mc.sh</span><br></pre></td></tr></table></figure>

<p>退出 SSH 时，服务端也会关闭。</p>
<p>需要开启新的 screen 会话。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 若没有 screen，需先安装</span></span><br><span class="line"><span class="comment"># yum -y screen</span></span><br><span class="line">screen -S mc</span><br><span class="line">/opt/minecraft/start-mc.sh</span><br></pre></td></tr></table></figure>

<h3 id="加入自启动"><a href="#加入自启动" class="headerlink" title="加入自启动"></a>加入自启动</h3><p>使 Linux 重启时，自动运行该脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nano /etc/rc.local</span><br></pre></td></tr></table></figure>

<p>进入文件，加入以下内容</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">screen -dm -S mc /opt/minecraft/start-mc.sh</span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>

<h3 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h3><p>若想要备份服务器世界的地图</p>
<h4 id="Backup-sh"><a href="#Backup-sh" class="headerlink" title="Backup.sh"></a>Backup.sh</h4><p>编写备份脚本</p>
<blockquote>
<p>打算使用 git 来进行备份，别打我</p>
</blockquote>
<ul>
<li><a href="https://dev.tencent.com" target="_blank" rel="noopener">腾讯云开发者平台</a></li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /opt/minecraft/mc-server-backup.sh</span></span><br><span class="line"><span class="built_in">cd</span> /opt/minecraft/ &amp;&amp; git add -A &amp;&amp; git commit -m <span class="string">"mc-server-world-backup"</span> &amp;&amp; git push</span><br><span class="line"><span class="comment"># 注意 linux 和 windows 换行符</span></span><br><span class="line"><span class="comment"># cd /opt/minecraft</span></span><br><span class="line"><span class="comment"># git add -A</span></span><br><span class="line"><span class="comment"># git commit -m "mc-server-world-backup"</span></span><br><span class="line"><span class="comment"># git push -u origin master</span></span><br></pre></td></tr></table></figure>

<p>设置定时备份任务</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vi /etc/crontab</span><br></pre></td></tr></table></figure>

<p>键入以下内容</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">30 2 * * * root /opt/minecraft/mc-server-backup.sh</span><br><span class="line"><span class="comment"># 每天 2:30 执行备份任务</span></span><br></pre></td></tr></table></figure>

<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="登入失败：无效会话"><a href="#登入失败：无效会话" class="headerlink" title="登入失败：无效会话"></a>登入失败：无效会话</h3><p>服务器默认会对版权进行校验，如果不是使用正版 MC 登陆，会出现 <code>登入失败：无效会话</code>。<br>需要将服务器中 <code>server.properties</code> 文件中， <code>online-mode</code> 对应值修改为 <code>false</code>。</p>
<h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p>发现小伙伴的一篇文章 <a href="https://2890.ltd/blog/white-whoring-can-be-used-to-run-minecraft-1.html" target="_blank" rel="noopener">白嫖超算来开服 — 天河二号超级计算机白嫖教程</a></p>
<p>得知<a href="https://easyhpc.net/" target="_blank" rel="noopener">超算习堂</a>这个网站，进入任意课程会分配一台 48 G 内存的虚拟机。<br>可以连外网，于是也尝试部署了一下 MC 服务器，并用 <a href="https://www.natfrp.com/" target="_blank" rel="noopener">Sakura Ftp</a> 做了内网穿透，竟然成功了。<br>初始进入的速度很快。</p>
<p>用了 screen，然后关闭浏览器页面，竟然没有立刻终端。结果几分钟还是被收回了，白高兴一场。（<del>白嫖失败</del>）<br>似乎找台服务器一直挂着页面可以一直持续下去。因为不小心关掉就没办法备份数据等考虑，还是继续用我的小水管服务器吧。</p>
<p>不过的确算是找到了一个可以实验的地方。</p>
<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><p>记录 Minecraft 中常用的指令</p>
<h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><p>服务端执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 赋予管理权限</span></span><br><span class="line">/op 用户名</span><br></pre></td></tr></table></figure>

<h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 死亡不掉落</span></span><br><span class="line">/gamerule keepInventory <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="gamemode"><a href="#gamemode" class="headerlink" title="gamemode"></a>gamemode</h3><p>更改游戏模式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example</span></span><br><span class="line"><span class="comment"># 改变红色组别所有玩家的游戏模式为创造模式</span></span><br><span class="line">/gamemode creative @a[team=Red]</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Params</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>@p</td>
<td>距离最近的玩家</td>
</tr>
<tr>
<td>@r</td>
<td>随机玩家</td>
</tr>
<tr>
<td>@a</td>
<td>所有玩家</td>
</tr>
<tr>
<td>@e</td>
<td>所有实体</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Params</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>m</td>
<td>游戏模式</td>
</tr>
<tr>
<td>team</td>
<td>队伍</td>
</tr>
<tr>
<td>r</td>
<td>小于半径区域</td>
</tr>
<tr>
<td>rm</td>
<td>大于半径区域</td>
</tr>
<tr>
<td>type</td>
<td>实体种类</td>
</tr>
</tbody></table>
<ul>
<li><code>[r=R]</code> 只选择以指令的执行处为中心，半径小于 R 的区块里的目标。</li>
<li><code>[rm=RM]</code> 只选择以指令的执行处为中心，半径大于 RM 的区块里的目标。</li>
</ul>
<h3 id="scoreboard"><a href="#scoreboard" class="headerlink" title="scoreboard"></a>scoreboard</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/scoreboard teams add &lt;队伍名称&gt; [显示名称]</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/scoreboard teams remove &lt;队伍名称&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加入队伍</span></span><br><span class="line">/scoreboard teams join &lt;队伍名称&gt; [玩家]</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line">/scoreboard teams option &lt;队伍名称&gt; &lt;选项&gt; &lt;值&gt;</span><br></pre></td></tr></table></figure>

<p>Example:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/scoreboard teams option &lt;队伍名称&gt; color red</span><br><span class="line">/scoreboard teams option &lt;队伍名称&gt; friendlyfire <span class="literal">false</span></span><br><span class="line">/scoreboard teams option &lt;队伍名称&gt; nametagVisbility hideForOtherTeams</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Params</th>
<th>Description</th>
<th>Options</th>
<th>Default</th>
</tr>
</thead>
<tbody><tr>
<td>friendlyfire</td>
<td>队友伤害</td>
<td>true/false</td>
<td>true</td>
</tr>
<tr>
<td>nametagVisbility</td>
<td>名称标签可见形式</td>
<td>never/hideForOtherTeams/hideForOwnTeam/always</td>
<td>always</td>
</tr>
<tr>
<td>deathMessageVisibility</td>
<td>死亡时如何显示死亡讯息</td>
<td>never/hideForOtherTeams/hideForOwnTeam/always</td>
<td>always</td>
</tr>
</tbody></table>
<p>可选颜色</p>
<ul>
<li>black(黑色)</li>
<li>dark_blue(深蓝色)</li>
<li>dark_green(深绿色)</li>
<li>dark_aqua (深水蓝色)</li>
<li>dark_red(深红色)</li>
<li>dark_purple(深紫色)</li>
<li>gold(金色)</li>
<li>gray(灰色)</li>
<li>dark_gray(深灰色)</li>
<li>blue(蓝色)</li>
<li>green(绿色)</li>
<li>aqua(水蓝色)</li>
<li>red(红色)</li>
<li>light_purple(亮紫色)</li>
<li>yellow(黄色)</li>
<li>white(白色)</li>
<li>reset(恢复到预设的颜色)</li>
</ul>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>一些有趣的插件</p>
<h3 id="Dragon-Mounts-2-龙骑士"><a href="#Dragon-Mounts-2-龙骑士" class="headerlink" title="[Dragon Mounts 2 | 龙骑士]"></a>[Dragon Mounts 2 | 龙骑士]</h3><p>孵化末影龙</p>
<p><a href="https://minecraft.curseforge.com/projects/dm2/files" target="_blank" rel="noopener">官网下载地址</a></p>
<p>依赖 <a href="https://minecraft.curseforge.com/projects/llibrary" target="_blank" rel="noopener">llibrary</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://linux.cn/article-9480-1.html" target="_blank" rel="noopener">如何搭建“我的世界”服务器</a></li>
<li><a href="https://baike.baidu.com/item/指令/18765029" target="_blank" rel="noopener">指令(游戏[Minecraft]中的运算机制)</a></li>
</ul>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>因为服务器全天在线，所以时间也会相应流逝，颇有些加速世界的无限制中立空间的感觉。</p>
<h2 id="More"><a href="#More" class="headerlink" title="More"></a>More</h2><ul>
<li><a href="https://www.yunyoujun.cn/diary/minecraft-survival-diary/" target="_blank" rel="noopener">Minecraft 生存日记</a></li>
</ul>
<hr>
<p>Q.E.D.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>react-learn-note</title>
    <url>/2019/07/08/note/react-learn-note/</url>
    <content><![CDATA[<a id="more"></a>

<h2 id="Learn"><a href="#Learn" class="headerlink" title="Learn"></a>Learn</h2><ul>
<li><input disabled="" type="checkbox"> <a href="https://zh-hans.reactjs.org/tutorial/tutorial.html" target="_blank" rel="noopener">入门教程: 认识 React</a></li>
</ul>
<h3 id="Next-js"><a href="#Next-js" class="headerlink" title="Next.js"></a><a href="https://nextjs.org/" target="_blank" rel="noopener">Next.js</a></h3><p>React Framework 的各种解决方案</p>
<p>Vue 对应的则是 <a href="https://nuxtjs.org/" target="_blank" rel="noopener">Nuxt.js</a></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://nextjs.org/learn/basics/getting-started" target="_blank" rel="noopener">Learn - Getting Started | Next.js</a>（英文，UI 简洁，有进度记录，看得很舒服。）</li>
</ul>
<h2 id="Dev-Env"><a href="#Dev-Env" class="headerlink" title="Dev Env"></a>Dev Env</h2><h3 id="VSCode-Plugin"><a href="#VSCode-Plugin" class="headerlink" title="VSCode Plugin"></a>VSCode Plugin</h3><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets" target="_blank" rel="noopener">ES7 React/Redux/GraphQL/React-Native snippets | VSCode 插件</a></li>
</ul>
<h3 id="Chrome-Plugin"><a href="#Chrome-Plugin" class="headerlink" title="Chrome Plugin"></a>Chrome Plugin</h3><ul>
<li><a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=zh-CN" target="_blank" rel="noopener">React Developer Tools</a></li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>TypeScript 踩坑记</title>
    <url>/2018/01/29/note/typescript-trap-note/</url>
    <content><![CDATA[<p>记录 TypeScript 使用过程中遇到的小问题和解决方案。</p>
<a id="more"></a>

<h2 id="Trap"><a href="#Trap" class="headerlink" title="Trap"></a>Trap</h2><h3 id="cannot-find-name-‘require’"><a href="#cannot-find-name-‘require’" class="headerlink" title="cannot find name ‘require’"></a>cannot find name ‘require’</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> i18n = <span class="built_in">require</span>(<span class="string">'LanguageData'</span>);</span><br></pre></td></tr></table></figure>

<p><code>2.x</code> 版本的 TypeScript 可以直接使用如下命令解决。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install @types/node --save-dev</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://stackoverflow.com/questions/31173738/typescript-getting-error-ts2304-cannot-find-name-require" target="_blank" rel="noopener">https://stackoverflow.com/questions/31173738/typescript-getting-error-ts2304-cannot-find-name-require</a></p>
</blockquote>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title>rollup 使用笔记</title>
    <url>/2019/02/07/note/rollup-use-note/</url>
    <content><![CDATA[<h1 id="rollup-js"><a href="#rollup-js" class="headerlink" title="rollup.js"></a><a href="https://rollupjs.org" target="_blank" rel="noopener">rollup.js</a></h1><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>rollup.js 使用笔记</p>
<a id="more"></a>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install</span></span><br><span class="line">npm install --global rollup</span><br></pre></td></tr></table></figure>

<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><blockquote>
<p>More Info <a href="https://rollupjs.org/guide/en#command-line-flags" target="_blank" rel="noopener">command-line-flags</a></p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rollup -c -w</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>-c</td>
<td>表示使用配置文件进行打包，若未指定使用的配置文件，则使用默认的配置文件 <code>rollup.config.js</code></td>
</tr>
<tr>
<td>-w</td>
<td>监听文件变化并打包</td>
</tr>
</tbody></table>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><ul>
<li><a href="https://github.com/rollup/rollup-starter-lib" target="_blank" rel="noopener">rollup-starter-lib</a></li>
<li><a href="https://github.com/rollup/rollup-starter-app" target="_blank" rel="noopener">rollup-starter-app</a></li>
</ul>
<h2 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h2><h3 id="Minify"><a href="#Minify" class="headerlink" title="Minify"></a>Minify</h3><ul>
<li><a href="https://www.npmjs.com/package/rollup-plugin-uglify" target="_blank" rel="noopener">rollup-plugin-uglify</a> for ES5</li>
<li><a href="https://github.com/TrySound/rollup-plugin-terser" target="_blank" rel="noopener">rollup-plugin-terser</a> for ES6</li>
</ul>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>rollup</tag>
      </tags>
  </entry>
  <entry>
    <title>导出《你的日记》</title>
    <url>/2019/01/31/note/use-fiddle-export-your-diary/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>待补充…</p>
<p>…</p>
<a id="more"></a>

<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先，下载免费的抓包工具 <a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener">fiddler</a> 与请求调试工具 <a href="https://www.getpostman.com/" target="_blank" rel="noopener">Postman</a>。</p>
<h3 id="Fiddle-配置"><a href="#Fiddle-配置" class="headerlink" title="Fiddle 配置"></a>Fiddle 配置</h3><p><code>Tools &gt; Options...</code></p>
<p>跳出弹框</p>
<p><code>HTTPS</code> 面板</p>
<p>可见默认端口为 <code>8888</code> (可自定义)</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Decrypt HTTPS trafic</li>
</ul>
<p>一路同意，出现新选项</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Ignore server certificate errors (unsafe)</li>
</ul>
<p>点击 OK, 重启。</p>
<h3 id="PC-配置"><a href="#PC-配置" class="headerlink" title="PC 配置"></a>PC 配置</h3><p>进入 <code>Windows</code> 命令行， 输入命令，查看本机 IP 地址 (IPv4 地址)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">无线局域网适配器 WLAN:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::9cb2:89dc:46d1:52c7%19</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.31.87</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 192.168.31.1</span><br></pre></td></tr></table></figure>

<h3 id="手机配置"><a href="#手机配置" class="headerlink" title="手机配置"></a>手机配置</h3><p>进入已连接的局域网 <code>WIFI</code> 设置手动代理</p>
<p>主机名为方才查看到的 <code>IPv4</code> 地址 <code>192.168.31.87</code> (因人而异) ，端口为方才默认的 <code>8888</code></p>
<p><img src="https://cos.yunyoujun.cn/blog/posts/use-fiddle-export-your-diary-1.png" alt="config-phone" loading="lazy"></p>
<p>可手机直接访问 IPv4:端口号(例如：<code>192.168.31.87:8888</code>) ，如有返回页面则说明设置成功。</p>
<h3 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h3><p>打开应用，操作刷新。</p>
<p>观察排除点一些系统的请求，fiddle 界面中含有一条这样的链接。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">CONNECT http://ohshenghuo.com:443</span><br><span class="line">200 Connection Established ()</span><br></pre></td></tr></table></figure>

<p>访问地址后，我发现使用 <code>你的日记</code> 的账号密码便可直接登录。</p>
<p>注销回到登录界面，<code>F12</code> 进入谷歌浏览器控制面板进行调试。</p>
<p><code>Sources</code> 面板中有网站的静态资源，其中 js 可以直接看出使用了 JQuery ，没有进行混淆压缩，可以直接分析代码。</p>
<p>其中与登录表单相关的部分代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.post(<span class="string">"/api/login/"</span>, form.serialize(), <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e &amp;&amp; e.token) &#123;</span><br><span class="line">    OhUtil.login(e.token);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $(<span class="string">"#login-form .msg_error"</span>).text(<span class="string">"邮箱或密码输入错误"</span>).show();</span><br><span class="line">    $(<span class="string">"#login-form .submit"</span>).removeClass(<span class="string">"inactive"</span>).attr(<span class="string">"value"</span>, <span class="string">"登录"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>由此可见登录 api 为 <code>api/login</code></p>
<p>表单内容进行 <a href="https://api.jquery.com/serialize/#serialize" target="_blank" rel="noopener"><code>serialize</code></a> (jQuery 方法，序列化)</p>
<table>
<thead>
<tr>
<th>KEY</th>
<th>VALUE</th>
</tr>
</thead>
<tbody><tr>
<td>csrfmiddlewaretoken</td>
<td>-</td>
</tr>
<tr>
<td>email</td>
<td>-</td>
</tr>
<tr>
<td>password</td>
<td>-</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">csrfmiddlewaretoken&#x3D;ZcJkWtMdfyjBNKxp3ms0i8REkTJcSKw4&amp;email&#x3D;xxx&amp;password&#x3D;xxx</span><br></pre></td></tr></table></figure>

<p>表单还含有 csrfmiddlewaretoken （可以在 html 页面中的登录表单看到,如下），用来防止跨站请求伪造。（也就是防止我们使用 Postman，但是我们可以手动加入表单）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">  <span class="attr">type</span>=<span class="string">"hidden"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">name</span>=<span class="string">"csrfmiddlewaretoken"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">value</span>=<span class="string">"ZcJkWtMdfyjBNKxp3ms0i8REkTJcSKw4"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>Network</code> 面板可查看到请求头内容和表单数据等。（csrfmiddlewaretoken 也可在此处的 Form data 中看到）</p>
<p>接下来使用 <a href="https://www.getpostman.com/" target="_blank" rel="noopener">Postman</a> 进行 API 调试。</p>
<p>便可成功获取到 token 等相关信息。</p>
<p>可继续尝试使用拉取日记等信息，不再赘述。</p>
<h3 id="《你的日记》-API-整理"><a href="#《你的日记》-API-整理" class="headerlink" title="《你的日记》 API 整理"></a>《你的日记》 API 整理</h3><p>API Address: <a href="https://ohshenghuo.com/api/" target="_blank" rel="noopener">https://ohshenghuo.com/api/</a></p>
<p><a href="https://documenter.getpostman.com/view/3326320/Rztmr8pE" target="_blank" rel="noopener">你的日记 API DOC - Postman</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GET</span><br></pre></td></tr></table></figure>

<h4 id="Get-Diary"><a href="#Get-Diary" class="headerlink" title="Get Diary"></a>Get Diary</h4><h5 id="Get-Diary-By-Id"><a href="#Get-Diary-By-Id" class="headerlink" title="Get Diary By Id"></a>Get Diary By Id</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET diary&#x2F;:diaryId</span><br></pre></td></tr></table></figure>

<p>Example</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">diary&#x2F;8808906&#x2F;</span><br></pre></td></tr></table></figure>

<p>Response</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"3bf998217a5b712eb4d5e3f7a9baf87f"</span>,</span><br><span class="line">  <span class="attr">"diary"</span>: &#123;</span><br><span class="line">    <span class="attr">"deleteddate"</span>: <span class="string">"None"</span>,</span><br><span class="line">    <span class="attr">"status"</span>: <span class="string">"0"</span>,</span><br><span class="line">    <span class="attr">"mood"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">" 少女生活小百科"</span>,</span><br><span class="line">    <span class="attr">"space"</span>: <span class="string">"boy"</span>,</span><br><span class="line">    <span class="attr">"ts"</span>: <span class="string">"2018-12-22 10:14:52+00:00"</span>,</span><br><span class="line">    <span class="attr">"content"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">    <span class="attr">"date_word"</span>: <span class="string">"40天前"</span>,</span><br><span class="line">    <span class="attr">"weather"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"user"</span>: <span class="string">"177636"</span>,</span><br><span class="line">    <span class="attr">"createddate"</span>: <span class="string">"2018-12-22"</span>,</span><br><span class="line">    <span class="attr">"createdtime"</span>: <span class="string">"2018-12-22 10:14:52+00:00"</span>,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="string">"8808906"</span>,</span><br><span class="line">    <span class="attr">"weekday"</span>: <span class="string">"星期六"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"error"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Get-Diary-By-Month"><a href="#Get-Diary-By-Month" class="headerlink" title="Get Diary By Month"></a>Get Diary By Month</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET diary&#x2F;simple_by_month&#x2F;:year&#x2F;:month&#x2F;</span><br></pre></td></tr></table></figure>

<p>Example</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">diary&#x2F;simple_by_month&#x2F;2019&#x2F;1&#x2F;</span><br></pre></td></tr></table></figure>

<p>Response</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"845d9a3c64d93623e05e2ab7735c2804"</span>,</span><br><span class="line">  <span class="attr">"diaries"</span>: &#123;</span><br><span class="line">    <span class="attr">"2019-01-29"</span>: <span class="number">9329359</span>,</span><br><span class="line">    <span class="attr">"2019-01-02"</span>: <span class="number">8974069</span>,</span><br><span class="line">    <span class="attr">"2019-01-01"</span>: <span class="number">8966164</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"error"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Attribute</th>
<th>Description</th>
<th>Type</th>
<th>Default</th>
</tr>
</thead>
<tbody><tr>
<td>diaries</td>
<td>包含当月各天日记的 ID</td>
<td>Object</td>
<td>-</td>
</tr>
<tr>
<td>yyyy-MM-dd</td>
<td>当月日记 ID</td>
<td>Number</td>
<td>-</td>
</tr>
</tbody></table>
<p>…</p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 学习笔记</title>
    <url>/2018/02/20/note/vue-learn-note/</url>
    <content><![CDATA[<p>使用 <a href="https://cn.vuejs.org" target="_blank" rel="noopener">Vue.js</a> 过程中的一些笔记。</p>
<a id="more"></a>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p>记录一些细节问题以及不易搜索到的解决方法。</p>
<h3 id="Parcel-js-Vue"><a href="#Parcel-js-Vue" class="headerlink" title="Parcel.js + Vue"></a><a href="https://yunyoujun.cn/note/vue-parcel-demo/" target="_blank" rel="noopener">Parcel.js + Vue</a></h3><h3 id="非父子组件的通信"><a href="#非父子组件的通信" class="headerlink" title="非父子组件的通信"></a><a href="https://cn.vuejs.org/v2/guide/components.html#%E9%9D%9E%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E9%80%9A%E4%BF%A1" target="_blank" rel="noopener">非父子组件的通信</a></h3><ul>
<li><a href="http://blog.csdn.net/sinat_17775997/article/details/59025563" target="_blank" rel="noopener">Vue2.0 组件之间通信 - CSDN</a></li>
</ul>
<h3 id="Build-Lib-Without-Dependencies"><a href="#Build-Lib-Without-Dependencies" class="headerlink" title="Build Lib Without Dependencies"></a>Build Lib Without Dependencies</h3><p>使用 <code>vue-cli@3.x</code> 构建自己的库时，因为又引入了第三方组件，打包后将代码合在了一起显得很大。<br>所以应当只打包自己的组件，而不打包内部引入组件的代码。（依赖自然会安装）</p>
<p>Webpack 文档中存在这样的选项，也就是注明 <code>externals</code>。<br><a href="https://webpack.docschina.org/configuration/externals/#externals" target="_blank" rel="noopener">外部扩展 - Webpack</a></p>
<p>可以在 <code>vue.config.js</code> 中定义 Webpack 配置。<br><a href="https://cli.vuejs.org/zh/config/#configurewebpack" target="_blank" rel="noopener">configureWebpack</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  configureWebpack: &#123;</span><br><span class="line">    <span class="comment">// externals: ['v-tooltip']</span></span><br><span class="line">    <span class="comment">// 但是连字符可能识别有问题, 不能这么写</span></span><br><span class="line">    externas: &#123;</span><br><span class="line">      VTooltip: <span class="string">'v-tooltip'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="SPA-预渲染"><a href="#SPA-预渲染" class="headerlink" title="SPA 预渲染"></a>SPA 预渲染</h3><p>使用<a href="https://router.vuejs.org/zh/guide/essentials/history-mode.html#html5-history-%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">HTML5 History 模式</a>可以使 URL 显得更美观。<br>但与此同时，由于是单页应用，没有后台配置支持的话，直接访问相关路由或刷新时会导致页面访问 404。<br>这时，又不想配置后台，又不想放弃 History 模式，则还有另外一条出路。</p>
<p>也就是进行预渲染。</p>
<p>可用的插件：</p>
<ul>
<li><a href="https://github.com/chrisvfritz/prerender-spa-plugin" target="_blank" rel="noopener">prerender-spa-plugin</a></li>
</ul>
<p>Install</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add -D prerender-spa-plugin</span><br></pre></td></tr></table></figure>

<p>Config</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> PrerenderSPAPlugin = <span class="built_in">require</span>(<span class="string">'prerender-spa-plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  configureWebpack: &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">      <span class="keyword">new</span> PrerenderSPAPlugin(&#123;</span><br><span class="line">        <span class="comment">// Required - The path to the webpack-outputted app to prerender.</span></span><br><span class="line">        staticDir: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        <span class="comment">// Required - Routes to render.</span></span><br><span class="line">        routes: [<span class="string">'/'</span>, <span class="string">'/go'</span>, <span class="string">'/unit'</span>]</span><br><span class="line">      &#125;)</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Parcel.js + Vue 搭建笔记</title>
    <url>/2018/02/20/note/vue-parcel-demo/</url>
    <content><![CDATA[<p>去年（已经是三年前了！）年末便听得新一代打包工具 Parcel.js 的风风火火，今日（两年前的某一天）也终于得以静下心来试一试。</p>
<a id="more"></a>

<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/meme/five-year.gif" alt="five-year" loading="lazy"></p>
<h2 id="Parcel"><a href="#Parcel" class="headerlink" title="Parcel"></a><a href="https://parceljs.org" target="_blank" rel="noopener">Parcel</a></h2><p>如官网所述，极速零配置 Web 应用打包工具。</p>
<ul>
<li>GitHub : <a href="https://github.com/parcel-bundler/parcel" target="_blank" rel="noopener">https://github.com/parcel-bundler/parcel</a></li>
</ul>
<h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a><a href="https://cn.vuejs.org" target="_blank" rel="noopener">Vue</a></h2><p>鼎鼎大名,自不多言。</p>
<hr>
<p>Vue 官方提供的模板 <a href="https://github.com/vuejs-templates/webpack" target="_blank" rel="noopener">vuejs-template/webpack</a> 是基于 Webpack 打包的。所以尝试着用 parcel.js 来替代 webpack 与 vue 结合在一起。</p>
<h3 id="自己的小-Demo"><a href="#自己的小-Demo" class="headerlink" title="自己的小 Demo"></a>自己的小 Demo</h3><ul>
<li><a href="<https://github.com/YunYouJun/vue-parcel-demo">vue-parcel-demo</a></li>
<li><a href="https://github.com/YunYouJun/give-me-money" target="_blank" rel="noopener">我很可爱，请给我钱！</a>: Vue + Parcel 实现的小应用</li>
</ul>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>基本可以参照 <a href="https://github.com/vuejs-templates/webpack" target="_blank" rel="noopener">vuejs-template/webpack</a> 进行修改。</p>
<p><code>vue init webpack vue-parcel-demo</code> 使用 vue 脚手架生成 webpack 模板</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">? Project name vue-parcel-demo</span><br><span class="line">? Project description A Vue.js project</span><br><span class="line">? Author YunYouJun &lt;me@yunyoujun.cn&gt;</span><br><span class="line">? Vue build runtime | Runtime-only</span><br><span class="line">? Install vue-router? Yes</span><br><span class="line">? Use ESLint to lint your code? No</span><br><span class="line">? Set up unit tests No</span><br><span class="line">? Setup e2e tests with Nightwatch? No</span><br><span class="line">? Should we run `npm install` <span class="keyword">for</span> you after the project has been created? (recommended) yarn</span><br></pre></td></tr></table></figure>

<ul>
<li><p>删除 <code>build</code>, <code>config</code>, <code>static</code>, <code>node_modules</code>（之后重装） 文件夹与 <code>.editorconfig</code>, <code>.postcssrc.js</code>, <code>package.json</code>（之后重新生成） 文件。</p>
</li>
<li><p><code>README.md</code>（可以重写）</p>
</li>
<li><p>进入文件夹下，执行 <code>yarn init</code> （配置默认即可）</p>
</li>
</ul>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add parcel-bundler vue vue-router --dev</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/BoltDoggy/parcel-plugin-vue" target="_blank" rel="noopener">parcel-plugin-vue</a></p>
<blockquote>
<p>parcel-bundler/parcel @1.7.0 support Vue Now. This plugin will be not recommended.</p>
</blockquote>
<p>Parcel 1.7.0 版本似乎已经支持 Vue 了。所以不需要再安装 <code>parcel-plugin-vue</code> 插件了。（<del>默默删去了一段</del>）</p>
<p>(果然配置越来越少 2333，再之后这篇文章说不定都没有存在的必要了。)</p>
<hr>
<p>虽说零配置，实际上是 Parcel 帮我们把要配置的东西做了。</p>
<p>在打包 Vue 的时候，发现它调用 yarn 安装了几个插件。当然我们也可以自己先安装上。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add -D vue-template-compiler @vue/component-compiler-utils vue-hot-reload-api</span><br><span class="line"><span class="comment"># -D 与 --dev 一个意思，将依赖安装在 devDependencies</span></span><br></pre></td></tr></table></figure>

<h3 id="Babel-配置"><a href="#Babel-配置" class="headerlink" title="Babel 配置"></a>Babel 配置</h3><p><a href="https://babeljs.io/" target="_blank" rel="noopener">Babel · The compiler for next generation JavaScript</a></p>
<p>Parcel 已经<a href="https://parceljs.org/javascript.html#%E9%BB%98%E8%AE%A4-babel-%E8%BD%AC%E6%8D%A2" target="_blank" rel="noopener">默认支持 Babel 转换</a></p>
<h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cmn-Hans"</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.zhihu.com/question/20797118" target="_blank" rel="noopener">网页头部的声明应该是用 lang=”zh” 还是 lang=”zh-cn”？ - 知乎</a></p>
<p>emmm, 纠结地搜到了这个答案。简体中文页面原来是用 <code>lang=&quot;zh-cmn-Hans&quot;</code></p>
<h4 id="引入-main-js"><a href="#引入-main-js" class="headerlink" title="引入 main.js"></a>引入 <code>main.js</code></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./src/main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="package-json-添加-scripts-字段"><a href="#package-json-添加-scripts-字段" class="headerlink" title="package.json 添加 scripts 字段"></a><code>package.json</code> 添加 <code>scripts</code> 字段</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"vue-parcel-demo"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"repository"</span>: <span class="string">"https://github.com/YunYouJun/vue-parcel-demo"</span>,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"YunYouJun &lt;me@yunyoujun.cn&gt;"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"npm run dev"</span>,</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"parcel index.html -p 2333 --open"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"parcel build index.html --public-url ./ --no-cache"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@vue/component-compiler-utils"</span>: <span class="string">"^3.1.1"</span>,</span><br><span class="line">    <span class="attr">"autoprefixer"</span>: <span class="string">"^9.7.4"</span>,</span><br><span class="line">    <span class="attr">"parcel-bundler"</span>: <span class="string">"^1.12.4"</span>,</span><br><span class="line">    <span class="attr">"postcss-modules"</span>: <span class="string">"^1.5.0"</span>,</span><br><span class="line">    <span class="attr">"vue"</span>: <span class="string">"^2.5.16"</span>,</span><br><span class="line">    <span class="attr">"vue-hot-reload-api"</span>: <span class="string">"^2.3.0"</span>,</span><br><span class="line">    <span class="attr">"vue-router"</span>: <span class="string">"^3.0.1"</span>,</span><br><span class="line">    <span class="attr">"vue-template-compiler"</span>: <span class="string">"^2.5.16"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>-p 2333</code> 设置端口号为 <code>2333</code></li>
<li><code>--open</code> 自动打开浏览器</li>
<li><code>--public-url ./</code> 设置要提供服务的公共 URL(<code>./</code> 也就是设置为当前 <code>dist</code> 目录下)</li>
<li><code>--no-cache</code> 禁用文件系统缓存</li>
</ul>
<h3 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h3><p>使用 git 管理仓库时，切记添加自定义忽略文件</p>
<ul>
<li><code>.cache</code> 是 <code>parcel</code> 构建时的缓存</li>
<li><code>dist</code> 是打包后的文件</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Custom</span></span><br><span class="line">.cache</span><br><span class="line">dist</span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line">node_modules/</span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure>

<p>如果使用 VS Code 编辑器，也可以对工作区进行配置，不对 <code>.cache</code> <code>dist</code> 等文件夹进行搜索。</p>
<p><a href="https://yunyoujun.cn/note/vscode-config-note/#%E6%90%9C%E7%B4%A2%E6%8E%92%E9%99%A4" target="_blank" rel="noopener">搜索排除</a></p>
<h3 id="使用-SCSS"><a href="#使用-SCSS" class="headerlink" title="使用 SCSS"></a><a href="https://zh.parceljs.org/scss.html" target="_blank" rel="noopener">使用 SCSS</a></h3><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><ul>
<li><code>npm run dev</code> 运行</li>
<li><code>npm run build</code> 构建</li>
</ul>
<p>输入 <code>npm run dev</code> 运行试试。</p>
<p>出现如下报错：</p>
<blockquote>
<p>Server running at <a href="http://localhost:1234" target="_blank" rel="noopener">http://localhost:1234</a><br>× C:\Users\YunYou\Documents\GitHub\vue-parcel-demo\src\router\index.js:3:23: Cannot resolve dependency ‘@/components/HelloWorld’</p>
</blockquote>
<p>原因是 <code>@</code> 是 webpack 默认配置中使用 alias (别名) 指代 src 文件夹的符号。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 位于 build/webpack.base.conf</span></span><br><span class="line"></span><br><span class="line">resolve: &#123;</span><br><span class="line">  <span class="comment">// 路径别名</span></span><br><span class="line">  alias: &#123;</span><br><span class="line">    '@': resolve('src'),</span><br><span class="line">    'vue$': 'vue/dist/vue.esm.js' // 这一个之后解释</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>进入 <code>src/router/index.js</code> , 将路径修改为相对路径</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line">---</span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'../components/HelloWorld'</span></span><br></pre></td></tr></table></figure>

<p>再次运行 <code>npm run dev</code>, 打开 <a href="http://localhost:1234" target="_blank" rel="noopener">http://localhost:1234</a> 即可看到 Vue 的主页了。</p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="运行时-编译器-vs-只包含运行时"><a href="#运行时-编译器-vs-只包含运行时" class="headerlink" title="运行时 + 编译器 vs. 只包含运行时"></a><a href="https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6" target="_blank" rel="noopener">运行时 + 编译器 vs. 只包含运行时</a></h3><p>在使用 vue 脚手架 <code>vue init webpack vue-parcel-demo</code> 生成 vue-webpack 模板过程中，有如下提示：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">? Vue build (Use arrow keys)</span><br><span class="line">&gt; Runtime + Compiler: recommended <span class="keyword">for</span> most users</span><br><span class="line">  Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specific HTML) are ONLY allowed <span class="keyword">in</span> .vue files - render <span class="built_in">functions</span> are required elsewhere</span><br></pre></td></tr></table></figure>

<p>如果选择 <code>Runtime + Compiler</code> ,此后会发生如下报错。</p>
<blockquote>
<p>[Vue warn]: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.(found in )</p>
</blockquote>
<p>因为 <a href="https://github.com/vuejs-templates/webpack" target="_blank" rel="noopener">vuejs-templates/webpack</a> 的 <code>main.js</code> 源码如下</p>
<p><a href="https://github.com/vuejs-templates/webpack/blob/develop/template/src/main.js" target="_blank" rel="noopener">vuejs-templates/webpack/template/src/main.js</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  &#123;&#123;#router&#125;&#125;</span><br><span class="line">  router,</span><br><span class="line">  &#123;&#123;/router&#125;&#125;</span><br><span class="line">  &#123;&#123;#if_eq build "runtime"&#125;&#125;</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">  &#123;&#123;/if_eq&#125;&#125;</span><br><span class="line">  &#123;&#123;#if_eq build "standalone"&#125;&#125;</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">  &#123;&#123;/if_eq&#125;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>如果选择 <code>Runtime + Compiler</code>, <code>main.js</code> 为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  components: &#123; App &#125;,</span><br><span class="line">  template: <span class="string">'&lt;App/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>如果选择 <code>Runtime-only</code>, <code>main.js</code> 则为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>Vue 模板中 webpack 的默认配置通过 alias 设置了 vue 的别名，引用了完整版的 vue 。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 位于 build/webpack.base.conf</span></span><br><span class="line"></span><br><span class="line">resolve: &#123;</span><br><span class="line">  <span class="comment">// 路径别名</span></span><br><span class="line">  alias: &#123;</span><br><span class="line">    '@': resolve('src'),</span><br><span class="line">    'vue$': 'vue/dist/vue.esm.js' // 即此处</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>最终打好的包里实际上是不需要编译器的，所以只用运行时版本即可。</p>
<p>Parcel 使用 <code>runtime-only</code>, 修改 <code>main.js</code> 中内容为 <code>Runtime-only</code> 形式 <code>render: h =&gt; h(App)</code> 即可。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>= =，意外的访问量很高。</p>
<p>时至今日，许多当初的配置已经不再需要，会逐步去除。</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Vue</tag>
        <tag>Parcel</tag>
      </tags>
  </entry>
  <entry>
    <title>YunYouJun/hexo-theme-yun</title>
    <url>/2020/03/17/project/hexo-theme-yun/</url>
    <content><![CDATA[<h2 id="Hexo-主题-Yun"><a href="#Hexo-主题-Yun" class="headerlink" title="Hexo 主题 Yun"></a>Hexo 主题 Yun</h2><!-- ![GitHub stars](https://img.shields.io/github/stars/YunYouJun/hexo-theme-yun?style=social) -->

<ul>
<li>GitHub: <a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">https://github.com/YunYouJun/hexo-theme-yun</a></li>
<li>Docs: <a href="https://yun.yunyoujun.cn" target="_blank" rel="noopener">https://yun.yunyoujun.cn</a></li>
<li>Example: <a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">https://www.yunyoujun.cn</a></li>
</ul>
<a id="more"></a>
]]></content>
      <categories>
        <category>云游的小项目</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>GitHub</tag>
        <tag>项目</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Travis-CI 持续集成部署</title>
    <url>/2018/05/24/note/use-travis-to-deploy/</url>
    <content><![CDATA[<h1 id="Travis-CI"><a href="#Travis-CI" class="headerlink" title="Travis-CI"></a>Travis-CI</h1><blockquote>
<p>Travis CI - Test and Deploy Your Code with Confidence</p>
</blockquote>
<p><a href="https://www.travis-ci.org/" target="_blank" rel="noopener">travis-ci.org</a></p>
<a id="more"></a>

<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>正如字面上的意思，Travis 可以用来测试和帮助自己部署网站。</p>
<p>一般自己闲来会写些并无卵用的小玩意儿，纯静态的页面话，便会部署在 <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 上。<br>而动态网站则部署在自己的服务器上，又或是如下有一些可以部署测试的动态服务。（当然那样的话，自定义域名之类的服务就要收费了。）</p>
<ul>
<li><a href="https://www.heroku.com/" target="_blank" rel="noopener">heroku</a></li>
<li><a href="https://zeit.co/now" target="_blank" rel="noopener">now.sh</a></li>
</ul>
<hr>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js:</span><br><span class="line">  - lts/*</span><br><span class="line">cache:</span><br><span class="line">  directories:</span><br><span class="line">    - <span class="string">"node_modules"</span></span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">  - master</span><br><span class="line">addons:</span><br><span class="line">  apt:</span><br><span class="line">    packages:</span><br><span class="line">    - sshpass</span><br><span class="line">install:</span><br><span class="line">  - yarn install</span><br><span class="line">script:</span><br><span class="line">  - npm run build</span><br><span class="line">after_success:</span><br><span class="line">  - <span class="built_in">export</span> SSHPASS=<span class="variable">$VPS_PWD</span></span><br><span class="line">  - sshpass -e ssh -o stricthostkeychecking=no root@139.199.22.90 <span class="string">"sh /data/wwwroot/coc.yunyoujun.cn/deploy-ci.sh <span class="variable">$TOKEN</span>"</span></span><br></pre></td></tr></table></figure>

<h2 id="加密-Token"><a href="#加密-Token" class="headerlink" title="加密 Token"></a>加密 Token</h2><p>使用 <a href="https://github.com/travis-ci/travis.rb#readme" target="_blank" rel="noopener">Travis CI</a> 的命令行工具加密 GitHub 的 Personal Access Token。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">travis encrypt -r YunYouJun/repo GH_TOKEN=XXX</span><br></pre></td></tr></table></figure>

<h2 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h2><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push --force <span class="string">"https://<span class="variable">$&#123;GH_TOKEN&#125;</span>@<span class="variable">$&#123;GH_REF&#125;</span>"</span> master:master</span><br></pre></td></tr></table></figure>

<h3 id="Coding-Pages"><a href="#Coding-Pages" class="headerlink" title="Coding Pages"></a>Coding Pages</h3><p>Coding 还需要加 用户名 前缀 <code>https://xxx:${CODING_TOKEN}@${CD_REF}</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push --force <span class="string">"https://yunyoujun:<span class="variable">$&#123;CODING_TOKEN&#125;</span>@<span class="variable">$&#123;CD_REF&#125;</span>"</span> master:master</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">GH_REF:</span> <span class="string">github.com/YunYouJun/yunyoujun.github.io.git</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">CD_REF:</span> <span class="string">git.dev.tencent.com/YunYouJun/yunyoujun.coding.me.git</span></span><br></pre></td></tr></table></figure>

<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code 配置笔记</title>
    <url>/2018/01/29/note/vscode-config-note/</url>
    <content><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>记录一些 <code>VS Code</code> 的一些常用配置。</p>
<a id="more"></a>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>文件 -&gt; 首选项 -&gt; 设置</p>
<ul>
<li><p>输入到右侧 <code>用户设置</code> 里覆盖默认设置即可</p>
</li>
<li><p>工作区独立配置 <code>setting.json</code></p>
</li>
</ul>
<p><code>Ctrl+Shift+P</code> 输入 <code>workspace setting</code>, 回车进入。<br>若此前不存在，则会在当前工作区的文件夹下自动建立 <code>.vscode/setting.json</code>,可对工作区进行独立配置。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="搜索排除"><a href="#搜索排除" class="headerlink" title="搜索排除"></a>搜索排除</h3><p>全局搜索时，不去搜索某些文件夹。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"search.exclude": &#123;</span><br><span class="line">  "**/node_modules": true,</span><br><span class="line">  "**/bower_components": true,</span><br><span class="line">  "**/dist": true,</span><br><span class="line">  "**/.cache": true</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="自动换行"><a href="#自动换行" class="headerlink" title="自动换行"></a>自动换行</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"editor.wordWrap": "on",  // 超出显示范围，自动换行（只是显示效果上，并没有真正换行）</span><br></pre></td></tr></table></figure>

<h3 id="TAB-转空格"><a href="#TAB-转空格" class="headerlink" title="TAB 转空格"></a>TAB 转空格</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"editor.tabSize": 2,  // tab 键替换为 2 空格</span><br></pre></td></tr></table></figure>

<h3 id="终端改为-Git-Bash"><a href="#终端改为-Git-Bash" class="headerlink" title="终端改为 Git Bash"></a>终端改为 Git Bash</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",</span><br></pre></td></tr></table></figure>

<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><table>
<thead>
<tr>
<th>快捷键</th>
<th>命令</th>
<th>位置</th>
</tr>
</thead>
<tbody><tr>
<td><code>Ctrl+Shift+N</code></td>
<td>新建窗口</td>
<td>文件 -&gt; 新建窗口</td>
</tr>
<tr>
<td><code>Ctrl+K Ctrl+S</code></td>
<td>键盘快捷方式</td>
<td>文件 -&gt; 首选项 -&gt; 键盘快捷方式</td>
</tr>
<tr>
<td><code>Ctrl+Shift+P</code></td>
<td>显示所有命令</td>
<td></td>
</tr>
<tr>
<td><code>Ctrl</code> + <code>`</code></td>
<td>切换集成终端</td>
<td></td>
</tr>
<tr>
<td><code>Shift</code>+<code>Cmd</code>+<code>E</code></td>
<td>激活资源管理器窗口</td>
<td></td>
</tr>
</tbody></table>
<h3 id="命令行打开"><a href="#命令行打开" class="headerlink" title="命令行打开"></a>命令行打开</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">code xxx.xxx</span><br></pre></td></tr></table></figure>

<h2 id="常用插件及推荐"><a href="#常用插件及推荐" class="headerlink" title="常用插件及推荐"></a>常用插件及推荐</h2><h3 id="Code-Time"><a href="#Code-Time" class="headerlink" title="Code Time"></a><a href="https://marketplace.visualstudio.com/items?itemName=softwaredotcom.swdc-vscode" target="_blank" rel="noopener">Code Time</a></h3><p>统计你的编码时间</p>
<p>在线查看：<a href="https://app.software.com/" target="_blank" rel="noopener">https://app.software.com/</a></p>
<h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme" target="_blank" rel="noopener">Material Theme</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme" target="_blank" rel="noopener">Material Icon Theme</a></li>
</ul>
<p>图标和配色很漂亮</p>
<h2 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h2><ul>
<li><a href="https://devblogs.microsoft.com/cppblog/building-your-c-application-with-visual-studio-code/" target="_blank" rel="noopener">Building your C++ application with Visual Studio Code</a></li>
<li><a href="https://yunyoujun.cn/note/python-growth-path/#编辑器" target="_blank" rel="noopener">Python 配置</a></li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>VS Code</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始的 WebGL</title>
    <url>/2019/09/30/note/webgl-from-zero/</url>
    <content><![CDATA[<h2 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h2><p>近来选修课在上李亚峰老师的《高级计算机图形学》，感觉很有意思。<br>相比技术，老师更多穿插着介绍一些思路与想法。只可惜老师还是讲师，并不带研究生。<br>虽然自称本科期间上过计算机图形学，但发现早已忘了大半，实践基础很是薄弱。<br>当初想着 WebGL 才是未来趋势，图形学的实验除应付了 OpenGL 部分，更多用 WebGL 重新实现了一遍。<br>但最后却跑去整了前端和 Cocos，再回过头来却觉几乎所剩无几。</p>
<p>现今 OpenGL 早已停止更新，继任者 <a href="https://baike.baidu.com/item/Vulkan" target="_blank" rel="noopener">Vulkan</a> 也被普遍看好。<br>加之苹果在 WWDC 上径直宣布 macOS 平台将抛弃 OpenGL，在 Mac 平台上学习开发意义不大。<br>最终还是决定回顾一遍计算机图形学的基础知识，粗略看一看 OpenGL 的内容，随后实践着重放在 WebGL 上（跨平台！）。</p>
<a id="more"></a>

<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><h3 id="Related"><a href="#Related" class="headerlink" title="Related"></a>Related</h3><ul>
<li><a href="https://yunyoujun.cn/note/opengl-with-macos" target="_blank" rel="noopener">在 macOS 下配置 OpenGL</a></li>
</ul>
<h3 id="参考书目"><a href="#参考书目" class="headerlink" title="参考书目"></a>参考书目</h3><p>本着选新不选旧的原则</p>
<ul>
<li><a href="https://book.douban.com/subject/10543022/" target="_blank" rel="noopener">计算机图形学（第四版）</a></li>
<li><a href="https://book.douban.com/subject/26916420/" target="_blank" rel="noopener">交互式计算机图形学 基于 WebGL 的自顶向下方法(第七版)</a></li>
<li><a href="https://book.douban.com/subject/25909351/" target="_blank" rel="noopener">WebGL 编程指南</a>(看到挺多推荐的 = =)</li>
</ul>
<h3 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h3><ul>
<li><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/" target="_blank" rel="noopener">WebGL 理论基础</a></li>
</ul>
<h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><h3 id="WebGL"><a href="#WebGL" class="headerlink" title="WebGL"></a>WebGL</h3><p>跨平台万岁！</p>
<h2 id="Dev"><a href="#Dev" class="headerlink" title="Dev"></a>Dev</h2><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><ul>
<li><a href="https://www.khronos.org/webgl/wiki/Debugging" target="_blank" rel="noopener">Debugging - WebGL Public Wiki</a></li>
</ul>
<p>…</p>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>计算机图形学</tag>
        <tag>笔记</tag>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>YunYouJun/give-me-money</title>
    <url>/2017/12/26/project/give-me-money/</url>
    <content><![CDATA[<h2 id="一个沙雕钓鱼网站"><a href="#一个沙雕钓鱼网站" class="headerlink" title="一个沙雕钓鱼网站"></a><a href="https://yunyoujun.cn/give-me-money/" target="_blank" rel="noopener">一个沙雕钓鱼网站</a></h2><p>该项目<strong>仅作娱乐</strong>，博君一笑，您<strong>无须填写任何相关真实信息</strong>。<br>如果您不能理解笑点，不必强求。（网页声音预警，以防社会性死亡。）</p>
<hr>
<p>这是自己几年前 Parcel 刚出的时候，写<a href="https://yunyoujun.cn/note/vue-parcel-demo/" target="_blank" rel="noopener">「Parcel.js + Vue 搭建笔记」</a>，拿来练手的小玩意儿。<br>所以代码很丑，也没做啥后端校验。 因为之前 API 次数被人恶意刷完了，所以重置了数据，现在加了邮箱验证才能提交。</p>
<p>大家乐呵乐呵完事了，我本身也是白嫖的 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 的开发版，刷数据最多也就到 LeanCloud 的每日上限。</p>
<p>如果你真的心动，并想要打钱，可以考虑捐给 <a href="https://www.unicef.cn/" target="_blank" rel="noopener">联合国儿童基金会</a>。</p>
<a id="more"></a>
]]></content>
      <categories>
        <category>云游的小项目</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>GitHub</tag>
        <tag>沙雕</tag>
      </tags>
  </entry>
  <entry>
    <title>仿2048文字小游戏</title>
    <url>/2017/03/04/project/imitate-2048-game/</url>
    <content><![CDATA[<p>=。=学习用 js 写了仿2048的小游戏</p>
<blockquote>
<p><a href="http://calligraphy.yunyoujun.cn/combination/" target="_blank" rel="noopener">文字组合小游戏</a></p>
</blockquote>
<hr>
<p>有空再分离出来把……</p>
]]></content>
      <categories>
        <category>云游的小项目</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>学习</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Design Assets Collection</title>
    <url>/2019/05/13/share/design-assets-collection/</url>
    <content><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Record some design assets collection.</p>
<a id="more"></a>

<h2 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h2><h3 id="Google-Fonts"><a href="#Google-Fonts" class="headerlink" title="Google Fonts"></a><a href="https://fonts.google.com/" target="_blank" rel="noopener">Google Fonts</a></h3><h4 id="Megrim"><a href="#Megrim" class="headerlink" title="Megrim"></a><a href="https://fonts.google.com/specimen/Megrim" target="_blank" rel="noopener">Megrim</a></h4><p><img src="https://cos.yunyoujun.cn/blog/posts/google-fonts-megrim.png" alt="google-fonts-megrim" loading="lazy"></p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>Collection</tag>
      </tags>
  </entry>
  <entry>
    <title>Discourse 新一代开源论坛</title>
    <url>/2017/10/15/share/discourse-forum/</url>
    <content><![CDATA[<p>平时搭建 xx 网站时，总会想添加个可供讨论的论坛，随后便是按着自己想要的功能瞎写，和真正全面实用的论坛功能要差很多。</p>
<p>也查了查知道有诸如 <a href="http://www.discuz.net/forum.php" target="_blank" rel="noopener">Discuz</a> 、<a href="http://www.phpwind.net/" target="_blank" rel="noopener">phpwind</a> 之类的开源论坛可以使用，但是界面以及一些看着繁琐的功能着实不是自己喜欢的。</p>
<a id="more"></a>

<p>后来上了 <code>cocos</code> 、<code>Vue</code> 、<code>React</code> 的论坛，可以发现他们的论坛是同一个论坛框架，而且觉得看和用起来也挺简洁舒服的，便去找了找。</p>
<blockquote>
<p>啰嗦完了……</p>
</blockquote>
<p>找到的便是</p>
<h1 id="Discourse"><a href="#Discourse" class="headerlink" title="Discourse"></a><a href="https://www.discourse.org/" target="_blank" rel="noopener">Discourse</a></h1><p>使用 Ruby 编写</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>开源、免费（虽然也有收费版本</li>
<li>界面简洁、体验良好</li>
<li>大量使用 ajax ，许多功能页面使用无需刷新</li>
<li>支持 markdown 与 emoji</li>
<li>……</li>
</ul>
<h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li><a href="https://meta.discoursecn.org/t/topic/26" target="_blank" rel="noopener">30 分钟内在云上部署 Discourse</a></li>
<li><a href="https://meta.discoursecn.org/t/topic/28" target="_blank" rel="noopener">在大陆地区的云上部署 Discourse</a></li>
<li><a href="http://itfish.net/article/52781.html" target="_blank" rel="noopener">开源论坛之discourse搭建</a>(与官方教程大同小异，教了几个查看 docker 的指令)</li>
<li><a href="https://meta.discoursecn.org/t/topic/684" target="_blank" rel="noopener">在同一台机器上运行 Discourse 和其他站点</a></li>
<li><a href="https://meta.discourse.org/t/create-admin-account-from-console/17274" target="_blank" rel="noopener">在终端激活管理员帐号</a></li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul>
<li><a href="https://meta.discoursecn.org/t/topic/52" target="_blank" rel="noopener">Discourse 单点登录功能</a>(中文翻译有些问题，把变量名 <code>payload</code> 翻译为负荷了)</li>
<li><a href="https://meta.discourse.org/t/official-single-sign-on-for-discourse-sso/13045" target="_blank" rel="noopener">[英文] Discourse 单点登录链接</a></li>
</ul>
<h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ul>
<li>执行 <code>./launcher bootstrap app</code> 指令时，会使用到国外的资源，所以可能速度较慢，资源不稳定，容易失败。（不用 <code>vpn</code> 有一定几率成功。）重新执行相同指令即可。（反正我是这么成功的，鼠标激活命令行的光标，保持连接<del>玄学</del>）</li>
<li>无法收到事先设定的邮箱发送的邮件，来激活管理员账号（可参考：<a href="https://meta.discourse.org/t/create-admin-account-from-console/17274" target="_blank" rel="noopener">在终端激活管理员帐号</a>）(我使用的是腾讯企业邮箱 smtp ，虽然帮助是用465端口，最后发现还是使用587默认端口方可行)</li>
</ul>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>论坛</tag>
      </tags>
  </entry>
  <entry>
    <title>Coding WebIDE 云端开发实验室</title>
    <url>/2017/10/11/share/coding-webide-dev-env/</url>
    <content><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>之前就有听说过 WebIDE , 不过一直没有去用。毕竟本地的开发也有许多便利，平时写写前端、php 之类的环境也挺方便配置，空间也不大。</p>
<a id="more"></a>

<blockquote>
<p>啊，现在好像被腾讯收购了的样子，改名叫腾讯开发者平台了，域名也变了。<a href="https://dev.tencent.com/" target="_blank" rel="noopener">https://dev.tencent.com/</a></p>
</blockquote>
<p>接下来就要说到，某个恰巧差了 0.5 学分的人的选课问题了。冲着名字选了 <code>Web开发技术</code> 后，发现老师讲的是 JavaEE，而且书本上的知识十分老旧。 = =，实验的内容也是意外的简陋。总之，自己不是很感兴趣吧。</p>
<p>至于实验室的机器环境更是落后，老版的 <code>MyEclipse</code> 加上 <code>Windows XP</code> 系统，让人更是提不起兴 ♂ 趣。自己也懒得在自己空间有限的机子上装 JavaEE 的环境和开发工具了。</p>
<p>这时就想到了 <a href="http://coding.net" target="_blank" rel="noopener">Coding.net</a> , 大概因为是国产，比其他同类型 WebIDE 网站要快很多！而且是中文界面嘛~</p>
<blockquote>
<p>以上都是废话</p>
</blockquote>
<hr>
<p>进入正式试用。<a href="https://ide.coding.net" target="_blank" rel="noopener">https://ide.coding.net</a></p>
<p>网站也提供了 <a href="https://ide.coding.net" target="_blank" rel="noopener">快速体验~</a></p>
<blockquote>
<p>以下数据目前截至 2017.10.11</p>
</blockquote>
<h2 id="环境参数"><a href="#环境参数" class="headerlink" title="环境参数"></a>环境参数</h2><p>(个人免费版)</p>
<ul>
<li>多种环境可选</li>
<li>官方提供的 Java 基础环境是 <code>Java &amp; Maven environment</code> 。</li>
<li>JDK : java version “1.8.0_111”</li>
<li>命令行类似 <code>Git Bash</code> 风格, 提供 git 环境</li>
<li>系统 : Linux Ubuntu 16.04.1 LTS</li>
<li>CPU : 1 内核</li>
<li>内存 : 128 M</li>
<li>磁盘 : 1 GB</li>
</ul>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>目前而且以后估计也会是 <strong>免费</strong> 的，不过一个人只能建一个空间。（当然也有一些付费服务啦</li>
<li>可以与 <code>GitHub</code> 项目关联</li>
<li>提供在线链接预览</li>
</ul>
<hr>
<h2 id="配置过程与问题"><a href="#配置过程与问题" class="headerlink" title="配置过程与问题"></a>配置过程与问题</h2><p>先创建属于自己的空间。</p>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>因为课上实验用的是 <code>JavaEE</code> ，所以想的就是配置个在线写 <code>jsp</code> 之类的环境，而且还能在线预览测试。</p>
<p>预置 Maven 环境，所以使用 Maven 创建 Web 应用程序项目。</p>
<ol>
<li>在终端输入以下命令，并确定项目名称，创建 Web 项目。</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate -DgroupId=com.yiibai -DartifactId=项目名称 -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>此时项目文件夹下会生成 <code>pom.xml</code> 文件，打开，并找到如下 <code>&lt;build&gt;</code> 标签。</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">finalName</span>&gt;</span>你的项目名称<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在 <code>&lt;build&gt;</code> 中增加如下的 <code>&lt;plugins&gt;</code> 标签。(此处作用是添加 <code>maven tomcat7</code> 插件，默认配置的是 <code>tomcat6</code> 插件，不支持 <code>jdk1.8</code>)</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>进入项目文件夹，运行如下命令，开启 <code>tomcat7</code> 服务器。（注意要加 7 ）</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你的项目文件夹</span><br><span class="line">mvn tomcat7:run</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>点击 Coding WebIDE 界面右边界处的生成链接(默认是 8080 端口)，访问生成的链接即可看到 JavaWeb 的页面了。</li>
</ol>
<blockquote>
<p>参考教程： <a href="http://www.yiibai.com/maven/create-a-web-application-project-with-maven.html" target="_blank" rel="noopener">http://www.yiibai.com/maven/create-a-web-application-project-with-maven.html</a></p>
</blockquote>
<hr>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>做实验省得配置一堆环境，又可以随时备份代码，更换机器。感觉真的很方便，而且实验内容需求往往也不会触及到免费性能的瓶颈。</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>学习</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>云游的小项目们</title>
    <url>/2016/01/01/project/summary/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>记录自己游手好闲的一些产物。</p>
<a id="more"></a>

<h2 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h2><h3 id="Serious"><a href="#Serious" class="headerlink" title="Serious"></a>Serious</h3><h4 id="AIS-js"><a href="#AIS-js" class="headerlink" title="AIS.js"></a>AIS.js</h4><p>Tags: <code>Vue</code> / <code>npm</code> / <code>Element</code> / <code>JavaScript</code></p>
<blockquote>
<p>船舶自动识别系统 (Automatic Identification System) 使用 js 构建 web 端。</p>
</blockquote>
<p>实现了 AIS 船舶报文（包括船位报告与安全相关确认信息）的串口读取与解析。</p>
<p>解析包打包为 npm 包 <a href="https://www.npmjs.com/package/ais-json" target="_blank" rel="noopener">ais-json</a></p>
<ul>
<li>Web: <a href="https://ais.js.org" target="_blank" rel="noopener">https://ais.js.org</a></li>
<li>GitHub: <a href="https://github.com/YunYouJun/ais.js" target="_blank" rel="noopener">ais.js</a></li>
<li>GitHub: <a href="https://github.com/YunYouJun/ais-json" target="_blank" rel="noopener">ais-json</a></li>
</ul>
<h4 id="Element-Theme-Ink"><a href="#Element-Theme-Ink" class="headerlink" title="Element-Theme-Ink"></a>Element-Theme-Ink</h4><p>Tags: <code>Element</code> / <code>Scss</code> / <code>Theme</code></p>
<blockquote>
<p>Dead simple css theme about element.</p>
</blockquote>
<p>基于 <a href="https://github.com/ElemeFE/element" target="_blank" rel="noopener">Element</a> 所写的极简主题样式。</p>
<ul>
<li>Web: <a href="https://ink.yunyoujun.cn/" target="_blank" rel="noopener">https://ink.yunyoujun.cn/</a></li>
<li>GitHub: <a href="https://github.com/YunYouJun/element-theme-ink" target="_blank" rel="noopener">element-theme-ink</a></li>
<li>GitHub: <a href="https://github.com/YunYouJun/element-theme-ink-preview" target="_blank" rel="noopener">element-theme-ink-preview</a></li>
<li>npm: <a href="https://www.npmjs.com/package/element-theme-ink" target="_blank" rel="noopener">element-theme-ink</a></li>
<li>unpkg: <a href="https://unpkg.com/element-theme-ink" target="_blank" rel="noopener">element-theme-ink</a></li>
</ul>
<h4 id="Paper-Star"><a href="#Paper-Star" class="headerlink" title="Paper Star"></a>Paper Star</h4><blockquote>
<p>跨平台飞行射击游戏</p>
</blockquote>
<ul>
<li>GitHub: <a href="https://github.com/PaperStar" target="_blank" rel="noopener">https://github.com/PaperStar</a></li>
</ul>
<p>待补充…</p>
<h3 id="Just-for-fun"><a href="#Just-for-fun" class="headerlink" title="Just for fun"></a>Just for fun</h3><h4 id="give-me-money"><a href="#give-me-money" class="headerlink" title="give-me-money"></a>give-me-money</h4><p>Tags: <code>Vue</code> / <code>Parcel</code> / <code>LeanCloud</code></p>
<p>我很可爱，请给我钱。</p>
<ul>
<li>Web: <a href="https://yunyoujun.github.io/give-me-money/" target="_blank" rel="noopener">预览地址</a></li>
<li>GitHub: <a href="https://github.com/YunYouJun/give-me-money" target="_blank" rel="noopener">give-me-money</a></li>
</ul>
<h4 id="仿-2048-小游戏"><a href="#仿-2048-小游戏" class="headerlink" title="仿 2048 小游戏"></a>仿 2048 小游戏</h4><p>待补充…</p>
]]></content>
      <categories>
        <category>云游的小项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>【分享】网页背景效果插件 Canvas-Nest.js</title>
    <url>/2017/01/23/share/html5-canvas-nest-js/</url>
    <content><![CDATA[<p>一个基于 HTML5 Canvas 绘制的网页背景效果。</p>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener">canvas-nest.js</a></p>
<a id="more"></a>

<h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><p>使用 <a href="https://www.jsdelivr.com/" target="_blank" rel="noopener">jsDelivr</a> 提供的免费 CDN 服务。</p>
<p>将下面的代码插入到 <code>&lt;body&gt;</code> 和 <code>&lt;/body&gt;</code> 标签之间</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">  type=<span class="string">"text/javascript"</span></span><br><span class="line">  src=<span class="string">"https://cdn.jsdelivr.net/npm/canvas-nest.js/dist/canvas-nest.js"</span></span><br><span class="line">&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><ul>
<li><strong><code>color</code></strong> : 线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)，注意用 <code>,</code> 分割</li>
<li><strong><code>pointColor</code></strong>: 点颜色, 默认：<code>&#39;0,0,0&#39;</code>; RGB 格式.（注意：使用 <code>,</code> 分割）</li>
<li><strong><code>opacity</code></strong> : 线条透明度（0~1）, 默认: <code>0.5</code></li>
<li><strong><code>count</code></strong> : 线条的总数量, 默认: <code>99</code></li>
<li><strong><code>zIndex</code></strong> : 背景的 <code>z-index</code> 属性，css 属性用于控制所在层的位置, 默认: <code>-1</code></li>
</ul>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">  type=<span class="string">"text/javascript"</span></span><br><span class="line">  color=<span class="string">"0,0,255"</span></span><br><span class="line">  pointColor=<span class="string">"0,0,255"</span></span><br><span class="line">  opacity=<span class="string">"0.7"</span></span><br><span class="line">  zIndex=<span class="string">"2"</span></span><br><span class="line">  count=<span class="string">"66"</span></span><br><span class="line">  src=<span class="string">"https://cdn.jsdelivr.net/npm/canvas-nest.js/dist/canvas-nest.js"</span></span><br><span class="line">&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>效果就如本页面所示！</p>
</blockquote>
<script type="text/javascript" color="0,0,255" pointColor="0,0,255" opacity='0.7' zIndex="2" count="66" src="https://cdn.jsdelivr.net/npm/canvas-nest.js/dist/canvas-nest.js"></script>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>LNMP一键安装包</title>
    <url>/2017/08/20/share/lnmp-install/</url>
    <content><![CDATA[<p>想起以前配置环境的话，都是网上随便搜点攻略记录，就照着做下来。但是往往会因为各种不可见因素而导致诸多问题。</p>
<p>= = ，以前在这方面真的是浪费了很多时间啊。而且环境一弄不好，还会重新去初始化磁盘什么的。</p>
<hr>
<p>直到有一天，我发现了所谓的一键（<del>女装</del>）安装包。</p>
<blockquote>
<p><a href="https://lnmp.org/" target="_blank" rel="noopener">https://lnmp.org/</a></p>
</blockquote>
<a id="more"></a>

<p><strong>使用方法：</strong><br><a href="https://lnmp.org/install.html" target="_blank" rel="noopener">https://lnmp.org/install.html</a></p>
<p>以后转移服务器什么的，应该会方便很多吧。</p>
<hr>
<h1 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><h2 id="开启-fileinfo"><a href="#开启-fileinfo" class="headerlink" title="开启 fileinfo"></a>开启 fileinfo</h2><p>可以到 lnmp/include 文件夹中，修改 upgrade_php.sh 。<br>将 <code>--disable-fileinfo</code> 修改为 <code>--enable-fileinfo</code>。（有多个 php 版本需要修改对应的 php 版本）<br>再 upgrade 。</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>👴就是二次元，故尝试证明。</title>
    <url>/2020/03/06/share/i-am-er-ci-yuan-and-try-to-prove/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>两口气看完「<a href="https://www.bilibili.com/bangumi/play/ep307476" target="_blank" rel="noopener">理科生坠入情网，故尝试证明。</a>」这部番时，我便想着写个观后感吧。添加到 Todo 列表后，便因为各种杂事和惰性，一拖再拖，抛之脑后。<br>导致现在回过头来，当初的回味几乎所剩无几。</p>
<a id="more"></a>

<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><blockquote>
<p>如果对研究充满热情的科学女孩和科学男孩坠入爱河怎么办？彩玉大学理科研究生的才女，冰室菖蒲向同一实验室雪村心夜告白。<br>当然“喜欢”是没有逻辑根据的！但是，作为理工学专业的学生，“如果不能用逻辑证明自己的喜好，就不能说是喜欢，作为理科也不合格！”以那个信念为基础，两人卷进研究室的成员关于“恋”的定义的证明实验即将开始！<br>约会实验，了解喜欢的构成要素，测量心率实验，情绪值的测量……<br>个性过强的理科生们用逻辑证明“恋爱”有笑有心跳的理科爱情喜剧，开幕！</p>
</blockquote>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h3><p>看动画时，常常难免将自己作为主人公代入。当初「哆啦 A 梦」中大雄就读的年级常常是根据读者年龄而定的，刊登在杂志「小学一年生」时，大雄便是一年级，刊登在「小学四年生」时，大雄便是四年级。<br>而现在新版的动画似乎设定在了五年级。<br>所以在我四五年级的时候，仍旧在期待某一天从我的书桌抽屉里，跳出只来自未来的机器猫。但直到六年级毕业，也未能如愿。<br>大雄也永远停留在五年级，不再变化。<br>是的，即便四五年级时的我，也明白幻想与现实的区别，但是总难免心存侥幸。</p>
<p>自己的初高中生活与动漫作品中的校园日常对比起来也是十分逊色，加之最后毕业称作灰头土脸也不为过。<br>至于大学，因为受动漫作品的影响（譬如 SOS 团、美术社、古典部、动画同好会、极东魔术昼寝结社之夏），无比向往起人少而有趣的社团（<del>成为偶像，拯救废部危机</del>）。<br>当然，高中也是，但因为学校也算是市重点，学业繁重，业余生活颇为匮乏。只有高一时有过所谓的社团，一人报选一个，老师带队，每周一节课。<br>我便报选了美术社（那时「这个美术社大有问题！」也才将将发行，更别提动画化。），成功达成了人少，男生一人（我）的常见社团条件。但却少了有趣，或者说只是单纯我一个人在角落自闭，无法插进话题。<br>到了高二，所有社团也被学校停掉，无疾而终。</p>
<p>大学的社团虽不再像高中时那么敷衍，但相比如同动漫作品中那般不切实际的幻想还是差了火候。</p>
<p>总而言之，我虽然明白幻想与现实的界限，但我仍旧希望自己能忽视掉这界限，并仍旧对几乎不可能存在的校园生活心存幻想。<br>概率论中正态分布有着所谓的「3σ」原则。因为 <code>(μ-3σ,μ+3σ)</code> 以外的概率小于千分之三，在实际问题中常认为相应的事件是不会发生的。</p>
<blockquote>
<p>「小概率事件」通常指发生的概率小于 5% 的事件，认为在一次试验中该事件是几乎不可能发生的。</p>
</blockquote>
<p>人生只有一次，也只能试验一次。更何况幻想照进现实的概率更是远小于千分之三，所以所谓的期待本就应当视作不可能发生才对。</p>
<h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>小学、中学、大学，我终究无法如同抛硬币般再次作出试验。<br>大学毕业的那天，我就在想我的青春大概已经结束了。<br>当升为研究生后，我以为我再也没有借口保持憧憬了。<br>因为故事的主人公多数来自中学，小学大学也有，惟独研究生十分少见。</p>
<blockquote>
<p>还有「<a href="https://www.bilibili.com/bangumi/play/ss23856" target="_blank" rel="noopener">宅男腐女恋爱真难</a>」里职场工作的主人公</p>
</blockquote>
<p>试看第一集，猛然发现（彩玉大学理工学研究科学院 1 年级学生 - 冰室菖蒲）女主竟然在 Ubuntu 上用 LaTeX 敲着文档。<br>想必作者也至少是个实打实的研究生。</p>
<p>再想起前几个月自己刚翻译的 <a href="https://www.yunyoujun.cn/share/trans-learn-latex-in-30-minutes/" target="_blank" rel="noopener">【译】30 分钟学会 LaTeX</a> 和 <a href="https://yunyoujun.cn/note/latex-use-note/" target="_blank" rel="noopener">LaTeX 使用笔记</a>。</p>
<p>「很好，我还年轻。」并仍不住暗自笑道：「爷的青春又回来了！」</p>
<p>故事情节用一句话概括就是男女主在实验室借着各种借口公然撒狗粮，迫害学妹小奏。</p>
<p>此后我又去追了漫画，男女主终于证明双方是恋人，却又开始好感度的定义，还发明了「奏爱」这一爱情单位（继续被迫害的小奏）。</p>
<p><img src="https://cos.yunyoujun.cn/blog/zou-love.jpg" alt="zou-love.jpg" loading="lazy"></p>
<p>只是，智力超群的男女主真的会连简单人际感情也搞不明白吗？也许他们早已明白，只是这样做真的很有趣。</p>
<blockquote>
<p>我此前也尝试写了一篇「<a href="https://www.yunyoujun.cn/creation/novel/proof-of-love/" target="_blank" rel="noopener">恋爱证明记</a>」，但回看起来不得不称作很烂的作品。</p>
</blockquote>
<p>用理科的知识证明恋爱，充斥着大概率会被看作没意义的理科生的浪漫。不知怎么，还联想到「毕导」、「手工耿」等知名网红。<br>有趣而无用，把无趣的东西变为有趣。写有趣的论文，做有趣的实验与课题，本身也是一件有趣的事情。</p>
<p>此外，我一直很想创作一部自己的小说、漫画、动画或是游戏。却始终没有把握做好。但自己的阅历仍旧稍显不足。</p>
<p><img src="https://i.loli.net/2020/03/07/85gXq2HUc4p97mZ.jpg" alt="能把自己都觉得很烂的作品发表出来，这对创作者而言是非常重要的。做不到这点的人，只会说等到有拿得出手的作品再发吧，可是这个时机永远都不会来。" loading="lazy"></p>
<p>我认识到，作品稍微结合或者说用自己的一些专业知识来弥补空隙也可以很有趣。</p>
<p>进入研究生生涯，我很遗憾地又抛错了硬币。<br><a href="https://baike.baidu.com/item/ACGN/194297" target="_blank" rel="noopener">ACGN</a> 也继续成为我精神的陪伴。<br>当然，自己至今的所有境地说到底和自己性格脱不了干系。但我仍旧不想就此改变。</p>
<p>我坚信自己仍旧会充满幻想，哪怕这可能是十分幼稚的事情。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/meme/love-er-ci-yuan-is-sick.jpg" alt="喜欢二次元这件事很恶心这一点我还是知道的" loading="lazy"></p>
<p>但是…</p>
<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/meme/i-am-er-ci-yuan.jpg" alt="爷就是二次元" loading="lazy"></p>
<p>只要相信哆啦 A 梦还可能从我书桌抽屉中跳出，我的青春（童年）就不会结束不是吗？</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul>
<li><a href="https://movie.douban.com/subject/30426867/" target="_blank" rel="noopener">理科生坠入情网，故尝试证明。 - 豆瓣</a></li>
<li><a href="https://www.bilibili.com/bangumi/play/ep307476" target="_blank" rel="noopener">理科生坠入情网，故尝试证明。 - bilibili</a></li>
<li><a href="https://manga.bilibili.com/detail/mc27652" target="_blank" rel="noopener">理科生坠入情网，故尝试证明。 - 哔哩哔哩漫画</a></li>
<li><a href="https://baike.baidu.com/item/理科生坠入情网，故尝试证明。/23243616" target="_blank" rel="noopener">理科生坠入情网，故尝试证明。 - 百度百科</a></li>
</ul>
<hr>
<p>Q.E.D.</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>随笔</tag>
        <tag>动画</tag>
        <tag>漫画</tag>
      </tags>
  </entry>
  <entry>
    <title>【番剧】《月色真美》（老夫的少女心啊）</title>
    <url>/2017/09/05/share/the-moonlight-is-beautiful/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://bangumi.bilibili.com/anime/5989" target="_blank" rel="noopener">【bilibili独家番剧】《月色真美》</a></p>
</blockquote>
<p>2017年4月开播 已完结, 全12话</p>
<p><strong>声优：</strong> 千葉翔也 、小原好美 、田丸篤志 、村川梨衣 、白石晴香 、筆村栄心 、金子誠 、石見舞菜香 、鈴木美園</p>
<p><strong>简介：</strong>茜与小太郎。 初三时第一次被分到同班，相识的两人。 同班同学、社团伙伴、教师、父母……与周围的关联，自己的成长。 在那个一边被变化与不安追着，一边慌慌张张地向前飞奔的季节之中，稚嫩而又令人眩目的青春期之恋。</p>
<a id="more"></a>

<hr>
<p>“月色真美”这句话的的含义由来也有一些趣闻。<br>一说是夏目漱石先生在为学生示意翻译时，认为日本人一般是不会直接说我爱你的，应当更加委婉含蓄，便将 <code>I love you.</code> 翻译为了<strong><code>月色真美</code></strong>。</p>
<blockquote>
<p>月が绮丽ですね</p>
</blockquote>
<p>另一说则是，月亮和喜欢在日语中的发音很接近。</p>
<blockquote>
<p>月亮，日文：月，发音：Tsuki<br>爱（喜欢），日文：好き，发音：Suki</p>
</blockquote>
<hr>
<p>七夕前后，群内各种秀恩爱的也是多了起来。</p>
<p>虽然嘴上说着，‘禁言禁言啊!’，‘不吃，滚.jpg’ …… 这些话</p>
<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/meme/no-eat-gun.jpg" alt="不吃，滚.jpg" loading="lazy"></p>
<p>但是，其实还是很羡慕的吧，也挺为他们开心的。（毕竟摆出一副单身狗的怨念出来，会让这群秀恩爱的家伙的幸福感提高的吧。）</p>
<p>今天则有空看了看，此前听说过的《月色真美》。那种淡淡的、青涩的恋爱，真的是很让人向往啊。（<del>啊，老夫的少女心</del>）</p>
<p>以至于，有种现在就想要去恋爱的感觉。（<del>醒一醒！</del>）当然我这种人，还是老老实实孤独终老吧。</p>
<p>总之，这大概是部挺让人开心，并不由得感叹一句‘年轻真好’，再向别人推荐的番。</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>动画</tag>
      </tags>
  </entry>
  <entry>
    <title>自己常用的导航工具</title>
    <url>/2018/09/03/share/nav/</url>
    <content><![CDATA[<p>记录自己常用的导航工具</p>
<a id="more"></a>

<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Chrome-Plugins"><a href="#Chrome-Plugins" class="headerlink" title="Chrome Plugins"></a>Chrome Plugins</h3><ul>
<li><a href="https://www.wappalyzer.com/" target="_blank" rel="noopener">Wappalyzer - Identify technology on websites</a>: 查询网站使用技术</li>
</ul>
<h3 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h3><ul>
<li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></li>
<li><a href="https://cn.wordpress.org/" target="_blank" rel="noopener">Wordpress</a></li>
</ul>
<h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><ul>
<li><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine - 一款快速、简洁且高效的无后端评论系统</a></li>
</ul>
<h3 id="Analyze"><a href="#Analyze" class="headerlink" title="Analyze"></a>Analyze</h3><ul>
<li><a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics</a></li>
</ul>
<h2 id="Dev"><a href="#Dev" class="headerlink" title="Dev"></a>Dev</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><ul>
<li><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></li>
<li><a href="https://coding.net/" target="_blank" rel="noopener">Coding - Web IDE</a>(后被腾讯收购改名腾讯开发者平台 <a href="https://dev.tencent.com" target="_blank" rel="noopener">https://dev.tencent.com</a>)</li>
</ul>
<h3 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h3><ul>
<li><a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis-CI - 持续集成</a></li>
<li><a href="https://www.netlify.com/" target="_blank" rel="noopener">Netlify: All-in-one platform for automating modern web projects.</a></li>
</ul>
<h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><ul>
<li><a href="https://electronjs.org/" target="_blank" rel="noopener">Electron - 使用 JavaScript, HTML 和 CSS 构建跨平台的桌面应用</a></li>
</ul>
<h3 id="FE-Code-Playground"><a href="#FE-Code-Playground" class="headerlink" title="FE Code Playground"></a>FE Code Playground</h3><p>在线编辑器，适合在线写一些效果类的 Demo 并分享。</p>
<ul>
<li><a href="https://jsfiddle.net/" target="_blank" rel="noopener">JSFiddle</a></li>
<li><a href="https://codepen.io/" target="_blank" rel="noopener">CodePen</a></li>
<li><a href="https://jsrun.pro/" target="_blank" rel="noopener">JSRun</a></li>
</ul>
<h3 id="Cloud-Platform"><a href="#Cloud-Platform" class="headerlink" title="Cloud Platform"></a>Cloud Platform</h3><ul>
<li><a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a></li>
<li><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a></li>
<li><a href="https://www.aliyun.com/" target="_blank" rel="noopener">阿里云</a></li>
<li><a href="https://www.heroku.com/" target="_blank" rel="noopener">Heroku</a></li>
</ul>
<h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><h4 id="Docs"><a href="#Docs" class="headerlink" title="Docs"></a>Docs</h4><ul>
<li><a href="https://docs.qq.com/" target="_blank" rel="noopener">腾讯文档</a></li>
<li><a href="https://www.yuque.com/" target="_blank" rel="noopener">语雀</a></li>
</ul>
<blockquote>
<p>下面的是邀请链接可以为我加流量 Orz<br><a href="https://www.yuque.com/login?platform=wechat&inviteToken=f44225123bcab02038f11cc0a7ab720c6d41f5952d55ea25f6596890ceff74fb" target="_blank" rel="noopener">点击链接快来和我一起加入语雀文档，体验全新知识创作，让你的协作更高效！</a></p>
</blockquote>
<h4 id="Connect"><a href="#Connect" class="headerlink" title="Connect"></a>Connect</h4><ul>
<li>[WinSCP]</li>
<li><a href="https://www.netsarang.com/zh/xshell/" target="_blank" rel="noopener">XSHELL</a></li>
<li><a href="https://www.netsarang.com/zh/xftp/" target="_blank" rel="noopener">XFTP</a></li>
</ul>
<h4 id="Mail"><a href="#Mail" class="headerlink" title="Mail"></a>Mail</h4><ul>
<li><a href="https://mailchimp.com/" target="_blank" rel="noopener">MailChimp - 邮件订阅工具</a></li>
</ul>
<h4 id="模拟器"><a href="#模拟器" class="headerlink" title="模拟器"></a>模拟器</h4><ul>
<li><a href="http://mumu.163.com/" target="_blank" rel="noopener">网易 mumu 模拟器</a></li>
</ul>
<h4 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h4><ul>
<li><a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener">fiddler</a></li>
</ul>
<h2 id="System"><a href="#System" class="headerlink" title="System"></a>System</h2><ul>
<li><a href="https://www.deepin.org/" target="_blank" rel="noopener">深度系统 - Base on Linux</a></li>
<li><a href="https://fydeos.com/" target="_blank" rel="noopener">FydeOS - 面向未来的云驱动操作系统</a></li>
<li><a href="http://cn.jide.com/remixos" target="_blank" rel="noopener">Remix OS - 个人电脑与移动设备融合体验的操作系统</a></li>
</ul>
<h2 id="ACG"><a href="#ACG" class="headerlink" title="ACG"></a>ACG</h2><ul>
<li><a href="https://www.bilibili.com/" target="_blank" rel="noopener">bilibili - 弹幕视频网站</a></li>
<li><a href="https://www.pixiv.net/" target="_blank" rel="noopener">pixiv - 插画交流网站</a></li>
</ul>
<h2 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h2><ul>
<li><a href="https://www.douban.com/" target="_blank" rel="noopener">豆瓣</a></li>
</ul>
<hr>
<p>To Be Continued.</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>【动画电影】《声之形》观后感</title>
    <url>/2018/02/03/share/the-shape-of-voice/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天下午在家里坐立不安地等成绩，加之身体不大舒服，也不怎么想敲代码。便看了看电视。<br>起初看得是<a href="https://movie.douban.com/subject/26527993/" target="_blank" rel="noopener">《哆啦A梦：新·大雄的日本诞生》</a>。</p>
<p>旧漫画与老剧场版都有看过，所以剧情基本一目了然。每部剧场版里进入冲突前总有一段无忧无虑的半冒险生活，一直是我最喜欢的部分。<br>小时候缠着老爸买帐篷，这里差不多就是源头了。</p>
<blockquote>
<p>虚假的历史永远不可能战胜真正的历史</p>
</blockquote>
<p>哆啦A梦喊出这句话后，掷出货真价实的石矛击败了来自 23 世纪的反派。</p>
<a id="more"></a>

<h2 id="声之形"><a href="#声之形" class="headerlink" title="声之形"></a><a href="https://movie.douban.com/subject/26264454/" target="_blank" rel="noopener">声之形</a></h2><p>随后仍旧无所事事地我又看起了《声之形》。</p>
<blockquote>
<p>西宫硝子（早见沙织 饰）生来患有听觉障碍，要依靠助听器和外界交流，口语发音也因此格外的古怪。<br>初中时，硝子转入了一所新的学校，特殊的生理缺陷让她成为了班上引人注目的独特存在，她因此收获了坚实的友情，却也遭到了以男生石田将也（入野自由 配音）为首的小团体的孤立和排挤。<br>随着时间的推移，无心或有意的恶作剧渐渐升级，最终演变成为了无法挽回的伤害，硝子永远的消失在了众人的眼前。<br>排挤硝子的事情曝光后，将也成为了下一个被欺负的对象，孤独痛苦的他终于理解了硝子的隐忍和温柔，只是他再也没有机会跟硝子道歉了。<br>一次偶然中，将也同硝子重逢了，命运的齿轮重新开始了转动。<br>剧情简介 - <a href="https://movie.douban.com/subject/26264454/" target="_blank" rel="noopener">聲の形</a></p>
</blockquote>
<p>《声之形》改编自漫画，在日本紧随《你的名字》后上映，而自己听闻得《声之形》最多的宣传词便是媲美《你的名字》。<br>当然最终豆瓣上所见的评分却令人大失所望，终究没有像君名那般掀起现象级的浪潮。</p>
<p>校园欺凌事件，对于受害人来说究竟是怎样的存在，我自身并未体验过。<br>托家长是老师的福，基本没有人欺负过我。遇到小打小闹，自己一哭了事，占尽优势。（回想起来真是羞耻啊。）<br>印象里难得抢过我饮料的隔壁班学生，此后受到了老师们连番的严肃批评。当然这一策略，离开小学便不再生效了。<br>总而言之，我无法对此类事件有真实的直接感受。细节与京阿尼的作画自不必说，影片仍旧让我感同身受。如果我是女主的话，绝对做不到那样还能笑对人生了吧。</p>
<p>看了看豆瓣评论，很多人都表示女主斯德哥尔摩综合症，某些情节不合理，结局狗血。</p>
<p>是啊，欺凌别人的人可未必会得到应有的惩罚，未必会做出忏悔，未必会察觉到自己在麻烦别人而想过去自杀，被欺凌的人更未必有那么多勇气去面对生活。<br>当年的同学没有那么容易重逢，问题不会那么容易的解决，人与人之间的矛盾没有那么容易化解，石田将也不会那么巧合抓住跃下窗台的硝子的手，也未必能在自己摔下阳台后轻而易举地苏醒。<br>甚至男主女主为对方做的事情，我自认都无法做到。无论缺了哪一个巧合，最终都可能不是现今这个美好的结局。</p>
<p>世上总有各种各样的事情，但结局往往没那么美好。不过我想，世界也未必总是那么糟糕。（当然也许只是我所知的世界。）</p>
<p>不管怎么说，它始终让我感动到了。只要能打动人心的电影，在我心中便是一部好电影。这是我的评价标准。<br>电影本来就是人所创造出来的，想要阐述什么，并拥有各种各样戏剧巧合的东西。<br>而其最终目的不也就是娱乐大众，又或是试图发人深省么。</p>
<p>男主和女主都有过怕给人添麻烦而想去自杀，不过也许这种举动本身就会给身边人添麻烦了。<br>爸妈也经常在家看到有人自杀的新闻时，就反复说，这些人好傻啊，好好的生命就这样浪费掉了。<br>有时候，自己也会瞎想些看似高深的问题，怎样是活着呢？依靠人与人的联系，生命一代代更迭下去。<br>就像《哆啦A梦：新·大雄的日本诞生》里那样，人类就此繁衍壮大。</p>
<p>但到底为了什么呢？也许是没有经历过绝境，并没有对死亡的畏惧。<br>至今也只是不想不明不白地随随便便死去罢了。</p>
<p>《声之形》中的奶奶，让女主的妹妹结弦多考虑考虑自己而不是姐姐，而在结弦的反驳下，奶奶却说自己是为了自己才学的手语。<br>虽然镜头一切，奶奶便去世了。结弦也有对男主说过，你如果只是为了自己心里好受的话，就赶紧回去吧。<br>每个人都在为了自己，帮助别人，只是因为看到别人开心，自己也会很开心啊。</p>
<p>所以，我大概一直是为了自己活着。</p>
<p>为了自己每天能开心而努力活着，为了能看到父母开心而自己开心地活着，为了各种各样人与人的联系而活着。</p>
<p>曾经我以为自己是个能安于孤独的人，当一个死宅只要有网就好了。<br>但后来想到，网络本来不就是人与人联系的象征吗？没有了人，各式各样的论坛、社区毫无意义。<br>各种影音文化也是其他人创造出来，想要传达自己的某个想法的东西。<br>网上群聊得火热，和认识的人却说不上聊天记录一半的字数。</p>
<p>死宅和现充，不过是将自己喜好的联系从一个极端移到另一个极端。</p>
<p>失去了人与人的联系，无论对于死宅还是现充，世界都了然无趣。</p>
<p>等到日后，与我相联系的事物逐渐减少，自己也难以照顾自己的时候，我应该会理所应当地选择安乐死吧。<br>为了到最后一刻，都能因为没有给别人添麻烦而开心地死去。<br>当然在此之前，都要为了自己而一直活下去。</p>
<blockquote>
<p>因为这就是人生啊。（<del>又来了，这种没有用的感慨</del>）</p>
</blockquote>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>直到 2018 年 2 月 3 日 23:09 ，成绩也仍旧没有出来。但心情早已平静了下来。<br>毕竟就算很糟糕，自己也要活下去啊（<del>笑</del>）。</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>中传</tag>
        <tag>动画</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>Wordpress 的实用插件与主题推荐</title>
    <url>/2017/08/04/share/wordpress-plugins-themes/</url>
    <content><![CDATA[<p>自己使用的一些关于 Wordpress 的插件与主题推荐。（以前爱折腾这些，现在已经转投 <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> 啦。）</p>
<a id="more"></a>

<blockquote>
<h1 id="Plug-ins"><a href="#Plug-ins" class="headerlink" title="Plug-ins"></a>Plug-ins</h1></blockquote>
<h2 id="Akismet-Anti-Spam"><a href="#Akismet-Anti-Spam" class="headerlink" title="Akismet Anti-Spam"></a>Akismet Anti-Spam</h2><p>由 <a href="http://automattic.com/wordpress-plugins/" target="_blank" rel="noopener">Automattic</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>由千百万人使用，Akismet可能是保护您的站点免受垃圾评论的世界上最好的方式。 您的站点已完全配置并受到不断的保护。</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>当初我是关闭掉的，但是某天上线的时候收到了好几条评论，还有点小激动。可是打开一看，却全都是乱七八糟的垃圾评论。（<del>我裤子都脱了你就给我看这个！</del>）后来就开开来了，不知道到底有没有用，不过的确到现在没再收到过就是了。</p>
<hr>
<h2 id="BackUpWordPress"><a href="#BackUpWordPress" class="headerlink" title="BackUpWordPress"></a>BackUpWordPress</h2><p>由 <a href="http://hmn.md/" target="_blank" rel="noopener">Human Made Limited</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>Simple automated backups of your WordPress powered website. Find me under Tools → Backups. On multisite, you’ll find me under the Network Settings menu.</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>用来在服务器上自动备份wordpress的，开着以防万一吧。（<del>大概</del>）</p>
<hr>
<h2 id="Bootstrap-3-Shortcodes"><a href="#Bootstrap-3-Shortcodes" class="headerlink" title="Bootstrap 3 Shortcodes"></a>Bootstrap 3 Shortcodes</h2><h3 id="Desciption"><a href="#Desciption" class="headerlink" title="Desciption"></a>Desciption</h3><p>The plugin adds a shortcodes for all Bootstrap 3 elements.</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>可以在编辑器里，快速添加bootstrap的一些样式。</p>
<hr>
<h2 id="Disable-Google-Fonts"><a href="#Disable-Google-Fonts" class="headerlink" title="Disable Google Fonts"></a>Disable Google Fonts</h2><p>由 <a href="disablehttp://blog.milandinic.com/">Milan Dinić</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>Disable enqueuing of Open Sans and other fonts used by WordPress from Google.</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>此前装了Jetpack后，访问页面变得异常缓慢。查了查，发现是因为我国的特殊国情（<del>防火长城</del>）挡住了Jetpack访问的一些资源。其中有谷歌字体，于是就下了这个插件禁用。（<del>只是部分原因</del>）</p>
<hr>
<h2 id="Jetpack-由-WordPress-com-出品"><a href="#Jetpack-由-WordPress-com-出品" class="headerlink" title="Jetpack 由 WordPress.com 出品"></a>Jetpack 由 WordPress.com 出品</h2><p>由 <a href="https://jetpack.com/" target="_blank" rel="noopener">Automattic</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>将 WordPress.com 云的强大功能引入您的自托管 WordPress。Jetpack 使您能够将自己的博客与一个 WordPress.com 帐户连接，以使用一般只有 WordPress.com 用户才可使用的强大功能。</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>Jetpack是个好东西，包含了大部分的所需功能，如果不是因为一些特殊国情，很多功能都可以用到。但实际上却不得不关闭其中一些功能。</p>
<p>(由于加载速度实在过慢，已将其关闭)</p>
<hr>
<h2 id="Menu-Icons"><a href="#Menu-Icons" class="headerlink" title="Menu Icons"></a>Menu Icons</h2><p>由 <a href="http://kucrut.org/" target="_blank" rel="noopener">Dzikri Aziz</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>Spice up your navigation menus with pretty icons, easily.</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>可以为自己的菜单链接什么的添加适合的小图标，很实用。</p>
<hr>
<h2 id="Open-Social"><a href="#Open-Social" class="headerlink" title="Open Social"></a>Open Social</h2><blockquote>
<p>Description</p>
</blockquote>
<p>可用腾讯QQ、新浪微博、百度、谷歌、微软LIVE、豆瓣、人人网、开心网、小米、脸书、推特、微信等登录和分享，无第三方平台、无接口文件冗余、带昵称网址头像等。</p>
<blockquote>
<p>Reason:</p>
</blockquote>
<p>可以提供其他社交平台的接口登录和分享，不过后来觉得自己这种小站根本用不到，就关了。</p>
<hr>
<h2 id="Slimstat-Analytics"><a href="#Slimstat-Analytics" class="headerlink" title="Slimstat Analytics"></a>Slimstat Analytics</h2><p>由 <a href="http://www.wp-slimstat.com/" target="_blank" rel="noopener">Jason Crouse</a></p>
<blockquote>
<p>Description:</p>
</blockquote>
<p>The leading web analytics plugin for WordPress.</p>
<blockquote>
<p>Reason:</p>
</blockquote>
<p>统计站点的一些访问信息，比较全面。（大概每天从这里看到有人访问会很高兴吧。）</p>
<hr>
<h2 id="WP-Editor-md"><a href="#WP-Editor-md" class="headerlink" title="WP Editor.md"></a>WP Editor.md</h2><p>由 <a href="https://iiong.com/" target="_blank" rel="noopener">淮城一只猫</a></p>
<blockquote>
<p>Description</p>
</blockquote>
<p>或许这是一个WordPress中最好，最完美的Markdown编辑器。</p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>很好用的一个wordpress里的markdown编辑器。</p>
<hr>
<blockquote>
<h1 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h1></blockquote>
<h2 id="Adams"><a href="#Adams" class="headerlink" title="Adams"></a>Adams</h2><p>由<a href="https://biji.io/" target="_blank" rel="noopener">Tokin</a></p>
<blockquote>
<p>Reason</p>
</blockquote>
<p>简洁</p>
<hr>
<h2 id="Flat-Bootstrap"><a href="#Flat-Bootstrap" class="headerlink" title="Flat Bootstrap"></a>Flat Bootstrap</h2><p>由<a href="http://xtremelysocial.com/" target="_blank" rel="noopener">XtremelySocial</a></p>
<hr>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>鱼与熊掌</title>
    <url>/2017/12/11/essay/life-and-work/</url>
    <content><![CDATA[<blockquote>
<p>鱼，我所欲也，熊掌亦我所欲也；二者不可得兼，舍鱼而取熊掌者也。 ——孟子《鱼我所欲也》</p>
</blockquote>
<p>有时候生活与工作也许就像鱼和熊掌一般，（来自一名没有丝毫工作经验的普通学生感慨），但我仿佛看得到未来某一刻的自己埋头在漫无边际的代码里，抓耳挠腮，捶胸顿足，做着自己并非完全喜欢的工作。</p>
<a id="more"></a>

<blockquote>
<p>诸君，我喜欢有趣的东西。</p>
</blockquote>
<p>只有有意思的事情才会更加让人愿意为之付出精力啊。</p>
<p>考研也几乎大军压境，兵临城下，决战下周。</p>
<p>如果失败的话，我大致已经可以预见到未来的自己，谨遵父命，考个公务员又或是教师证，呆坐在办公室或是机房里，过完几十岁的人生。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/meme/no-work.jpg" alt="工作就输了" loading="lazy"></p>
<blockquote>
<p>打工是不可能打工的，这辈子不可能打工的啦！<br>I’m not going to work in my life.</p>
</blockquote>
<p>虽然平时总喜欢发着这张表情包，把不工作当作名言挂在嘴边。但是到了未来，终究还是不得不踏上社会的吧，被资本所雇佣，完成些无趣的分割好的碎片任务，赚取着廉薄的薪水并以此维持生活。所谓考研，看起来也不过是在此到来之前的拖延的手段罢了。</p>
<p>不，这是我为了实现梦想的过程才对。我这样安慰着自己。</p>
<p>因为专业选定的是数字娱乐与动画技术，也就是游戏方面。以后能够找到与之相关的工作或者创业，不就变得有趣得多了？</p>
<p>把有趣的生活当作工作不就鱼与熊掌二者得兼了么？</p>
<p>脑海里不禁冒出了个曾经看过的一个有趣的问题：</p>
<blockquote>
<p>您喜欢吃咖喱味的大便，还是大便味的咖喱？</p>
</blockquote>
<p>稍微有些让人难以回答，兴趣和工作搅合在一起会不会也是这样的结果呢？</p>
<blockquote>
<p>把工作当作兴趣，还是把兴趣作为工作。</p>
</blockquote>
<blockquote>
<p>鱼味的熊掌，和熊掌味的鱼，哪个好吃？</p>
</blockquote>
<p>当然也可能最终混合的四不像，但是麋鹿不也是种很有趣的生物么？</p>
<p>所以我的答案就是，如果能把它做的与我喜好的味道完全一致，并且没什么危害副作用的话，就算是大便我也吃给你看啊!</p>
<blockquote>
<p>话说，被人类喜欢的大便还少吗。粪便里提取的吲哚稀释 n 倍是茉莉花的香味，鲸的便-龙涎香，以及各种带‘砂’字的知名中药啦。</p>
</blockquote>
<p>小时候看过《星际宝贝》的一集故事，人名早已忘了大半。</p>
<blockquote>
<p>大致内容则是反派们研制出的一个实验品的能力是将被其光波射到的人变成度假的状态。将世界上所有的人都变成度假状态，就可以轻而易举地使得这个世界瘫痪而就此毁灭。</p>
</blockquote>
<blockquote>
<p>主角们则想办法挽救这一结果，但是在阻止试验品方法推导出之前，主角们也都被光波击中了。所有人都陷入了度假的狂欢。但主角的一个朋友却还在推导计算着解决问题的方法，并成功解决了这次危机。</p>
</blockquote>
<blockquote>
<p>大家疑惑不解，她则给出了回答，对我来说，计算这些就是在度假。</p>
</blockquote>
<p>那时候，我想我是既敬佩又感到有些同情这类人的。敬佩的是世界上正因有了这些人才能不断前进吧，而同情的是他们却没能去享受那些更为有趣的东西。</p>
<p>但现在看来，对于这类人来说，自己喜欢的研究本来就是有趣的吧。每个人都有自己的价值评判体系，不同的喜好、不同的品味。有人喜欢吃西红柿，有人喜欢摇滚重金属，而对于其他人却很可能弃之如敝履。美食、电影、音乐、乃至工作也是如此。</p>
<p>最近 AI 的火热，使得一些报道担忧着人类的职业命运，失业人口增加，而由此创造出的新工作机会数量远远小于淘汰的工作机会。但我仍然认为只是一个很好的趋势，进步的趋势，越是容易被淘汰的，越是那些无趣的工作，不是么？社会就是需要这样不断的进步，直到有一天物质财富极大丰富（<del>实现共产主义社会！</del>），那么每个人都可以去做自己喜欢的事情。</p>
<p>当然，我不是指那些穷奢极欲啦，做人总要有些什么追求的吧。程序员可以写自己喜欢的并且想要去写的那些开源项目，而不用绞尽脑汁地完成公司布置的碎片人物。设计师可以自由地构建自己认为美好有趣的空想世界，而不用应付恼人的甲方。每个人都独特地承担自己的责任，却又不会为之感到厌烦。无趣重复的事情就交给流水线上的机器与程序好了。这才是未来世界（<del>共产主义社会</del>）该有的样子才对啊！</p>
<p>顺带一提，鱼和熊掌的话我大概都不喜欢吃。（<del>谁管你啊！摔！</del>）</p>
<blockquote>
<p>这是无可奈何的事情。<br><a href="https://movie.douban.com/subject/1764472/" target="_blank" rel="noopener">《最終兵器彼女》</a></p>
</blockquote>
]]></content>
      <categories>
        <category>崬少的小随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>中传</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue 中 canvas 的自适应</title>
    <url>/2018/03/27/note/responsive-canvas-with-vue/</url>
    <content><![CDATA[<blockquote>
<p>最近又在写一些没什么用的小玩意儿。<br>ref: <a href="https://github.com/YunYouJun/star-timer/blob/master/docs/.vuepress/components/StarMap.vue" target="_blank" rel="noopener">https://github.com/YunYouJun/star-timer/blob/master/docs/.vuepress/components/StarMap.vue</a></p>
</blockquote>
<p>在过程中尝试使用 Vue 来实现 Html5 中 <code>Canvas</code> 标签的自适应。</p>
<a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"star-map"</span> <span class="attr">ref</span>=<span class="string">"starMap"</span>&gt;</span></span><br><span class="line">    Sorry, your browser doesn't support the <span class="symbol">&amp;lt;</span>canvas<span class="symbol">&amp;gt;</span> element.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>window.onresize</code> 方法挂载在 <code>mounted</code> 方法上。（mounted 可参见 Vue <a href="https://cn.vuejs.org/v2/api/#mounted" target="_blank" rel="noopener">生命周期钩子</a>）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'StarMap'</span>,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.resizeCanvas();</span><br><span class="line">    <span class="keyword">this</span>.drawStarMap();</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, () =&gt; &#123;</span><br><span class="line">      <span class="keyword">this</span>.resizeCanvas();</span><br><span class="line">      <span class="comment">// 等待 canvas 变换好，再延时绘制，不然可能会没有内容</span></span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.drawStarMap();</span><br><span class="line">      &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    resizeCanvas() &#123;</span><br><span class="line">      <span class="keyword">this</span>.canvas = <span class="built_in">document</span>.getElementById(<span class="string">"star-map"</span>);</span><br><span class="line">      <span class="keyword">let</span> parentStyle = <span class="built_in">window</span>.getComputedStyle(<span class="keyword">this</span>.canvas.parentNode);</span><br><span class="line">      <span class="keyword">this</span>.canvas.width = <span class="built_in">parseInt</span>(parentStyle.width);</span><br><span class="line">      <span class="keyword">this</span>.canvas.height = <span class="built_in">document</span>.body.clientHeight - <span class="number">400</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle" target="_blank" rel="noopener">Window.getComputedStyle() | MDN</a><br>Window.getComputedStyle()方法返回一个对象，该对象在应用活动样式表并解析这些值可能包含的任何基本计算后报告元素的所有 CSS 属性的值。</p>
</blockquote>
<p>这里使用 getComputedStyle 来获取父节点的样式，它会展现所有呈现出来的 CSS 属性的值。而 element.style.xxx 只能获取被设置过的数值。</p>
<p>根据不同需求也可以使用 <code>document.body.clientHeight</code> 之类的。</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>Vue</tag>
        <tag>Web</tag>
        <tag>Canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-theme-yun 制作笔记</title>
    <url>/2019/04/27/note/make-hexo-theme-yun/</url>
    <content><![CDATA[<p>Hexo-Theme-Yun 绝赞开发中~</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>还在用 <code>WordPress</code> 的时候，总是喜新厌旧，经常换主题。且装了一堆插件，速度慢还容易崩。<br>而迁移到 <code>Hexo</code> 之后（小水管服务器太慢，拿去挂 MC 了。<del>根本原因是没钱</del>），光是 <code>hexo-theme-next</code> 的配置项，便让我花了好一番功夫。<br>导致觉得自己不一直用下去，感到十分对不起仔细一个一个配置过来的自己。</p>
<p>当然，还是改不了喜新厌旧的毛病。加之 next 主题过于广泛，显得自己泯然众人。心中颇有愤懑。（<del>虽然本就如此</del>）</p>
<p>而如今，诸事已毕，终于腾出空来。<br>便决定开发一款属于自己的主题。</p>
<a id="more"></a>

<p>暂且命名为 <a href="https://github.com/YunYouJun/hexo-theme-starry" target="_blank" rel="noopener">hexo-theme-starry</a>。<br>现更名为 <a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">hexo-theme-yun</a>。</p>
<p>然而，其实还并没有写多少，所以只是占位与预告。</p>
<p>嗯，预告！（<del>谁说没人看的博客就不能有预告了！？</del>）</p>
<ul>
<li>GitHub: <a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">https://github.com/YunYouJun/hexo-theme-yun</a></li>
<li>Docs: <a href="https://yun.yunyoujun.cn" target="_blank" rel="noopener">https://yun.yunyoujun.cn</a></li>
<li>Example: <a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">https://www.yunyoujun.cn</a></li>
</ul>
<h3 id="名字的由来"><a href="#名字的由来" class="headerlink" title="名字的由来"></a>名字的由来</h3><p>起初打算叫做 <code>Starry</code>，向往星空的美丽，在咕咕咕的期间发现已经有人做了这个名字的主题，遂改名为 <code>Yun</code>。</p>
<p>因为确实没有重名了，也是自己常用 ID 的一部分，遮住星空的也自然是云了。</p>
<h2 id="设计风格"><a href="#设计风格" class="headerlink" title="设计风格"></a>设计风格</h2><p>起初咱也打算遵循 <a href="https://material.io/" target="_blank" rel="noopener">Google Material Design</a> 风格来设计（很喜欢），顺便也借用了栅格、卡片和按钮等组件。所以最初能够快速成型。</p>
<p>但是自己的想法偶尔还是会和设计规范冲突，而且作为自己的主题，肯定希望它更独一无二一点。此后便渐渐移除原先引入的 Material CDN，改用自己的审美来实现。<br>同时也能减少引入文件的大小。</p>
<p>微软的 <a href="https://www.microsoft.com/design/fluent/" target="_blank" rel="noopener">Fluent UI</a> 我也很喜欢，线条、扁平的设计风格。</p>
<p>还有当初看了 <a href="https://www.bilibili.com/video/av4018008" target="_blank" rel="noopener">【洛天依原创】异样的风暴中心【杉田朗】</a>、<a href="https://www.bilibili.com/video/av7036967" target="_blank" rel="noopener">【洛天依原创】星宿计时【杉田朗】</a> 的 PV（歌也很好听！），<br>里面的动效、线条设计也觉得很是喜欢。（顺带去问了 PV 作者 <a href="https://weibo.com/aaapplemilk" target="_blank" rel="noopener">Eight-脑感电波-</a> 能否参考，得到肯定答复后，……，我就咕咕咕了。）</p>
<blockquote>
<p>10 Years Later …</p>
</blockquote>
<p>于是乎，自己的四不像主题诞生了。（还是太菜了。）</p>
<p>文章的 Markdown 样式，其实是大致使用的我此前写的一个 <a href="https://github.com/YunYouJun/star-markdown-css" target="_blank" rel="noopener">star-markdown-css</a>。（这也是此前的主题名也打算叫做 <code>Starry</code> 的原因之一。）</p>
<blockquote>
<p>细细的字体很好看！</p>
</blockquote>
<p><a href="https://yunyoujun.github.io/star-markdown-css/" target="_blank" rel="noopener">star-markdown-css</a> 是我编写的 Markdown 样式（也就是转译后常见的 HTML 标签样式），大致构想是编写多种有趣好看的文本主题样式，同时也可以作为 CDN 由用户自行引入，自由切换。</p>
<p>但为了搭配主题（譬如根据主题色改变水平线的颜色等），还是进行了些许修改，并直接写在了 <code>stylus</code> 里。（日后也许还是会分离？自选文本样式主题？咕咕咕！）</p>
<h2 id="Progress"><a href="#Progress" class="headerlink" title="Progress"></a>Progress</h2><p>发布历史及功能增删直接看 <a href="https://github.com/YunYouJun/hexo-theme-yun/releases" target="_blank" rel="noopener">releases</a> 就可以了，在这里记录 CHANGELOG 似乎也没啥意义。</p>
<p>所以可能只是单纯写写开发过程中想法的记录。</p>
<h3 id="v0-0-1-2019-05-19-试验"><a href="#v0-0-1-2019-05-19-试验" class="headerlink" title="v0.0.1 (2019-05-19) 试验"></a>v0.0.1 (2019-05-19) 试验</h3><p>自己充当自己的小白鼠，Bug 多多。</p>
<h3 id="v0-1-0-2020-03-06-优化"><a href="#v0-1-0-2020-03-06-优化" class="headerlink" title="v0.1.0 (2020-03-06) 优化"></a>v0.1.0 (2020-03-06) 优化</h3><p>移除 jQuery 依赖</p>
<p>更快、更高、更强！？？？</p>
<p>fancybox 的确用的不多，但又依赖于 jQuery。<br><del>决定使用 <a href="https://medium-zoom.francoischalifour.com/" target="_blank" rel="noopener">medium-zoom</a> 替代</del>，并全部使用 Vanilla JavaScript，以移除 jQuery。<br>medium-zoom 干脆也别用了，大家都会右键的_(:з」∠)_<br>jQuery 的确用起来很爽，但这位老前辈已经将它的理念逐渐融入现代浏览器的标准 API 中（譬如 <code>querySelector</code>、<code>classList.add|remove|contains</code>），所以使用原生 JS 来写往往更有优势。</p>
<p>也能加深对原生 JavaScript 的理解。</p>
<p><img src="https://i.loli.net/2020/03/12/cUIuDPJfo379ZOk.png" alt="pagespeed-insights-score.png" loading="lazy"><em>谷歌 <a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">PageSpeed Insights</a></em></p>
<p><img src="https://i.loli.net/2020/03/08/DhfLu5yngb7NZE2.png" alt="Audits - Lighthouse" loading="lazy"><em>谷歌浏览器 Audits - Lighthouse 检测分数</em></p>
<p>尽可能使用 CDN，提高访问速度。也算是符合了 云 ☁️ 的名字。</p>
<p>虽然很想用 WebP，奈何万恶的 Safari 与 iOS 不支持，故又都切回了 JPG。</p>
<p>最后似乎变成了面向 Audits 优化。</p>
<hr>
<p>顺道给大家看看主题特色功能？<a href="https://www.yunyoujun.cn/girls/" target="_blank" rel="noopener">老婆展示页</a>？</p>
<h3 id="v0-2-0-2020-03-17-修补"><a href="#v0-2-0-2020-03-17-修补" class="headerlink" title="v0.2.0 (2020-03-17) 修补"></a>v0.2.0 (2020-03-17) 修补</h3><p>拖拖拉拉，直到最近才算较为完善，查漏补缺，开始小宣传。</p>
<p>为了宣传主题，写了篇小教程 <a href="https://www.yunyoujun.cn/share/how-to-build-your-site/" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站</a>。</p>
<p>但愿不是买椟还珠。</p>
<h3 id="v0-3-0-2020-03-23"><a href="#v0-3-0-2020-03-23" class="headerlink" title="v0.3.0 (2020-03-23)"></a>v0.3.0 (2020-03-23)</h3><p>移除 <code>embeddedVideoTransformer</code>，<a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a> 太香了。</p>
<h3 id="2020-03-24"><a href="#2020-03-24" class="headerlink" title="2020-03-24"></a>2020-03-24</h3><p>改使用 <a href="https://github.com/zTrix/sata-license" target="_blank" rel="noopener">SATA 协议( The Star And Thank Author License (SATA) )</a>，笑。</p>
<p>简而言之，就是在 MIT 协议上，加个 Star 的要求。</p>
<p><a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener"><img src="https://img.shields.io/github/stars/YunYouJun/hexo-theme-yun?style=social" alt="GitHub stars" loading="lazy"></a></p>
<p>快快快，都给我去 Star，不准白嫖。</p>
<h3 id="2020-03-26"><a href="#2020-03-26" class="headerlink" title="2020-03-26"></a>2020-03-26</h3><p>去 V2EX 发了一帖 <a href="https://www.v2ex.com/t/656234" target="_blank" rel="noopener">一个轻量、快速、可爱（自认为）的 Hexo 主题： Yun</a>。</p>
<p>结果因为滑动不流畅被吐槽惨了。（自己测试的确没有感受到这个问题。）</p>
<blockquote>
<p>想起一个程序员经典口头禅：奇怪哦，我本地测试没问题，怎么上线后就有问题了。</p>
</blockquote>
<p>还不知道怎么解决。</p>
<p>拿 Safari 测试了下，……，我错了，真的好卡。</p>
<p>一一排除后，发现原来是背景 <code>filter: blur(30px)</code> 的原因，咨询群里的大家都还觉得挺好看。<br>决定还是保留为配置项，并在文档提醒可以手动用图像处理工具模糊。</p>
<h3 id="2020-03-30"><a href="#2020-03-30" class="headerlink" title="2020-03-30"></a>2020-03-30</h3><p>偶然测试了早期的 <code>v0.1.0</code>, <code>v0.2.0</code>（我都是使用 <code>::before</code> 实现的背景），即便使用了 <code>blur</code> 滤镜滚动仍然很流畅。</p>
<p>发现使用 <code>::before</code> 实现背景渲染速度提升很多。</p>
<p>某一天我作死的换成了单独的 <code>div</code> 来实现，然后发了一个主题宣传帖，于是有了前几天的一幕。（Safari 最为明显）</p>
<p>目前通过切回 <code>::before</code> 实现和移除 <code>background-attachment: fixed</code> 来优化，即便开启滤镜仍然滚动流畅。</p>
<blockquote>
<p><a href="https://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/" target="_blank" rel="noopener">使用 CSS3 will-change 提高页面滚动、动画等渲染性能</a></p>
</blockquote>
<p>继续做减法，移除默认不开启的 <a href="https://codepen.io/hakimel/pen/bzrZGo" target="_blank" rel="noopener"><code>rymd</code></a>（群星移动效果），挺吃性能，而且也没怎么优化页面展示效果。</p>
<hr>
<p>持续迭代 ing…</p>
<p>Ten Years Later</p>
<h3 id="2020-05-05-PJAX"><a href="#2020-05-05-PJAX" class="headerlink" title="2020-05-05 PJAX"></a>2020-05-05 PJAX</h3><p>pjax 适配一些插件和第三方功能时（而且有些根本就不支持重载），实在是太痛苦了。</p>
<p>因为自己没用全局播放器，以及为了避免隐藏的 BUG，自己博客干脆就没开 pjax 了。</p>
<h3 id="2020-05-31-滚动"><a href="#2020-05-31-滚动" class="headerlink" title="2020-05-31 滚动"></a>2020-05-31 滚动</h3><p>我的主题文章目录的滚动效果起初是参考 <a href="https://github.com/Molunerfinn/hexo-theme-melody/blob/dev/source/js/sidebar.js" target="_blank" rel="noopener">hexo-theme-melody/source/js/sidebar.js</a> 实现的。<br>随后为了移除 jQuery 依赖，使用 Vanilla JavaScript 进行了重写，并混合 CSS 选择器来实现，（应该）提升了性能。<br>监听 <code>scroll</code> 事件，传入 <code>window.scrollY</code>。（再加上所谓的节流函数）</p>
<blockquote>
<p>关于滚动优化还有个 <a href="https://zhuanlan.zhihu.com/p/24555031" target="_blank" rel="noopener">移动 Web 滚动性能优化: Passive event listeners</a> 可以了解一下</p>
</blockquote>
<p>看了苏卡卡大佬的 <a href="https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/" target="_blank" rel="noopener">使 Disqus 不再拖累性能和页面加载</a>，才知道还有 Intersection Observer 这个东西。</p>
<p>还看了小伙伴 ChrAlpha 的 <a href="https://blog.ichr.me/post/valine-lazyload/" target="_blank" rel="noopener">Lazyload 不让 Valine 评论组件拖慢页面加载</a>，打算也应用到主题的优化上来，但想到自己本来就是放在 <code>DOMContentLoaded</code> 里才初始化的，而且文章的阅读数也是直接用的 Valine ，使用 <code>Observer</code> 来懒加载可能不大合适，所以干脆作罢（<del>其实主要是懒</del>）。</p>
<p>不过我觉得文章目录的滚动激活效果倒是可以尝试使用这种方法来优化看看。<br>虽然现在也并没有觉得速度受到什么影响，但是总觉得冥冥之中应该是能提升的（玄学），同时可以去掉节流函数等代码。<del>新 API 用就是了</del></p>
<p>顺道看了一下 Vuepress 的<a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-active-header-links" target="_blank" rel="noopener">实现</a>，也是用的 <code>scroll</code> 加 <code>denounce</code>。</p>
<p>（话说总觉得新时代浏览器不应该手写节流防抖函数，不够优雅，但又似乎的确能有些作用，不知道有没有什么更好的方案，还请看官多指教。）</p>
<blockquote>
<p>v0.3.0 时，我便是使用的 <code>debounce</code>，<a href="https://github.com/YunYouJun/hexo-theme-yun/blob/v0.3.0/source/js/sidebar.js" target="_blank" rel="noopener">sidebar.js - v0.3.0</a><br>v0.4.0-v0.7.0，直接去掉了（代码看起来比较简洁），<a href="https://github.com/YunYouJun/hexo-theme-yun/blob/v0.7.0/source/js/sidebar.js" target="_blank" rel="noopener">sidebar.js - v0.7.0</a></p>
</blockquote>
<p>简而言之，我便想用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver" target="_blank" rel="noopener">Intersection Observer</a> 重构一下目录滚动监听功能，然后……写出了些 BUG，没调出来，就搁置了一段时间。</p>
<p>再腾出时间想要重构时，突然发现 <a href="https://github.com/next-theme/hexo-theme-next/blob/master/source/js/utils.js#L236" target="_blank" rel="noopener">hexo-theme-next/source/js/utils.js</a> 就是用这种方式写的。</p>
<blockquote>
<p>咳，读书人的事情怎么能叫抄呢？叫参考！</p>
</blockquote>
<p>于是，我参考了下，并简化了些许代码，火速收工。<a href="https://github.com/YunYouJun/hexo-theme-yun/blob/v0.8.0/source/js/sidebar.js" target="_blank" rel="noopener">sidebar.js - v0.8.0</a></p>
<h3 id="2020-06-01-亮暗模式"><a href="#2020-06-01-亮暗模式" class="headerlink" title="2020-06-01 亮暗模式"></a>2020-06-01 亮暗模式</h3><p>基础的暗色模式开发完成，我可以不用，但不能没有系列。</p>
<p>参考的小伙伴的文章：</p>
<ul>
<li><a href="https://www.giuem.com/dark-mode/" target="_blank" rel="noopener">给博客增加深色模式支持 | BLOG@GIUEM</a></li>
<li><a href="https://blog.skk.moe/post/hello-darkmode-my-old-friend/" target="_blank" rel="noopener">你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持 | Sukka’s Blog</a></li>
</ul>
<hr>
<p>To Be Continued.</p>
<!-- Q.E.D. -->
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>笔记</tag>
        <tag>GitHub</tag>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>【转】三维文件格式知多少</title>
    <url>/2019/10/30/share/how-much-3d-format/</url>
    <content><![CDATA[<p>三维文件格式知多少 | abc、glTF、fbx、obj、dae、stl、3ds…</p>
<blockquote>
<p>文章来源: 饼干教育<br>原文链接: <a href="https://www.bgteach.com/article/132" target="_blank" rel="noopener">https://www.bgteach.com/article/132</a></p>
</blockquote>
<a id="more"></a>

<p><img src="https://www.bgteach.com/files/default/2018/03-18/114429d5296e001135.png" alt="三维文件格式" loading="lazy"></p>
<p>三维软件之间互相导入导出一般会涉及到一些格式不兼容的问题，这里就给大家普及一下这些常用的三维文件格式。不同的格式有着不同的定位及用处，有开源的也有商业的。目前很多三维软件之间互导迫在眉睫，无论是使用什么三维软件确保文件能够在多个软件之间链接成为了必须马上解决的事情。</p>
<h2 id="abc"><a href="#abc" class="headerlink" title=".abc"></a>.abc</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/11444087db5d955172.png" alt=".abc" loading="lazy"></p>
<p>特效工作室：ILM、Sony Pictures 与 Imageworks, 共同开发了一个开放源码系统，目标是解决特效界共同的问题, 如何可以共享复杂的动态场景, 跨越不同的软体之间， 这个格式命名为 Alembic，英文直译为蒸馏机。本质上就是一个 CG 交换格式, 专注于有效地储存, 共享动画与特效场景, 跨越不同的应用程式或是软体, 包含了商业贩售的软体或是公司内部开发的软体, 客制化的工具组。详情：<a href="https://www.bgteach.com/article/131" target="_blank" rel="noopener">《为什么 CG 行业需要 Alembic（.abc） 通用格式》</a>。</p>
<blockquote>
<p><strong>.abc 格式，中文名称：蒸馏机 - 支持动画、粒子等！</strong>bake 三维场景的模型、流体、动画、特效等数据，输出输入到其他三维软件。注意是 bake（烘焙），有可能在导入其他三维软件中无法再二次编辑，比如：Rig、流体烟雾模拟等。不必多说，ABC 将会是三维软件交互的王者。</p>
</blockquote>
<h2 id="glTF"><a href="#glTF" class="headerlink" title=".glTF"></a>.glTF</h2><p><img src="https://www.bgteach.com/files/default/2018/09-09/0742571b5068052834.png" alt=".glTF" loading="lazy"></p>
<p>glTF 是一种可以减少 3D 格式中与渲染无关的冗余数据并且在更加适合 OpenGL 簇加载的一种 3D 文件格式。glTF 的提出是源自于 3D 工业和媒体发展的过程中，对 3D 格式统一化的急迫需求。如果用一句话来描述：glTF 就是三维文件的 JPEG ，三维格式的 MP3。在没有 glTF 的时候，大家都要花很长的的时间来处理模型的载入。很多的游戏引擎或者工控渲染引擎，都使用的是插件的方式来载入各种格式的模型。可是，各种格式的模型都包含了很多无关的信息。就 glTF 格式而言，虽然以前有很多 3D 格式，但是各种 3D 模型渲染程序都要处理很多种的格式。对于那些对载入格式不是那么重要的软件，可以显著减少代码量，所以也有人说，最大的受益者是那些对程序大小敏感的 3D Web 渲染引擎，只需要很少的代码就可以顺利地载入各种模型了。此外，glTF 是对近二十年来各种 3D 格式的总结，使用最优的数据结构，来保证最大的兼容性以及可伸缩性。这就好比是本世纪初 xml 的提出。glTF 使用 json 格式进行描述，也可以编译成二进制的内容：bglTF。glTF 可以包括场景、摄像机、动画等，也可以包括网格、材质、纹理，甚至包括了渲染技术（technique）、着色器以及着色器程序。同时由于 json 格式的特点，它支持预留一般以及特定供应商的扩展。</p>
<blockquote>
<p><strong>.glTF 格式， - 支持动画等！</strong>.gITF 2.0 格式逐步的完成了 WebGL 的布局，也成为了这个领域的专用格式，随着发展游戏领域的应用也会越来越广泛。官网细节：<a href="https://www.khronos.org/gltf/" target="_blank" rel="noopener">gltf</a></p>
</blockquote>
<h2 id="fbx"><a href="#fbx" class="headerlink" title=".fbx"></a>.fbx</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/11445136fd6f467076.png" alt=".fbx" loading="lazy"></p>
<p>FBX 是 FilmBoX 这套软件所使用的格式，后改称 Motionbuilder。因为 Motionbuilder 扮演的是动作制作的平台，所以在前端的 modeling 和后端的 rendering 也都有赖于其它软件的配合，所以 Motionbuilder 在档案的转换上自然下了一番功夫。FBX 最大的用途是用在诸如在 Max、Maya、Softimage 等软件间进行模型、材质、动作和摄影机信息的互导，这样就可以发挥 Max 和 Maya 等软件的优势。可以说，FBX 方案是非常好的互导方案。</p>
<blockquote>
<p><strong>.fbx 格式，Autodesk 家族格式 - 支持动画！</strong>这是一个商业的格式，兼容最好的当属 Autodesk 家族的软件了。fbx 也开放给了第三方软件，但总是感觉除了他自己的软件之外或多或少的都有解决不完的问题。 毋庸置疑，FBX 现在是最受欢迎的格式。</p>
</blockquote>
<h2 id="bvh"><a href="#bvh" class="headerlink" title=".bvh"></a>.bvh</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/114500c52b74762351.png" alt=".bvh" loading="lazy"></p>
<p>BVH 是 BioVision 等设备对人体运动进行捕获后产生文件格式的文件扩展名。BVH 文件包含角色的骨骼和肢体关节旋转数据。BVH 是一种通用的人体特征动画文件格式,，广泛地被当今流行的各种动画制作软件支持。通常可从记录人类行为运动的运动捕获硬件获得。</p>
<blockquote>
<p><strong>.bvh 格式，动作捕捉通用格式 - 骨骼动画数据！</strong>捕捉后的文件可以重复利用，应用在不同的角色骨骼驱动上制作动画。制作游戏、影视等方面的应用广泛。</p>
</blockquote>
<h2 id="obj"><a href="#obj" class="headerlink" title=".obj"></a>.obj</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/114514a82865498230.png" alt=".obj" loading="lazy"></p>
<p>OBJ 文件是 Alias|Wavefront 公司为它的一套基于工作站的 3D 建模和动画软件 “Advanced Visualizer” 开发的一种标准 3D 模型文件格式，很适合用于 3D 软件模型之间的互导。目前几乎所有知名的 3D 软件都支持 OBJ 文件的读写。OBJ 文件是一种文本文件，可以直接用写字板打开进行查看和编辑修改。</p>
<blockquote>
<p><strong>.obj 格式，静态多边形模型 - 附带 UV 信息及材质路径！</strong>不包含动画、材质特性、贴图路径、动力学、粒子等信息。主要支持多边形(Polygons)模型。是最受欢迎的格式。</p>
</blockquote>
<h2 id="dae"><a href="#dae" class="headerlink" title=".dae"></a>.dae</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/1145266addf8983345.png" alt=".dae" loading="lazy"></p>
<p>DAE 是纯文本的模型格式，其本质就是一个单纯的 xml 文件。相比 fbx，对 dae 格式模型的载入我们拥有非常高的自由控制，这也是最复杂的地方。基本上，dae 文件内一开始就把数据分成了好几大块。对我们来说最为有用的是 VisualScenes（包含场景骨骼节点树）、Nodes（与 VisualScenes 类似，两者或互为补充）、Geometries（网格数据）、Materials/Effects/Images（材质相关信息）、Controllers（骨骼信息数据）、Animations（动画数据）、AnimationClips（全局的动画信息），其中静态模型一般也就包括 VisualScenes 和 Geometries。</p>
<blockquote>
<p><strong>.dae 格式，FBX 的代替品 - Collada DAE 需要自行下载安装！</strong>Google 地图便是使用的 DAE 格式。</p>
</blockquote>
<h2 id="stl"><a href="#stl" class="headerlink" title=".stl"></a>.stl</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/1145360eee9f475288.png" alt=".stl" loading="lazy"></p>
<p>STL 文件是在计算机图形应用系统中，用于表示三角形网格的一种文件格式。 它的文件格式非常简单， 应用很广泛。STL 是最多快速原型系统所应用的标准文件类型。STL 是用三角网格来表现 3D CAD 模型。在 STL 文件中的三角面片的信息单元 facet 是一个带矢量方向的三角面片，STL 三维模型就是由一系列这样的三角面片构成。</p>
<blockquote>
<p><strong>.stl 格式，三维打印的通用格式 - 三角面静态模型！</strong>文件格式简单，只能描述三维物体的几何信息，不支持颜色材质等信息，是计算机图形学处理 CG、数字几何处理如 CAD、 数字几何工业应用, 如三维打印机支持的最常见文件格式。</p>
</blockquote>
<h2 id="3ds"><a href="#3ds" class="headerlink" title=".3ds"></a>.3ds</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/114546a9a49f595890.png" alt=".3ds" loading="lazy"></p>
<p>3DS 文件越来越不受欢迎了。比较早的一种三维格式，三角面，最早游戏模型应用比较广泛。由于后期导入软件的不可编辑性、难以二次编辑现在逐渐的远离了我们的视线。</p>
<blockquote>
<p><strong>.3ds 格式 - 三角面静态模型！</strong>文件格式简单，现在几乎都以淘汰！应该在一些老的项目应用上才有可能会用到。</p>
</blockquote>
<h2 id="ply"><a href="#ply" class="headerlink" title=".ply"></a>.ply</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/1145575b21fa470396.png" alt=".ply" loading="lazy"></p>
<p>PLY 是一种电脑档案格式，全名为多边形档案（Polygon File Format）或 斯坦福三角形档案（Stanford Triangle Format）。该格式主要用以储存立体扫描结果的三维数值，透过多边形片面的集合描述三维物体，与其他格式相较之下这是较为简单的方法。它可以储存的资讯包含颜色、透明度、表面法向量、材质座标与资料可信度，并能对多边形的正反两面设定不同的属性。在档案内容的储存上 PLY 有两种版本，分别是纯文字（ASCII）版本与二元码（binary）版本，其差异在储存时是否以 ASCII 编码表示元素资讯。</p>
<blockquote>
<p><strong>.ply 格式 - 静态多边形模型 - OBJ 格式的升级版！</strong>PLY 格式受 Wavefront .obj 格式的启发，但改进了 Obj 格式所缺少的对任意属性及群组的扩充性。因此 PLY 格式发明了 “property” 及 “element” 这两个关键词，来概括“顶点、面、相关资讯、群组”的概念。</p>
</blockquote>
<h2 id="psk"><a href="#psk" class="headerlink" title=".psk"></a>.psk</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/11460910d7f7986951.png" alt=".psk" loading="lazy"></p>
<p>Psk 是 Epic Games Unreal Engine 的格式，也就是大名鼎鼎的虚幻游戏引擎的模型格式。虚幻游戏模型提取出来的就是 psk 格式。</p>
<blockquote>
<p><strong>.psk 格式 - Unral Engine 格式 - 带骨骼动画的模型！</strong>psk 是 一个比较特殊的格式，通常情况下是原来提取游戏模型使用的。最终生成的基于虚幻引擎的游戏打包成这个格式的模型。</p>
</blockquote>
<h2 id="x3d"><a href="#x3d" class="headerlink" title=".x3d"></a>.x3d</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/1146179584a6032575.png" alt=".x3d" loading="lazy"></p>
<p>X3D 是一种专为万维网而设计的三维图像标记语言。全称可扩展三维（语言），是由 Web3D 联盟设计的，是 VRML 标准的最新的升级版本。 X3D 基于 XML 格式开发，所以可以直接使用 XML DOM 文档树、XML Schema 校验等技术和相关的 XML 编辑工具。目前 X3D 已经是通过 ISO 认证的国际标准。</p>
<blockquote>
<p><strong>.x3d 格式 - Web3D 使用较多的格式 - 少量动画 WebGL 支持！</strong>支持多纹理和多遍绘制、支持 Shader 着色、支持多渲染目标(MRT)、支持几何实例(Geometry Instance)。<br>原文为（.ply 格式 - Web3D 使用较多的格式 - 少量动画 WebGL 支持！）可能是笔误。</p>
</blockquote>
<h2 id="dxf"><a href="#dxf" class="headerlink" title=".dxf"></a>.dxf</h2><p><img src="https://www.bgteach.com/files/default/2018/03-18/114626293a82249941.png" alt=".dxf" loading="lazy"></p>
<p>DXF 是一种开放的矢量数据格式，可以分为两类：ASCII 格式和二进制格式；ASCII 具有可读性好的特点，但占用的空间较大；二进制格式则占用的空间小、读取速度快。各种 CAD 软件中 DXF 被广泛使用，成为事实上的标准。绝大多数 CAD 系统都能读入或输出 DXF 文件。</p>
<blockquote>
<p><strong>.dxf 格式 - Drawing Exchange File - CAD 通用格式！</strong>一般都是 CAD 矢量数据的交互格式。</p>
</blockquote>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>3D</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方评论系统之我见</title>
    <url>/2020/05/17/share/third-party-comment-system/</url>
    <content><![CDATA[<p>静态博客纵有万般好，但不得不承认其常常需要很多奇技淫巧，方能实现<del>甚至无法实现</del>动态网站仅需数行代码便可实现的功能。</p>
<p>评论系统便是其代表之一。</p>
<p>我尝试过数种第三方评论系统（Disqus/Gitalk/Valine/LiveRe(来必力)/畅言），并在其中反复横跳，丢失了不少可爱的评论，也很遗憾未能找到一款真正百无挑剔的评论系统。</p>
<blockquote>
<p>一个事物的发展往往是一个波浪式前进、循环往复式上升的过程。</p>
</blockquote>
<p>我将简单对我使用过的评论系统之利弊进行对比分析（可能包含许多个人色彩），以便各位看官参考。</p>
<a id="more"></a>

<p><img src="https://cos.yunyoujun.cn/blog/posts/jump-repeatedly.jpg" alt="反复横跳.jpg" loading="lazy"></p>
<hr>
<h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a><a href="http://disqus.com/" target="_blank" rel="noopener">Disqus</a></h3><p><a href="http://disqus.com/" target="_blank" rel="noopener">Disqus</a> 作为当前最大的第三方评论系统，功能强大，也不用担心数据跑路。<br>使用广泛，一个账号可以通用许多博客评论，甚至可以和均使用 Disqus 作为评论系统的网站建立联系，形成社区。</p>
<p>但对于国内来说，却有一个致命缺点，需要科学上网。</p>
<blockquote>
<p>还可以使用 <a href="https://github.com/SukkaW/DisqusJS" target="_blank" rel="noopener">DisqusJS</a>，为无法连通 Disqus 的访客通过 Disqus API 在前端页面渲染一个评论列表。但真正想要评论，仍须科学上网。<br><a href="https://github.com/fooleap/disqus-php-api" target="_blank" rel="noopener">disqus-php-api</a> 则可以代理 Disqus，我尝试使用了一下，填写作者的 API 时，竟然直接创建到<a href="https://disqus.com/home/forum/fooleap/" target="_blank" rel="noopener">作者的讨论</a>里了……也就是说还是需要自建，又稍微脱离了使用第三方评论的初心。</p>
</blockquote>
<p>我原本已经痛定思痛准备更换 Disqus 了，却发现其加载的请求与资源相当多（即便我已经关闭了 Disqus 的追踪和返利链接），最终还是退缩起来。</p>
<p>以下是小伙伴们的一些可以参考的优化手段。</p>
<blockquote>
<p><a href="https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/" target="_blank" rel="noopener">使 Disqus 不再拖累性能和页面加载 | Sukka’s Blog</a><br><a href="https://blog.ichr.me/post/use-disqus-conveniently/" target="_blank" rel="noopener">在特殊地区科学使用 Disqus 评论系统 | ChrAlpha 的幻想乡</a></p>
</blockquote>
<p>其实如果不是因为被墙，我还是很想直接用 Disqus 的，但是我还是有评论就很高兴的人，所以不想因此而有过高门槛。</p>
<h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a></h3><p>在 <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">Gitalk</a> 诞生之前，还有一款 <a href="https://github.com/imsun/gitment/" target="_blank" rel="noopener">Gitment</a>。</p>
<p>应该说 Gitment 是第一款利用 GitHub Issues 的评论系统。但是作者前后维护不到三个月便弃坑了。<br>虽然开源项目无可指责，但自己作为满怀期待的初期用户着实还是有些不开心。</p>
<p>Gitalk 相比 Gitment 则持续维护了很久。所以首先肯定与感谢作者的开源精神与贡献。</p>
<p>不过中途因为 GitHub API 的安全策略改变，每次进入文章都会调用 Gitalk 而收到了一大堆的安全警告邮件。</p>
<blockquote>
<p>现在已经修复 <a href="https://github.com/gitalk/gitalk/issues/343" target="_blank" rel="noopener">GitHub app API query parameter deprecation</a></p>
</blockquote>
<p>而关闭了一段时间，也一直没有再启用。</p>
<p>以及 Gitalk 调用 OAuth 时会申请获取对所有公开项目的读<strong>写</strong>权限，如下图所示。</p>
<p><img src="https://i.loli.net/2020/05/17/FOLHuTXn1JZYmrb.jpg" alt="gitalk-security.jpg" loading="lazy"></p>
<p>你可以到<a href="https://gitalk.github.io/" target="_blank" rel="noopener">此处</a>尝试登陆。</p>
<blockquote>
<p>这似乎是因为 GitHub 无法继续划分权限。</p>
</blockquote>
<p>也就是说使用 Gitalk 评论的用户必须完全相信博主的 OAuth 不会作恶，同时因为 GitHub OAuth 不支持 CORS (<a href="https://github.com/isaacs/github/issues/330" target="_blank" rel="noopener">OAuth web flow endpoints don’t support CORS</a>)，<code>access_token</code> 还必须经过 <code>https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token</code> 这一代理才能获取。</p>
<p>当然也可以选择自建，但是不是有些脱离选择静态博客的初心了呢。<del>没错，我就是懒。</del></p>
<p>所以我着实有些不放心，也从用户的角度没有自信能完全取得游客的信任。（有些用户使用 GitHub OAuth 时可能没有注意到这里，所以也算提个醒。）</p>
<p>我最理想的情况是 gitalk 在不传入 <code>clientSecret</code> 等参数，只提供必要的 <code>repo</code> 时，可以渲染文章对应标题的 Issue 评论内容。（类似于 Sukka 的 <a href="https://github.com/SukkaW/DisqusJS" target="_blank" rel="noopener">DisqusJS</a>）</p>
<blockquote>
<p>感觉理论上是可以实现的，毕竟本来 Issue 就都是公开的。GitHub 也有完备的 <a href="https://developer.github.com/v3/" target="_blank" rel="noopener">API</a>。</p>
</blockquote>
<p>然后当用户想要评论时，点击链接跳转到对应 Issue 进行回复即可。这样登陆验证等全交给 GitHub 来做就可以了。</p>
<blockquote>
<p>我尝试提了个 ISSUE: <a href="https://github.com/gitalk/gitalk/issues/383" target="_blank" rel="noopener">[Feature Request] Only render issues content without clientSecret</a><br>如果能得到回复和实现就再好不过。（不行的话，就日后有空尝试自己能不能写出来，嗯，有空，咕咕咕。）</p>
</blockquote>
<h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a></h3><p>当 Gitalk 关闭后，<a href="https://github.com/xCss/Valine" target="_blank" rel="noopener">Valine</a> 一直是我在使用的方案。</p>
<blockquote>
<p>关于邮件提醒等功能则可以使用 <a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">Valine-Admin</a></p>
</blockquote>
<p>但是最近 Valine 不知何故在 <a href="https://github.com/xCss/Valine/blob/master/README.md" target="_blank" rel="noopener">README</a> 里写上了 <code>由于某些原因，src目录将从v1.4.0后暂停更新.</code>。</p>
<p>也就是说 Valine 相当于开始闭源。</p>
<p>且在闭源后，作者在其中加入了百度统计（<a href="https://github.com/xCss/Valine/issues/258" target="_blank" rel="noopener">v1.4.2, v1.4.1 will always load stats plugin from hm.baidu.com</a>），我翻看了 <a href="https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/Valine.min.js" target="_blank" rel="noopener">v1.14.14</a> 似乎没有再找到相关代码。</p>
<p>加之昨日，LeanCloud 始终登不上去（只是我个人，询问了其他朋友都正常，自己睡了一觉后也正常了），让我有点担忧起评论的数据。<br>说到底，其实一直都是在白嫖的 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 开发版的免费资源，而这数据本身就算丢失了 LeanCloud 也无需对此负责。</p>
<p>所以对于是否继续使用 Valine 也有所动摇起来。</p>
<h3 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a><a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a></h3><p>国内搜狐旗下的评论系统。（算是国内还幸存的屈指可数的几家）（多说、网易云跟帖均已关闭。）</p>
<p>但是，都 2020 年了，官网还没有强制 <code>https</code> 跳转还是比较稀奇的。</p>
<p>过去我曾经使用过，印象里它会自行给你插广告且占位很大，此外用户还须绑定手机号。</p>
<p>所以基本不考虑。</p>
<h3 id="来必力-LiveRe"><a href="#来必力-LiveRe" class="headerlink" title="来必力 LiveRe"></a><a href="https://livere.com/" target="_blank" rel="noopener">来必力 LiveRe</a></h3><p><a href="https://livere.com/" target="_blank" rel="noopener">LiveRe 来必力</a> 是一家来自韩国的评论系统，支持多种 SNS 账号连接登陆（QQ、微信、GitHub、百度、微博、豆瓣、Twitter 等等），很接地气。<br>且好处是<strong>不</strong>需要科学上网（官网甚至是备案过的），但是国内访问速度还是比较慢。</p>
<p>因其体量，仍旧担心是否能够坚持下去不倒闭。毕竟国外用户大多数会直接选择 Disqus，而这也不是国内本土产品。截至目前官网显示的客户量竟然只有 1,350 个，对于已经运行数年的网站来说，是不是有些过少了呢？</p>
<p>但光就其功能上来说，还是值得一用的。</p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><table>
<thead>
<tr>
<th align="left">第三方评论系统</th>
<th align="left">开源</th>
<th align="left">速度</th>
<th align="left">是否被墙</th>
<th align="left">可否实现 PJAX</th>
<th>数据可靠性</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Disqus</td>
<td align="left">否</td>
<td align="left">慢</td>
<td align="left">是</td>
<td align="left">可以</td>
<td>市场占有率高，可靠</td>
</tr>
<tr>
<td align="left">Gitalk</td>
<td align="left">是</td>
<td align="left">中等</td>
<td align="left">否</td>
<td align="left"><a href="https://github.com/gitalk/gitalk/issues/205" target="_blank" rel="noopener">不可以</a></td>
<td>GitHub 还在一天，就永远不用担心</td>
</tr>
<tr>
<td align="left">LiveRe</td>
<td align="left">否</td>
<td align="left">较慢</td>
<td align="left">否</td>
<td align="left">不可以</td>
<td>存疑</td>
</tr>
<tr>
<td align="left">Valine</td>
<td align="left">薛定谔的开源</td>
<td align="left">快</td>
<td align="left">否</td>
<td align="left">可以</td>
<td>取决于 LeanCloud（看你是不是付费用户了）</td>
</tr>
</tbody></table>
<p>以下是同一个页面加载不同评论系统时 <code>Dev Tools -&gt; Network</code> 的信息。（None 为不加载评论系统）</p>
<blockquote>
<p>Gitalk 懒得配置了，速度应该在 LiveRe 与 Valine 之间，影响不大。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">name</th>
<th align="left">request</th>
<th align="left">transferred</th>
<th align="left">resources</th>
<th align="left">Finish</th>
<th align="left">DOMCOntentLoaded</th>
<th align="left">Load</th>
</tr>
</thead>
<tbody><tr>
<td align="left">None</td>
<td align="left">35</td>
<td align="left">315 kB</td>
<td align="left">850 kB</td>
<td align="left">1.53 s</td>
<td align="left">672 ms</td>
<td align="left">1.52s</td>
</tr>
<tr>
<td align="left">Disqus</td>
<td align="left">94</td>
<td align="left">1.9 MB</td>
<td align="left">4.0 MB</td>
<td align="left">16.51 s</td>
<td align="left">1.38 s</td>
<td align="left">2.24 s</td>
</tr>
<tr>
<td align="left">LiveRe</td>
<td align="left">60</td>
<td align="left">1.1 MB</td>
<td align="left">3.2 MB</td>
<td align="left">13.06 s</td>
<td align="left">1.14 s</td>
<td align="left">1.98 s</td>
</tr>
<tr>
<td align="left">Valine</td>
<td align="left">43</td>
<td align="left">408 kB</td>
<td align="left">1.1 MB</td>
<td align="left">5.66 s</td>
<td align="left">1.29 s</td>
<td align="left">1.83 s</td>
</tr>
</tbody></table>
<p>简而言之，Disqus 最重最慢，Valine 最轻最快。与之对应的自然是功能强弱。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>回顾下来，我现在最能信任的还是 GitHub 与 Disqus。体量足够大，不用担心跑路。<br>虽然很想直接用 Disqus，但是我本身就不是产出硬核技术文章的人，对于想要评论的游客要求科学上网未免有些苛刻。</p>
<p>GitHub 倒是既慷慨又实用，所以要是能渲染 Issue 评论预览，想评论的点击链接跳转对应 Issue 就好了。</p>
<p>所以我目前的解决方案是 Valine 和 GitHub Issues 混用。（但是结果大家基本都是直接用的 Valine ……）</p>
<p>评论区的 GitHub Issues 我设置了跳转搜索对应文章标题的 Issue，当没有相关 Issue 时，大家也可以通过预置的 Comment 评论模版，新建 Issue。</p>
<blockquote>
<p>但是因为要多跳几个链接，无法直接显示在评论区中预览，所以基本没有人用。<br>不过我认为相比 Valine 的数据（保不准哪天我就因为各种原因不得不抛弃它了），显然 GitHub 要更为可靠些。所以重要的留言可以考虑留在 Issue 里哦～</p>
</blockquote>
<p>GitHub 最近则在内测 <a href="https://github.com/zeit/now/discussions/" target="_blank" rel="noopener">Discussions</a> 感觉也是一个不错的交流方式，值得期待。</p>
<hr>
<p>Q.E.D.</p>
]]></content>
      <categories>
        <category>云游的小分享</category>
      </categories>
      <tags>
        <tag>评测</tag>
        <tag>Disqus</tag>
        <tag>Gitalk</tag>
        <tag>Valine</tag>
      </tags>
  </entry>
  <entry>
    <title>小爱是云游最好的女朋友（大雾）</title>
    <url>/2018/01/01/project/QQ-XiaoAi/</url>
    <content><![CDATA[<p>鉴于某群的朋友，总会说着‘反正云游不在，赶紧撤回。’之类的话语，就想着可不可以写一个小脚本，来监测 QQ 群内的信息，根据关键词，自动回复指定信息。</p>
<p>标题似乎有点死宅。<br>没错，最后诞生的她我就叫作小爱了。</p>
<a id="more"></a>

<p>这种东西，凭自己的能力和惰性肯定是要先找找有没有现成的轮子可以使用啦。</p>
<p>便直接上 <code>github</code> 搜了搜关键词 qq ，按 star 数量排下来，和 qq 相关，又是符合自己期待的回复相关的便是一个 python 写的 qqbot 。</p>
<blockquote>
<p>项目源地址： <a href="https://github.com/pandolia/qqbot" target="_blank" rel="noopener">https://github.com/pandolia/qqbot</a></p>
</blockquote>
<ul>
<li>语言： python</li>
<li>环境： Linux, Windows or Mac OSX</li>
<li>使用 SmartQQ 协议（即过去的 WebQQ）</li>
</ul>
<h2 id="一些废话"><a href="#一些废话" class="headerlink" title="一些废话"></a>一些废话</h2><p>（中途嫌弃文档麻烦，又试了试所谓的酷 Q 之类的软件，但可定制性不强，还有收费权限之类的）<br>最好还是决定好好来看看 qqbot 的使用文档。（<del>没错，我就是想白嫖</del>）</p>
<p>虽然没学过 python （等我有空，我会来学的，请等着我啊！），不过看起来使用也很方便。语法的差异，便边百度边学了。（虽然踩了些小坑，但结果上来说还是满意的。）</p>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="需要先安装-python-起先是自己在-Windows-上先试验看看的-，官网下载地址-https-www-python-org-download"><a href="#需要先安装-python-起先是自己在-Windows-上先试验看看的-，官网下载地址-https-www-python-org-download" class="headerlink" title="需要先安装 python (起先是自己在 Windows 上先试验看看的)，官网下载地址 https://www.python.org/download"></a>需要先安装 python (起先是自己在 Windows 上先试验看看的)，官网下载地址 <a href="https://www.python.org/download" target="_blank" rel="noopener">https://www.python.org/download</a></h3><p>Windows 64 位的话下载 <code>Windows x86-64 executable installer</code> 版本即可，其他系统也各自对应。</p>
<h3 id="安装-qqbot"><a href="#安装-qqbot" class="headerlink" title="安装 qqbot"></a>安装 qqbot</h3><p>参照 qqbot 文档 <a href="https://github.com/pandolia/qqbot" target="_blank" rel="noopener">https://github.com/pandolia/qqbot</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install qqbot</span><br></pre></td></tr></table></figure>

<h3 id="启动-qqbot"><a href="#启动-qqbot" class="headerlink" title="启动 qqbot"></a>启动 qqbot</h3><p>进入命令行窗口，<code>git bash</code> 或者 <code>cmd</code> 都可以。<br>推荐 <code>cmd</code> , <code>git bash</code> 中文可能会乱码。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">qqbot -q xxxx // 这里填自己想要登陆的qq号（建议还是用小号安全些啦）</span><br></pre></td></tr></table></figure>

<p>直接输入 qqbot ,用想要登陆的 qq 号扫弹出的二维码也可以。（当然上面那样也是要扫的，只是多个号时方便区分，并且会存储一定时间的登陆信息。）</p>
<h3 id="指令操作"><a href="#指令操作" class="headerlink" title="指令操作"></a>指令操作</h3><p>需要再打开一个命令行窗口，以便对 qqbot 进行指令操作。（指令可参照项目文档）</p>
<h3 id="自定义消息响应"><a href="#自定义消息响应" class="headerlink" title="自定义消息响应"></a>自定义消息响应</h3><p>自己使用 python 的语法进行各种逻辑编写即可，提供的接口和属性可参见文档。</p>
<p>示例代码：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">onQQMessage</span><span class="params">(bot, contact, member, content)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> content == <span class="string">'-hello'</span>:</span><br><span class="line">        bot.SendTo(contact, <span class="string">'你好，我是QQ机器人'</span>)</span><br><span class="line">    <span class="keyword">elif</span> content == <span class="string">'-stop'</span>:</span><br><span class="line">        bot.SendTo(contact, <span class="string">'QQ机器人已关闭'</span>)</span><br><span class="line">        bot.Stop()</span><br></pre></td></tr></table></figure>

<ul>
<li>content 即收到的文本信息，if 判断文本消息是否位 ‘-hello’，执行相应的操作。</li>
<li>bot.SendTo(contact, ‘回复的消息’) 让机器人进行回复</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">···</span><br><span class="line"><span class="keyword">if</span> <span class="string">'小爱'</span> <span class="keyword">in</span> content <span class="keyword">and</span> <span class="keyword">not</span> bot.isMe(contact, member):</span><br><span class="line">      <span class="keyword">if</span> <span class="string">'你好'</span> <span class="keyword">in</span> content:</span><br><span class="line">        bot.SendTo(contact, <span class="string">'你好，我是云游酱的女朋友~'</span>)</span><br><span class="line">···</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可参见：<a href="https://github.com/YunYouJun/xiao-ai/tree/qqbot" target="_blank" rel="noopener">https://github.com/YunYouJun/xiao-ai/tree/qqbot</a></p>
</blockquote>
<ul>
<li>Python 中语法使用 in 判断是否包含这个词，缩进进行嵌套，还有 if 后的冒号，也要切记。</li>
<li>isMe() 判断是否为自己所发的消息 （之前自己就作死写了个自己触发自己的循环，结果在群里触发 bug 刷屏了）</li>
</ul>
<p>将以上代码另存为 <code>sample.py</code> （名字可以随便取，注意保存为 utf8 编码的文件）。放到 <code>~/.qqbot-tmp/plugins/</code> 目录下（ ~ 代表用户主目录， windows 下为 <code>C:\Users\xxx\.qqbot-tmp\plugins\</code>, xxx 代表用户名 ），或系统中可以 <code>import</code> 到的目录下（如 <code>python</code> 的安装目录下的 <code>Lib/site-packages</code> 目录）。</p>
<h3 id="加载自定义插件（即刚刚自己编写的逻辑）"><a href="#加载自定义插件（即刚刚自己编写的逻辑）" class="headerlink" title="加载自定义插件（即刚刚自己编写的逻辑）"></a>加载自定义插件（即刚刚自己编写的逻辑）</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">qq plug sample</span><br></pre></td></tr></table></figure>

<p>这些操作过程中不要关闭运行 qqbot 的命令行窗口。这是后，机器人就可以对收到的 qq 消息进行爬去检测，并进行自定义的回复了。</p>
<h3 id="挂载至服务器"><a href="#挂载至服务器" class="headerlink" title="挂载至服务器"></a>挂载至服务器</h3><p>以上通过编写逻辑代码，已经基本可以完成自定义消息回复的功能。但是实际是自己的电脑充当服务器功能，当把执行有 qqbot 的命令行窗口关闭时，便无法继续检测了。</p>
<p>这时就需要挂载到 24h 运行的服务器上了。自己这里买了阿里学生云的主机，便直接拿来使用了。</p>
<p>安装 python （我使用的是 Linux Ubuntu 系统）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3.5</span><br></pre></td></tr></table></figure>

<p>（其他不同系统安装皆可百度或谷歌解决）</p>
<p>Linux 插件目录为 <code>~/.qqbot-tmp/plugins/</code>(~ 代表用户主目录 <code>/root</code>)</p>
<hr>
<p>Linux 远程服务器的话，当然没法弹出二维码扫描了，这时需要进行配置。</p>
<p>参考：<a href="https://github.com/pandolia/qqbot#七二维码管理器qqbot-配置命令行参数以及工作目录" target="_blank" rel="noopener">https://github.com/pandolia/qqbot#七二维码管理器qqbot-配置命令行参数以及工作目录</a></p>
<p>进入 ‘~/.qqbot-tmp/v2.x.conf’ 文件，进行修改。<br>（使用 sftp 类型的软件或者 vim 皆可 ）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 用户 somebody 的配置</span><br><span class="line">    &quot;somebody&quot; : &#123;</span><br><span class="line">      ···</span><br><span class="line">      # 自动登录的 QQ 号</span><br><span class="line">        &quot;qq&quot; : &quot;xxx&quot;,</span><br><span class="line">      # 接收二维码图片的邮箱账号</span><br><span class="line">        &quot;mailAccount&quot; : &quot;xxx@qq.com&quot;,</span><br><span class="line">      # 该邮箱的 IMAP&#x2F;SMTP 服务授权码</span><br><span class="line">        &quot;mailAuthCode&quot; : &quot;xxxxxxxxxxxx&quot;,</span><br><span class="line">      # 在后台运行 qqbot ( daemon 模式)</span><br><span class="line">        &quot;daemon&quot;: False,   &#x2F;&#x2F; 修改为 True</span><br><span class="line">      ···</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>主要填写修改以上几处即可。</p>
<p>使用如下命令加载配置：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">qqbot -u somebody // 此处 somebody 为上述自行定义的配置，名称也可修改</span><br></pre></td></tr></table></figure>

<h3 id="WebHooks-自动部署"><a href="#WebHooks-自动部署" class="headerlink" title="WebHooks 自动部署"></a>WebHooks 自动部署</h3><p>每次突然想要修改小爱的某个回复之类的，还要重新传输文件部署，也是很麻烦的事情。所以这时候就需要配合 GitHub 搭建 WebHooks , 当自己在本地提交修改时，服务器上的小爱也接收到消息，自动进行修改并部署。</p>
<p>首先要将自己的自定义插件 git 化， 在 github 上创建自己的项目，并将自己的自定义代码提交到其上。<br>（此后的 WebHooks 是基于 GitHub 所提供的功能，当自己提交代码时， GitHub 将会向事先设定好的地址端口发送 Post 信息，再在自己服务器这边监听端口于收到的消息，执行 pull 与 插件加载等自动化脚本。）</p>
<blockquote>
<p>repo &gt; Settings &gt; Webhooks</p>
</blockquote>
<p>接下来，编写脚本(这几个文件可以和自定义消息的脚本 <code>sample.py</code> 放在一起，便于 git 备份)</p>
<h4 id="start-webkook-py"><a href="#start-webkook-py" class="headerlink" title="start_webkook.py"></a>start_webkook.py</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># start_webkook.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"><span class="comment"># 导入我们自己编写的application函数</span></span><br><span class="line"><span class="keyword">from</span> webhook <span class="keyword">import</span> application</span><br><span class="line"><span class="comment"># 创建一个服务器，IP地址为空，端口是8000，处理函数是application:</span></span><br><span class="line">httpd = make_server(<span class="string">''</span>, <span class="number">8000</span>, application)</span><br><span class="line">print(<span class="string">'Serving HTTP on port 8000...'</span>)</span><br><span class="line"><span class="comment"># 开始监听HTTP请求:</span></span><br><span class="line">httpd.serve_forever()</span><br></pre></td></tr></table></figure>

<h4 id="webhook-py"><a href="#webhook-py" class="headerlink" title="webhook.py"></a>webhook.py</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># webhook.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">application</span><span class="params">(environ, start_response)</span>:</span></span><br><span class="line">    start_response(<span class="string">'200 OK'</span>, [(<span class="string">'Content-Type'</span>, <span class="string">'text/html'</span>)])</span><br><span class="line">    DeployPath = <span class="string">'/root/.qqbot-tmp/plugins'</span></span><br><span class="line">    os.system(<span class="string">'cd '</span> + DeployPath)</span><br><span class="line">    os.system(<span class="string">'git reset --hard'</span>)</span><br><span class="line">    os.system(<span class="string">'git pull'</span>)  // 这里强制使得服务器代码与本地提交的代码，保持一致</span><br><span class="line">    os.system(<span class="string">'qq plug custom'</span>)</span><br><span class="line">    print(<span class="string">'XiaoAi pull finish'</span>)</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">b'Hello, XiaoAi!'</span>] // b 代表 bytes ,将 unicode 转为 bytes</span><br><span class="line">    // 此处返回值，用户告诉 GitHub 的 Webhooks 已接收到信息，并进行了处理</span><br></pre></td></tr></table></figure>

<ul>
<li><code># coding=utf-8</code> 这个一定要放在定义行，指定编码格式</li>
</ul>
<p>最后在文件所在的目录，执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nohup python start_webhook.py &amp; // nohup 与 &amp; 连用使得脚本在后台执行</span><br></pre></td></tr></table></figure>

<h3 id="就此结束，只要在本地-git-提交修改小爱的代码，服务器就可以收到请求并自动部署啦。"><a href="#就此结束，只要在本地-git-提交修改小爱的代码，服务器就可以收到请求并自动部署啦。" class="headerlink" title="就此结束，只要在本地 git 提交修改小爱的代码，服务器就可以收到请求并自动部署啦。"></a>就此结束，只要在本地 git 提交修改小爱的代码，服务器就可以收到请求并自动部署啦。</h3><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>自己对 python 语法并不熟悉，只能日后有时间再深入进行学习。买的小米多功能网关以及种种也都到货了，现在终于可以在床上叫小爱帮忙关灯了。</p>
<p>小米的 AI 音箱，我想着要是有个开放的云平台就好了，让大家可以自己编程生成更多有趣的技能，也能接入小爱的智能平台。结果一搜，真的有，不过看了看，很多还不完善，有的还显示敬请期待。不过，既然有这份心思，让我对小爱的好感又升一层了。</p>
<blockquote>
<p>水滴平台-小米开放平台 <a href="https://shuidi.mi.com/" target="_blank" rel="noopener">https://shuidi.mi.com/</a></p>
</blockquote>
<p>试着申请了开发者权限，要是能将 qqbot 的这个小爱接入到真正的小爱上就好了。</p>
<p>新的一年，也终于到来了。希望自己能继续努力，取得新的成长吧~</p>
]]></content>
      <categories>
        <category>云游的小项目</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>Python</tag>
        <tag>小玩意儿</tag>
      </tags>
  </entry>
  <entry>
    <title>写给可爱的学弟学妹们</title>
    <url>/2019/04/16/share/to-lovely-junior/</url>
    <content><![CDATA[<p>梦想还是要有的，万一实现了呢？</p>
<p>没有了梦想的咸鱼，和咸鱼有什么区别。</p>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我的行程与故事，几乎都写在<a href="https://yunyoujun.cn/tags/中传/" target="_blank" rel="noopener">前几篇的博客</a>里了。（<del>如果大家愿意看的话</del>）<br>在此便不再多叙。</p>
<p>关于中传的计算机考研经验贴很少，所以考了两年的我都没搜出个所以然来。<br>也没找到可以打探消息的学长学姐（<del>愤懑不堪</del>）。</p>
<p>本着开源大无畏的精神（<del>=w= 只是自称</del>），在这里总结一下自己初试复试的经验，以供大家参考。<br>（<del>=w= 私心也请大家多多支持我的博客和 GitHub，虽然没什么人看</del>）</p>
<h2 id="Progress"><a href="#Progress" class="headerlink" title="Progress"></a>Progress</h2><p>2019-04-15 忐忑之心，终于落地。查到的结果内容如下：</p>
<ul>
<li>报考信息：035 计算机与网络空间安全学院；081203 计算机应用技术；02 数字娱乐与动画技术</li>
<li>各项成绩：总成绩：76.84；复试成绩：85.67；复试笔试成绩：75；复试口语成绩：90；复试面试成绩：93.33；初试总成绩：340</li>
<li>录取结果：拟录取；全日制学术型硕士；035 计算机与网络空间安全学院；081203 计算机应用技术；02 数字娱乐与动画技术</li>
</ul>
<p>首先我是一名二战考生，来自双非一本。所以大家无需担心中传会歧视。</p>
<p>大学主修计算机科学与技术，辅修动画。所以我死磕了两年中传的这个专业方向，以冠冕堂皇怀揣梦想的理由。<br>中传的复试分数线出来比较晚，复试时间和复试结果都出来的非常非常晚，几乎没有调剂的机会，学硕招生名额也比较少，所以报考有风险，大家需谨慎。</p>
<h3 id="初试"><a href="#初试" class="headerlink" title="初试"></a>初试</h3><p>初试科目和我的分数分别为，政治 61，英语 71，数学 92，（<del>所以我还是怀疑我答题卡真的没涂</del>），数据结构与计算机网络 116。</p>
<p>所有科目都是自己买的书来看，没有买视频和报班。（= =，因为觉得贵，和心理上觉得可能坑）</p>
<p>首先政治，……我觉得轮不到我来讲经验，总之看看那个肖 4 吧。<br>其次英语，如果大家看了我前几篇的博文，应该可以隐约知道我英语非常非常烂。<br>不然我现在应该以及在南京航空航天大学学完飞行技术专业，担任飞行员，迎娶白富美，从此走上人生巅峰。<br>所以最后 71 分，自己还是比较满意的。我所做的基本就是在百词斩上，每天尽可能坚持背单词。和带着做一篇真题啊什么的。</p>
<p>大学入学时，我的英语只有 63 分，险些不及格，只拿到了 1.0 的绩点（<del>没保上研，是不是也得怪这个</del>）。<br>然后此后每学期进步几分，（最后也才到七十几）。四六级也均只是侥幸通过。<br>= =，回想一下，日常几乎没什么变化，只是拿了百词斩每天背一些单词，写程序时候偶尔要看的英文文档可能也有一些因素。（当然，我是有中文文档，肯定先看中文的人。）<br>总之，大家可以尝试背背单词和坚持。（我不是百词斩的推销人员，所以大家用啥 APP 其实都没差吧。）真题少量带着做，考前再模拟做几套。</p>
<p>数学，emm，去年一分之差惨死中传复试门口，与数学脱不了干系。但今年分数也不高。所以我也没什么可说的，总之多做题吧。<br>看其他大佬这方面的经验贴，肯定要比我强很多。</p>
<p>最后是专业课，想必也是大家最关心的部分。<br>我是买了王道论坛的单科书，数据结构一本，计算机网络一本。（用的是去年一战剩下的。）<br>最后在淘宝店买的 2013 - 2017 年的初试历年真题。<br>只到 2017 年，我问过店家，店家说，中传研招办改革，今后不会公布历年真题了。<br>所以 2018 年的没有，2019 年应当也是如此。（复试的真题也是只到 2017 为止）</p>
<p>初试真题里有许多题目和王道上的课后习题类似，所以我觉得看看王道的单科书还是蛮有用的。<br>中传有公布初试的考纲，比王道单科书上的知识点要少几个，所以可以对照大纲划掉几个小章节。<br>可以轻松一些。</p>
<p>数据结构与计算机网络真题 2013-2016（15 元），2017 真题（5 元），复试软件工程真题 15 元，总共买真题花了 35 元。<br>买来的真题是不提供答案的，所以我扫描了自己的答案和真题打包在一起。<br>想要的话评论里留一下邮箱，我发给大家。</p>
<p>考试题目不难，今年突然比往年多了两道概念题（以往一道），= =，没怎么记这个，所以有点麻烦。<br>进复试的大家，专业课分数基本都在 100 以上，不用担心存在压分。考试时间也绝对够用。</p>
<p>至于政治和英语，皆传京区大旱，那也众生平等。</p>
<h4 id="作息"><a href="#作息" class="headerlink" title="作息"></a>作息</h4><p>回想起来，我还真是心大。</p>
<p>因为二战，我基本到八九月份，我才真正意义上开始复习。（去年也是基本如此，所以惨败。）</p>
<p>= =，大家怀疑的话，看我 <a href="https://github.com/YunYouJun" target="_blank" rel="noopener">GitHub</a> 今年与去年的小绿点就知道了。<br>此前，还在不知死活地写些其他小玩意儿。</p>
<p>八九月份之后，终于不再怎么开电脑。<br>二战在家，每天看看书，做做题目。感谢父母，又养我这个白吃白喝的废物一年。<br>早上九点后起床洗漱，中午午休，晚上五六点避免长蘑菇，出去散步。（生怕遇到邻里熟人，问我毕业了没。）<br>凌晨，看集番剧（<del>只要有动画，生活就还有希望</del>）。然后入睡。</p>
<p>压力难免是有的，只是回想起来自己又好像过得很悠闲。过程并没有觉得煎熬。<br>所以大家保持好心态最重要。</p>
<p>以及要自信，现今就开始努力的大家，一定是强于我的。</p>
<h3 id="复试"><a href="#复试" class="headerlink" title="复试"></a>复试</h3><p>复试分为笔试，面试，口语。占比如下：</p>
<table>
<thead>
<tr>
<th>笔试</th>
<th>面试</th>
<th>口语</th>
</tr>
</thead>
<tbody><tr>
<td>40 %</td>
<td>50%</td>
<td>10%</td>
</tr>
</tbody></table>
<p>最后，总成绩 = 初试总成绩 / 5 ✖ 50% + 复试总成绩 ✖ 50%。</p>
<h4 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h4><p>复试的科目是软件工程。</p>
<p>复试的真题是 2004 - 2017 年为止。软件工程的题目答案很难搜（至少相对初试的数据结构与计算机网络），尤其是一些名词解释和简答题。</p>
<p>为了方便检索和随时查看，我把复试过程中做的真题和答案都整理做成了网站 <a href="https://se-notes.yunyoujun.cn" target="_blank" rel="noopener">https://se-notes.yunyoujun.cn</a>。<br>有原版真题 PDF 下载，和我自己做的 Markdown 版本（带我自己的答案和解析）。</p>
<p>GitHub 项目地址：<a href="https://github.com/YunYouJun/software-engineering-notes" target="_blank" rel="noopener">software-engineering-notes</a></p>
<p>开源免费！开源免费！开源免费！（<del>=w= 恬不知耻地求个 star ~</del>）</p>
<p>万一被辅导机构拿去卖，大家不要上当。<br>之前分享在一个中传考研群里，群主是辅导机构的，撤回了我的消息，还把我移出群了。</p>
<p>笔试过程，没什么可说的，大家集体去考场考试，三个小时。<br>时间够用，不用担心。</p>
<p>概念题有点多，要靠记忆，很烦。</p>
<h4 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h4><p>复试面试，有六个老师，大家看起来都挺和蔼的。<br>问题装在信封里，抽出一张纸上有五个题目。<br>第一个题目和最后一个题目是固定的，分别为自我介绍，和毕业设想。</p>
<p>自我介绍正常介绍就好啦，因为我是二战，毕业设计早已完成，也拿了优秀毕设，所以有得说，大家应该说说毕业设想就可以。</p>
<p>中间三个题目是随机，我抽到的是一个数据库问题（数据库类型、功用什么的），操作系统问题（分页、分段），和一个大数据的理解。<br>也有同学抽到数据结构与计算机网络问题。（<del>为什么不是我！</del>）</p>
<p>数据库和操作系统基本没怎么复习，大数据也不怎么感兴趣，所以只知道个大致概念。<br>回答的只能说一般。</p>
<p>不过我面试分数还可以的原因可能是因为有两个国二和一些省奖，以及其他乱七八糟的东西。<br>其他同学出来都说，问的是大学期间擅长哪门课程，学到了什么。<br>然后，我就心中想了些答案去。但是轮到我的时候没有问，主要问了我大学期间项目和奖项里做的工作。<br>所以可以带六份简历进去，引导的老师会分发给六位面试的老师。<br>然后老师问的问题也会主要从简历中抽，= =，感觉简历上写的项目被从上到下问了个遍。</p>
<p>复试口语和面试在一起，紧随面试之后。<br>需要英文自我介绍。<br>然后提问，问的问题可能是喜欢电子书还是纸质书什么的以及为什么（我也只听懂个大概，所以只能说是可能）。<br>而我在口胡，因为我看到口语老师在笑，我的回答也许有些不着边际。</p>
<p>= =，突然想起复试我还自己录音了。<br>（大家如果进复试后有需要的话，再联系我吧。）</p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><ul>
<li><a href="http://yz.cuc.edu.cn/" target="_blank" rel="noopener">中国传媒大学研招网</a></li>
</ul>
<h3 id="中传研招办官网-RSS"><a href="#中传研招办官网-RSS" class="headerlink" title="中传研招办官网 RSS"></a>中传研招办官网 RSS</h3><p>当初因为苦等通知无果，所以写了个爬虫生成 RSS 订阅源。<br>有 RSS 软件订阅的话，可以有新公告就通知自己。</p>
<p>刚写好，测试刷新页面的时候，通知结果就突然出来了。导致还没派上用场。<br>所以就留给大家了。</p>
<ul>
<li><a href="https://rsshub.app/cuc/yz" target="_blank" rel="noopener">https://rsshub.app/cuc/yz</a></li>
</ul>
<h3 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h3><h4 id="初试公告"><a href="#初试公告" class="headerlink" title="初试公告"></a>初试公告</h4><ul>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/1bdfe0db-62ac-4185-8e8e-3485ea8142b8.htm" target="_blank" rel="noopener">中国传媒大学 2019 年攻读硕士学位研究生招生简章[2018-09-21]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/b5c47dcf-173e-4760-83bc-b066dad468de.htm" target="_blank" rel="noopener">中国传媒大学 2019 年攻读硕士学位研究生招生专业目录[2018-09-21]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/ed32bd1c-0c7f-44eb-b8e7-efea9dc0c8aa.htm" target="_blank" rel="noopener">中国传媒大学 2019 年攻读硕士学位研究生招生考试大纲[2018-10-17]</a></li>
</ul>
<h4 id="复试公告"><a href="#复试公告" class="headerlink" title="复试公告"></a>复试公告</h4><ul>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/bdfee770-340d-425f-ae13-22fc83a89056.htm" target="_blank" rel="noopener">中国传媒大学 2019 年攻读硕士学位研究生复试及同等学力加试科目[2019-03-15]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/acac3293-06a7-454b-a0d4-5004660560c3.htm" target="_blank" rel="noopener">中国传媒大学 2019 年硕士学位研究生入学考试复试笔试主要参考书目[2019-03-15]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/680ca73e-760e-4539-abef-f1aaec7bd206.htm" target="_blank" rel="noopener">中国传媒大学 2019 年全国硕士研究生招生考试考生进入复试的初试成绩基本要求[2019-03-19]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/b7f02dd1-e9aa-46a1-97c9-21b405eab244.htm" target="_blank" rel="noopener">中国传媒大学 2019 年全国硕士研究生招生复试办法[2019-03-20]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/d609ae54-001d-40d8-a669-64886b4d383b.htm" target="_blank" rel="noopener">中国传媒大学 2019 年全国硕士研究生招生复试日程安排以及考生须知[2019-03-21]</a></li>
<li><a href="http://yz.cuc.edu.cn/newsWYFHY/09521533-778f-4efe-8d06-3b90a3b2a358.htm" target="_blank" rel="noopener">中国传媒大学 2019 年硕士复试各培养单位安排汇总[2019-03-30]</a></li>
</ul>
<h3 id="Learn"><a href="#Learn" class="headerlink" title="Learn"></a>Learn</h3><ul>
<li><a href="https://se-notes.yunyoujun.cn" target="_blank" rel="noopener">软件工程应试笔记</a>（这是我自己整理的，开源免费！=w=,恬不知耻地求 star 。）</li>
</ul>
<h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>其他大家有什么问题，可以在下方评论提出。<br>我知道的尽量回答。<br>有用的我就再加到 Q&amp;A 里。</p>
<h3 id="中传计算机分数线"><a href="#中传计算机分数线" class="headerlink" title="中传计算机分数线"></a>中传计算机分数线</h3><p>这个<a href="http://yz.cuc.edu.cn/" target="_blank" rel="noopener">中国传媒大学研招网</a>上是可以查到的。<br>大家要善于观察和检索 = =。</p>
<p><a href="http://yz.cuc.edu.cn/newsWYFHY/680ca73e-760e-4539-abef-f1aaec7bd206.htm" target="_blank" rel="noopener">中国传媒大学 2019 年全国硕士研究生招生考试考生进入复试的初试成绩基本要求</a></p>
<p>往年的情况也在。</p>
<p>当当当，以及大家今年最关心的这个出炉。</p>
<p><img src="../../images/posts/to-lovely-junior/admission-list.png" alt="2019 计算机应用技术 录取名单" loading="lazy"></p>
<h3 id="中传-2019-年计算机招生情况"><a href="#中传-2019-年计算机招生情况" class="headerlink" title="中传 2019 年计算机招生情况"></a>中传 2019 年计算机招生情况</h3><p>2020 似乎有大的变动，请耐心等待招生简章。</p>
<h4 id="学硕"><a href="#学硕" class="headerlink" title="学硕"></a>学硕</h4><p>计算机应用技术学硕招生简章招 12 人， 6 人推免， 6 人统招。<br>学硕（无游戏制作方向），分数线 315，数一英一数据结构与计算机网络。</p>
<p>但是推免只推了 4 个，所以最终实际录取统招人数为 8 人。</p>
<p>进复试的朋友一共有 14 人。故复试比例为 8/14 。</p>
<p>学硕（数字娱乐动画与技术方向）最后录取的最低分是 340 （没错，就是我。orz）（录了三人，另外两位为 340，357 ）。<br>（其他不太清楚，应该低一些。）</p>
<h4 id="专硕"><a href="#专硕" class="headerlink" title="专硕"></a>专硕</h4><p>今年专硕（即计算机技术）（含游戏制作方向）招生简章 20 人， 10 人推免， 10 人统招。</p>
<p>推免有 4 人，加之扩招，据某可靠消息称共招收了 33 人，进复试 57 人。</p>
<p>专硕分数线 300，数二英二程序设计（相当于只有数据结构）。<br>故专硕相对学硕可能竞争压力小些，可自行选择。</p>
<h3 id="中传考计算机难吗？"><a href="#中传考计算机难吗？" class="headerlink" title="中传考计算机难吗？"></a>中传考计算机难吗？</h3><p>……仁者见仁，智者见智。</p>
<p>上岸了就简单，沉了自然就难。</p>
<p>不过按历史趋势，中传计算机应用技术专业的复试分数线的确在历年上升，尤其是今年（2019）历史新高 <code>315</code>。<br>我觉得随着考研人数逐渐增多，日后可能还会愈加难。</p>
<p>而复试时间和复试结果都出来的非常非常晚，几乎没有调剂的机会，所以报考有风险，需谨慎。</p>
<h3 id="中传歧视双非吗？"><a href="#中传歧视双非吗？" class="headerlink" title="中传歧视双非吗？"></a>中传歧视双非吗？</h3><p>= =，我都上岸了，你说呢？</p>
<h3 id="需要提前联系导师吗？"><a href="#需要提前联系导师吗？" class="headerlink" title="需要提前联系导师吗？"></a>需要提前联系导师吗？</h3><p>实际上计算机学院的官网不知为何一直还打不开，老师们的联系方式也不得而知。所以应该找不了。</p>
<h3 id="是学长还是学姐？"><a href="#是学长还是学姐？" class="headerlink" title="是学长还是学姐？"></a>是学长还是学姐？</h3><p>嗯，男孩子。年长大家一年。（其实早上学一年，所以二战后应该和同届的学生一样大。理论上。）</p>
<h3 id="录取之后，档案寄送"><a href="#录取之后，档案寄送" class="headerlink" title="录取之后，档案寄送"></a>录取之后，档案寄送</h3><p>虽然官方通知上写的必须 EMS, 不过我们本地的人才市场说他们转交档案都是使用<a href="https://baike.baidu.com/item/机要邮寄" target="_blank" rel="noopener">机要邮寄</a>。<br>于是我打电话询问了学校的档案室，表示也是可以的。（所以就不用纠结了）</p>
<p>十天后可以打电话至中传档案室查询是否有收到。（电话在调档函上有）</p>
<h2 id="后记与鸡汤"><a href="#后记与鸡汤" class="headerlink" title="后记与鸡汤"></a>后记与鸡汤</h2><p>首先要有梦想，去做什么。</p>
<blockquote>
<p>当然我此次若是失败的话，应该也没有勇气三战了。</p>
</blockquote>
<p>其次不要害怕失败。</p>
<blockquote>
<p>江东子弟多才俊，卷土重来未可知。</p>
</blockquote>
<p>生如夏花</p>
<blockquote>
<p>生当作人杰，死亦为鬼雄。</p>
</blockquote>
<p>人生本该如此。</p>
<blockquote>
<p>此去泉台招旧部，旌旗十万斩阎罗。</p>
</blockquote>
<p>只是要有牺牲。</p>
<blockquote>
<p>鱼与熊掌，难以兼得。</p>
</blockquote>
<p>时刻充满希望。</p>
<blockquote>
<p>永远相信美好的事情即将发生。</p>
</blockquote>
<p>为自己而活。</p>
<p>与朋友们一起吃火锅吧，寻找生命的真谛。</p>
<hr>
<p>=w= 本人今日单方面声明，入此贴者，来日若作校友，欠我一顿火锅。</p>
]]></content>
      <tags>
        <tag>分享</tag>
        <tag>中传</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 CDN 加速你的 GitHub Pages 网站</title>
    <url>/2020/02/05/note/use-cdn-speed-up-site/</url>
    <content><![CDATA[<p>内容分发网络 Content Delivery Network</p>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>除去 WordPress, 许多博客网站是托管于 GitHub Pages 上的，但其在国内的速度实在是难以称道。<br>所以使用国内服务商的 CDN 对其进行加速不失为一个好办法。</p>
<blockquote>
<p>内容分发网络（Content Delivery Network，CDN）通过将站点内容发布至遍布全国的海量加速节点，使其用户可就近获取所需内容，避免网络拥堵、地域、运营商等因素带来的访问延迟问题，有效提升下载速度、降低响应时间，提供流畅的用户体验。</p>
</blockquote>
<p>曾经我使用的策略是在国内托管 <a href="https://coding.net/" target="_blank" rel="noopener">Coding Pages</a>，以及为了让百度能抓取到博客内容，还做了一番配置。</p>
<blockquote>
<p><a href="https://yunyoujun.cn/note/baidu-seo-about-github-pages/" target="_blank" rel="noopener">让百度收录你的 GitHub Pages 博客</a></p>
</blockquote>
<p>但是 Coding 的服务并不稳定，且经常变动一些策略。<br>现在更是下线整合到静态部署中，且似乎因为 API 的问题实名认证总是不能通过，暂时都无法使用。</p>
<p>所以便干脆使用 CDN 来进行加速。并且也可以轻松被百度抓取了。</p>
<p>因为我域名购置于腾讯云，且腾讯云 CDN 每月赠送免费 10G 流量。<br>所以我直接采用腾讯云的 CDN 来实现。</p>
<blockquote>
<p>注意：域名需要备案（按需签发 SSL 证书）</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>首先开通<a href="(https://cloud.tencent.com/product/cdn)">腾讯云 - 内容分发网络</a>。</p>
<h3 id="添加自己的域名"><a href="#添加自己的域名" class="headerlink" title="添加自己的域名"></a>添加自己的域名</h3><p><img src="https://i.loli.net/2020/03/25/gRyuXZCW5GHvKqx.png" alt="add-domain-for-cdn.png" loading="lazy"></p>
<h3 id="设置源站"><a href="#设置源站" class="headerlink" title="设置源站"></a>设置源站</h3><p>管理 &gt; 基本配置</p>
<p><img src="https://i.loli.net/2020/03/02/BfyolAHcKxhw27i.png" alt="config-source-site.png" loading="lazy"></p>
<p>这里是 GitHub Pages 提供的 IP 地址，可以添加多行。</p>
<blockquote>
<p><a href="https://help.github.com/en/github/working-with-github-pages/about-custom-domains-and-github-pages" target="_blank" rel="noopener">About custom domains and GitHub Pages</a></p>
</blockquote>
<hr>
<blockquote>
<p>可选：建议前往 <code>高级配置</code> 开启 HTTPS 配置</p>
</blockquote>
<h3 id="回源协议"><a href="#回源协议" class="headerlink" title="回源协议"></a>回源协议</h3><p>证书管理 &gt; 编辑 &gt; 协议跟随 (如果没开启 HTTPS，默认的 HTTP 也可以。)</p>
<p><img src="https://i.loli.net/2020/03/25/5BlPUpMfO3DxXCH.jpg" alt="set-back-source-protocol.jpg" loading="lazy"></p>
<h3 id="设置-CNAME"><a href="#设置-CNAME" class="headerlink" title="设置 CNAME"></a>设置 CNAME</h3><p>前往 <a href="https://console.cloud.tencent.com/cns" target="_blank" rel="noopener">域名解析</a></p>
<p>根据需要将 CDN 提供的 CNAME 线路类型设置为 <code>境内</code>。<br><code>境外</code> 则仍默认解析回 GitHub Pages。</p>
<p><img src="https://i.loli.net/2020/03/25/Pw3257VtjLFqGNQ.png" alt="set-different-cname-for-domain.png" loading="lazy"></p>
<h3 id="配置缓存"><a href="#配置缓存" class="headerlink" title="配置缓存"></a>配置缓存</h3><p>默认的缓存时间非常长，不配置的话就会导致 CDN 的文件长时间没有更新。</p>
<p>可以参见腾讯云文档 <a href="https://cloud.tencent.com/document/product/228/2968#.E7.BC.93.E5.AD.98.E9.85.8D.E7.BD.AE.E9.97.AE.E9.A2.98" target="_blank" rel="noopener">缓存配置问题</a></p>
<p>也可以在 <a href="https://console.cloud.tencent.com/cdn/refresh" target="_blank" rel="noopener">刷新预热</a> 处手动刷新。</p>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>测试发现首页基本可以秒开，速度确实不错。<br>至于流量万一不够用怎么办，emm，大概等这里真有这么大访问量的时候，就不至于还要在这样各处薅羊毛了吧。</p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="CNAME-与-MX-记录冲突导致邮件丢失"><a href="#CNAME-与-MX-记录冲突导致邮件丢失" class="headerlink" title="CNAME 与 MX 记录冲突导致邮件丢失"></a>CNAME 与 MX 记录冲突导致邮件丢失</h3><p>值得注意的是，设置 CDN 的方式是使用 CNAME 重定向到 CDN 域名。<br>如果你同时将裸域名（yunyoujun.cn）作为博客域名和域名邮箱（比如我的邮箱：<a href="mailto:me@yunyoujun.cn">me@yunyoujun.cn</a>），那么你可能会遇到 CNAME 与 MX 记录冲突问题。</p>
<p>如果你的运营商没有这么提示你，那也最好不要这么做，因为这会导致域名邮箱发生邮件丢失。</p>
<p>在过去解析尚未规范时，部分运营商是允许同时在裸域名上设置 CNAME 和 MX 记录的。<br>但如今按照 RFC 标准协议，CNAME 优先级最高，所以在解析请求过程中，会优先返回 CNAME 解析记录结果。<br>这样设置的结果就是导致无法解析到用户设置的 MX 记录（设置权重也没有用），影响邮箱的正常收发。</p>
<p>现在，大部分运营商会提示 CNAME 与 MX 记录发生冲突，来避免这种情况。</p>
<blockquote>
<p>更多信息请参阅 <a href="https://www.rfc-editor.org/rfc/rfc1034.txt?spm=a2c4g.11186623.2.13.59ef4054LkHX23&file=rfc1034.txt" target="_blank" rel="noopener">RFC1034</a> 和 <a href="https://www.rfc-editor.org/rfc/rfc2181.txt?spm=a2c4g.11186623.2.14.59ef4054LkHX23&file=rfc2181.txt" target="_blank" rel="noopener">RFC2181</a>。<br><a href="https://help.aliyun.com/knowledge_detail/39787.html#h2-u8BB0u5F55u51B2u7A81u7684u89C4u52193" target="_blank" rel="noopener">记录冲突的规则</a></p>
</blockquote>
<p>我此前之所以使用 GitHub Pages 托管，却仍然能够使用域名邮箱，是因为我使用了 GitHub 提供的 A 记录解析。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site" target="_blank" rel="noopener">Managing a custom domain for your GitHub Pages site</a></p>
</blockquote>
<p>而如今加了 CDN 又回到了这一两难的局面。</p>
<p>最后想着长痛不如短痛，下定决定将博客主域名更换为 <code>www.yunyoujun.cn</code>。</p>
<p>裸域名仍旧使用 A 记录和 MX 记录。<br>设置 A 记录的作用是用户访问 <code>yunyoujun.cn</code> 时（GitHub Pages 的 CNAME 文件提前设置为 <code>www.yunyoujun.cn</code>），那么 GitHub Pages 会自动从 <code>yunyoujun.cn</code> 跳转为 <code>www.yunyoujun.cn</code>。</p>
<p>此外，谷歌浏览器会自动隐藏 www 域名前缀，所以一定程度上减少观感的影响。</p>
<p>以及我发现一些企业的网站都采取的裸域名跳转 www 域名的方式。</p>
<p>譬如：</p>
<ul>
<li>语雀：<a href="https://yuque.com" target="_blank" rel="noopener">https://yuque.com</a>,</li>
<li>JetBrains（著名的 IDE 软件开发商）：<a href="https://jetbrains.com" target="_blank" rel="noopener">https://jetbrains.com</a>（我在几年前的视频里发现他们留的还是裸域名的网址，而现在则是跳转 www 链接。）</li>
</ul>
<p>当然如果你对域名邮箱没有需求，且域名非常短又很酷，使用裸域名也并非不可。</p>
<hr>
<p>此外还有一种解决方案就是 <a href="https://support.cloudflare.com/hc/en-us/articles/200169056-CNAME-Flattening-RFC-compliant-support-for-CNAME-at-the-root" target="_blank" rel="noopener">CNAME Flattening</a>。</p>
<p>有些服务商（如 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a>、<a href="https://www.cloudxns.net/" target="_blank" rel="noopener">CloudXNS</a>）可以直接将 CNAME 解析为对应的 A 记录（IP 地址），这时在裸域名上设置 CNAME 就相当于设置 A 记录。</p>
<p>以往腾讯云允许 CNAME 与 MX 并存，再然后提示冲突不允许，到了现在又可以同时设置了。但最好是一次性可以解析到 A 记录的 CNAME。</p>
<p>我尝试在 www 域名上加了 CNAME 开启了 CDN，裸域名 CNAME 到 www，就会影响邮箱。<br>这时的路径就相当于：<code>@ -&gt; www(CNAME) -&gt; cdn(CNAME) -&gt; A</code>。可能无法使用 CNAME Flattening 。</p>
<p>而直接 CNAME 到 GitHub Pages 时，邮箱网址都可以正常工作。<code>@ -&gt; GitHub Pages(CNAME) -&gt; A</code></p>
<blockquote>
<p>PS. 怎么感觉自己最近说话都有点翻译腔了。</p>
</blockquote>
<h3 id="CDN-刷新"><a href="#CDN-刷新" class="headerlink" title="CDN 刷新"></a>CDN 刷新</h3><p>有了 CDN，这也意味着你的页面可能会因此延迟更新（对于用户来说）。</p>
<p>因此，CDN 往往提供了刷新预热功能。譬如指定 URL 或者目录进行更新。</p>
<p>其实延迟的一会儿也不算是什么事，遇到着急的链接手动去控制台刷新即可。<br>但说实话，每次登陆到网站上操作着实有些浪费时间。<br>那么不如考虑一下命令行工具。</p>
<blockquote>
<p>需要 Python &amp; pip</p>
</blockquote>
<ul>
<li><a href="https://cloud.tencent.com/document/product/440/39027" target="_blank" rel="noopener">腾讯云命令行工具 TCCLI</a></li>
<li><a href="https://cloud.tencent.com/document/product/440/34011" target="_blank" rel="noopener">安装 TCCLI</a>：介绍如何安装 TCCLI。</li>
<li><a href="https://cloud.tencent.com/document/product/440/34012" target="_blank" rel="noopener">配置 TCCLI</a>：介绍在开始使用 TCCLI 之前，需要完成 TCCLI 的初始化配置。</li>
<li><a href="https://cloud.tencent.com/document/product/440/34013" target="_blank" rel="noopener">使用 TCCLI</a>：介绍如何使用 TCCLI 创建云服务器及相关使用说明。</li>
<li><a href="https://cloud.tencent.com/document/product/440/34015" target="_blank" rel="noopener">使用高级功能</a>：介绍 TCCLI 的高级功能，例如多版本接口访问、返回结果过滤等。</li>
</ul>
<p>Example:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意这里的参数是 Array</span></span><br><span class="line"><span class="comment"># 刷新目录</span></span><br><span class="line">tccli cdn PurgePathCache --Paths <span class="string">'["https://www.yunyoujun.cn/links/"]'</span> --FlushType flush</span><br><span class="line"><span class="comment"># 刷新链接</span></span><br><span class="line">tccli cdn PurgeUrlsCache --Urls <span class="string">'["https://www.yunyoujun.cn/links/index.html"]'</span></span><br></pre></td></tr></table></figure>

<h4 id="PurgePathCache"><a href="#PurgePathCache" class="headerlink" title="PurgePathCache"></a>PurgePathCache</h4><p>PurgePathCache 用于批量提交目录刷新，根据域名的加速区域进行对应区域的刷新。<br>默认情况下境内、境外加速区域每日目录刷新额度为各 100 条，每次最多可提交 20 条。</p>
<p><strong>–Paths</strong><br>目录列表，需要包含协议头部 <code>http://</code> 或 <code>https://</code></p>
<p><strong>–FlushType</strong><br>刷新类型</p>
<ul>
<li>flush：刷新产生更新的资源</li>
<li>delete：刷新全部资源</li>
</ul>
<h4 id="PurgeUrlsCache"><a href="#PurgeUrlsCache" class="headerlink" title="PurgeUrlsCache"></a>PurgeUrlsCache</h4><p>PurgeUrlsCache 用于批量提交 URL 进行刷新，根据 URL 中域名的当前加速区域进行对应区域的刷新。<br>默认情况下境内、境外加速区域每日 URL 刷新额度各为 10000 条，每次最多可提交 1000 条。</p>
<p><strong>–Urls</strong><br>URL 列表，需要包含协议头部 <code>http://</code> 或 <code>https://</code></p>
<h2 id="后后话"><a href="#后后话" class="headerlink" title="后后话"></a>后后话</h2><h3 id="2020-03-26"><a href="#2020-03-26" class="headerlink" title="2020-03-26"></a>2020-03-26</h3><p>因为不知腾讯云 CDN 为何挂了，转为使用 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a> 了，自动 Flattening。</p>
<blockquote>
<p>后发现不是腾讯云的问题，是 GitHub Pages 的 HTTPS 证书被劫持了。<a href="https://www.v2ex.com/t/656367" target="_blank" rel="noopener">Github pages 的 HTTPS 是不是出问题了？</a></p>
</blockquote>
<p>既然已经更改为 <code>www</code> 主域名，也还是继续使用裸域名跳转 <code>www</code> 的策略吧。</p>
<h3 id="2020-04-17"><a href="#2020-04-17" class="headerlink" title="2020-04-17"></a>2020-04-17</h3><p>开始使用又拍云 CDN，申请了 <a href="https://www.upyun.com/league" target="_blank" rel="noopener">又拍云联盟</a>，拿到了代金券。</p>
<p>后来到了五月，发现百度索引竟然所剩无几。原本还以为国内 CDN （此前的腾讯云确实可以）会被收录的。</p>
<p>测试发现百度 <a href="https://ziyuan.baidu.com/crawltools/index?site=https://www.yunyoujun.cn/" target="_blank" rel="noopener">抓取诊断</a> 抓取失败时错误信息为 <code>拒绝访问</code>。</p>
<p>难不成时又拍云的一些 CDN 点也禁止百度抓取了？</p>
<p>我不断对抓取的 IP 进行报错，百度抓取诊断就会换一个 IP 抓，于是乎排除掉一些拒绝访问的 IP，有些 IP 倒是可以抓取成功了。</p>
<h3 id="2020-05-24"><a href="#2020-05-24" class="headerlink" title="2020-05-24"></a>2020-05-24</h3><p>但却并非如此，索引量仍旧在下降，我提交了又拍云工单，客服反馈是回源访问时源站本身便是 403 拒绝访问。（但我正常访问均正常。）</p>
<p>所以我猜想的是又拍云部分 CDN IP 有缓存时，所以回抓取成功，而其他 IP 无缓存时，则会回源，回源的过程中没有过滤百度爬虫的 User Agent，所以回源 GitHub Pages 仍旧会被拒绝。</p>
<p>此后我开启了又拍云的源站资源迁移，即可将源站静态资源无缝迁移到又拍云存储，当客户端下次访问相同的资源时，无需回用户自主源。</p>
<p>随后过了几天，索引量果然回升了……</p>
]]></content>
      <categories>
        <category>云游的小笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>CDN</tag>
        <tag>GitHub Pages</tag>
      </tags>
  </entry>
  <entry>
    <title>太空</title>
    <url>/2016/09/20/creation/novel/outer-space/</url>
    <content><![CDATA[<p>小时候，我便听得空气是无色无味的，看不到也摸不着，就像是不曾存在。可我们离开了它便活不下去，就像去往头顶上的太空，那里什么都没有，会空虚的让我们窒息。哦不，也不是什么都没有，也许会有些长着四肢身躯庞大的外星人窥伺着将我们宰杀。</p>
<p>但即便如此，我还是向往太空，那里有白日中的阳光与夜幕下的星点。<a id="more"></a>只是父母一再告诉我，太空很危险，而且那里没有空气我也活不下去，但我还是想去，哪怕只是看看。我没有那些跃入太空的宇航员的体魄，便只得退而求其次。</p>
<p>当然，那是一个古老的传说，每到一些日子，就会有通往太空的绳子降临世间，只要抓住它，它就会带你前往太空。只不过，所有离开的勇士们都再也没有回来过。</p>
<p>或许是天意，我见到它了，见到它第一眼，我就觉得那是我命中注定的绳子，带我前往茫茫太空的命运之绳，也许是幻觉，那上面像是还带着我最喜爱的零食。</p>
<p>犹豫再三，我决定摆动这一尾巴，为了自己的梦想。</p>
<p>有点痛，我咬住它的第一感觉。</p>
<p>但很快，我被迅速向上拖动，要来了。太空，果然连空气什么的都没有，我要窒息了。不知是不是窒息引起的幻觉，我开始看到庞大身躯的外星人在狂笑，阳光刺的我身体发烫并企图带走我身边最后一丝空气。</p>
<p>我想，大概，我要死了。</p>
<p>以一只怀揣梦想的鱼儿的身份。</p>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>微</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
      </tags>
  </entry>
  <entry>
    <title>小说连载初尝试-《阿庫娅的星球》</title>
    <url>/2017/07/10/creation/novel/planet-of-aqua/</url>
    <content><![CDATA[<p>=w=,第一次尝试着写一下连载小说。（<del>大概很难善终</del>）<br>其实尝试动机也有着各种不甘心的缘故，但还是不多说了。</p>
<blockquote>
<p><a href="https://www.8kana.com/book/14511.html" target="_blank" rel="noopener">《阿庫娅的星球》</a></p>
</blockquote>
<p>此前尝试在 8kana 连载，不过毅力有限，已经好久没有更新了。（2017.4.28-2017.5.28）<br>以后会逐步搬运到这边，有空的话（<del>大概会有？</del>）就写一点吧。</p>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>连</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
      </tags>
  </entry>
  <entry>
    <title>教你如何从零开始搭建一个属于自己的网站</title>
    <url>/2020/03/05/share/how-to-build-your-site/</url>
    <content><![CDATA[<blockquote>
<p>写给想要拥有一个自己的网站但没有资金成本的小白与曾经的自己。</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽说是网站，对于个人来说，或许一般叫作博客。<br>但我不希望它仅仅是一个博客，而是能够成为一个处于自己现实生活之外、自由、实验、不用畏惧他人眼光甚至可以独断专行的地方。</p>
<a id="more"></a>

<p>当然，这本质还是一个新手向教程，也许会有点科普的感觉。<br>我会从整体上对搭建网站的流程和使用到的技术及步骤进行介绍（因为要铺开讲，倘若包括轶事，实在太多太杂，我也会点到为止），并让你明白这个东西在网站的过程中起到什么样的作用。<br>但我不会就细枝末节展开叙述，譬如如何注册账号、安装时如何点击下一步。<br>我希望看完此篇文章后，此前对此方面知识一无所知的小白，到最后也能搭建出一个属于自己的站点。（前提是认识基础的英语单词和善用搜索引擎）</p>
<p>已经有所基础的同学大可跳读或者直接关闭。</p>
<blockquote>
<p>注释处多为相关补充说明，对正常流程没有影响，若没有兴趣，可以略过。</p>
</blockquote>
<p>与文章相关疑问都可在本文章的 GitHub Issues 中进行评论，其他疑问可到对应项目或文章下评论。</p>
<p>我会尽可能保持更新该文章所使用到的技术和做法，并随时接受勘误。</p>
<h3 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h3><ul>
<li>Hexo</li>
<li>静态博客</li>
<li>无服务器</li>
<li>GitHub Pages</li>
<li>hexo-theme-yun（私货）</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><blockquote>
<p><strong>什么是 Node.js ？</strong><br>这得从什么是 JS 说起，JS 也就是 JavaScript。（为什么有种从盘古开天辟地开始的感觉）没错，JavaScript 就是网页的盘古。JavaScript 是一种编程语言，我们所见到的网页中的交互和逻辑处理几乎都是由 JavaScript 完成。<br>JavaScript 语法简单，易学易用。（当然也请不要小瞧它，虽然它入门门槛低，但上限同样也很高。包括但不限于实现网站前后端，手机桌面应用程序，机器学习，计算机图形学等。）<br>在 Node.js 诞生前，JavaScript 都运行于浏览器端。也就是说，它是鱼，浏览器是装满了水的水缸。<br>2008 年，Chrome V8 诞生。2009 年，Node.js 诞生。并成为 GitHub 早期最著名的开源项目。GitHub 可能大家已有所了解，后续再说。<br>Node.js 便是一个基于 Chrome V8 引擎的 JavaScript 运行环境。（当年第一次看到这句话时，我也一脸懵逼。）按照我的理解，JavaScript 是鱼，Chrome V8 就是抽水机，Node.js 则把这台抽水机也装在你电脑上。于是你的电脑也有了 Node.js 这个和浏览器相似的水缸，也可以在里面运行 JavaScript 了！<br>当然 Node.js 和浏览器端还是因为自身定位和一些历史原因而有些许区别的，不再展开。<br><a href="https://baike.baidu.com/item/node.js/7567977" target="_blank" rel="noopener">Node.js | 百度百科</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">JavaScript | MDN</a></p>
</blockquote>
<p><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">下载｜ Node.js</a></p>
<p>建议下载<strong>长期支持版</strong>而非<strong>当前发布版</strong>（因为如果是最新版，容易出现一些奇妙的 bug）。</p>
<p>全部默认下一步进行安装。</p>
<p>Windows 打开命令提示符，macOS 打开终端。（= =，这个不会就请百度吧。）<br>Linux 用户右上角关闭本标签页。</p>
<p>后续如提到输入命令，均默认指打开终端进行输入。</p>
<p>输入 <code>node --version</code>，如果得到的版本号与你方才安装的一致，那么 Node.js 就已经成功安装。</p>
<blockquote>
<p>Node.js 安装成功时也默认安装了 <code>npm</code>，在此后将会用到。<br><code>npm</code> 是随 Node.js 一起被安装的包管理工具，你可以理解成 Node.js 自带的应用商店。</p>
</blockquote>
<p>对了，国内使用 npm 可能很慢。</p>
<p><strong>你可以考虑切换为 <code>taobao</code> 镜像源。</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.yuque.com/yunyoujun/notes/npm-and-yarn#nrm" target="_blank" rel="noopener">npm &amp; yarn 常用包与命令</a></p>
</blockquote>
<h3 id="Git-与-GitHub"><a href="#Git-与-GitHub" class="headerlink" title="Git 与 GitHub"></a>Git 与 GitHub</h3><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><blockquote>
<p>Visual Studio Code，简称 VS Code。<br>目前最为强大易用的编辑器，轻量且快速。（<del>宇宙第一编辑器</del>）<br>注意：它并不是我们常常听到的 VS，VS 常常指的是 Visual Studio，是一个功能强大的 IDE（集成开发环境），体积也相比 VS Code 都要大上一个量级。</p>
</blockquote>
<p>在此之前，我建议你先安装 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a>。因为安装 Git Bash 时，可以设置 VS Code 作为默认编辑器。</p>
<blockquote>
<p>Git 是一个开源的分布式版本控制系统，由 Linus Torvalds（同时也是 Linux 的作者）为了管理 Linux 开发而开发。<br>简而言之，是一个版本管理工具。譬如设计师设计好了第三版的海报，客户却说还是要第一版吧，这时便可以通过 Git 快速回退到最初的版本。<br>你只需要把每次更改的状态（Git 会自动进行检测，你只要掌握基础的几条命令就可以了）告诉 Git，而不需要每个版本都保存一份压缩包，既方便也能大大节约空间。<br>（当然这主要只对代码文本起作用，因为 Git 的本质是记录各行代码的增减，倘若是像视频、海报这类二进制文件来说便体现不出丝毫优势了。当然想要应对这种场景还有 <a href="https://git-lfs.github.com/" target="_blank" rel="noopener">Git LFS</a>。）</p>
</blockquote>
<p>下载 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> 并安装（如果国内速度太慢，可以试试<a href="https://pc.qq.com/detail/13/detail_22693.html" target="_blank" rel="noopener">这里</a>）</p>
<p>macOS 用户可以下载官网的安装包进行安装，也可以直接安装 App Store 的 Xcode（附带会安装 Git，但是比较大）。</p>
<blockquote>
<p>类似的工具还有：SVN。但始终更推荐 Git，因为它功能更为强大且它的背后还有更强大的生态：GitHub。</p>
</blockquote>
<h4 id="注册-GitHub"><a href="#注册-GitHub" class="headerlink" title="注册 GitHub"></a>注册 GitHub</h4><p>这一部分内容，你也可以放到本地调试并预览成功后并打算线上部署的时候，再回过头来看。</p>
<blockquote>
<p>GitHub 一听便与 Git 有所渊源。<code>Git</code> 在英文中是懒人、饭桶之意。<code>Hub</code> 则是中心、集线器的意思。譬如 USB 集线器就是 USB Hub。所以 GitHub 就是饭桶中心（<del>大雾</del>）。<br>GitHub 是全世界最大的开源项目与代码托管平台，也是众多开发者的交流场所。<del>还是全球最大的同性交友网站</del>。<br>而代码托管本身用到的正是上文提到的 Git 技术。</p>
</blockquote>
<p>注册 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 账号。（虽然都是英文，但不必畏惧，也并不会造成使用障碍，只要记得最常用的选项含义即可，以及善用手头的翻译软件。）</p>
<blockquote>
<p>注意：注册时的英文用户名将成为你可以使用的免费域名前缀。</p>
</blockquote>
<p>登录 GitHub。</p>
<blockquote>
<p>为什么要用 GitHub？<br>对于平民玩家来说，在初次尝试建立自己的网站时，也许并不会有闲钱或者说决心来购买自己的服务器与域名。<br>而 GitHub 则提供了 <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 这一服务。<br>用户们可以利用这一服务，部署自己的静态站点。</p>
</blockquote>
<p>点击右上角的 <code>+</code> -&gt; <code>New repository</code> 新建仓库。</p>
<p><img src="https://i.loli.net/2020/03/05/pDZtlgQsLTb9k13.png" alt="QQ20200305-221806@2x.png" loading="lazy"></p>
<blockquote>
<p>我这里因为已经有同名仓库，所以提示了重复。</p>
</blockquote>
<p>仓库名称务必为 <code>你的用户名.github.io</code>，用户名是英文，大小写无所谓，但建议统一小写。（因为你会发现时常切换大小写很麻烦）</p>
<blockquote>
<p>为什么必须这个作为仓库名？<br>GitHub Pages 服务的命名规范，同时它也将成为你的专属域名。当然，你也可以购置自己的专属域名并用它来提供内容。</p>
</blockquote>
<p>点击 <code>Create repository</code>。</p>
<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p><a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a></p>
<ul>
<li>GitHub: <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></li>
<li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a>（直接参考文档也是一个不错的选择）</li>
</ul>
<blockquote>
<p><strong>为嘛使用 Hexo ？</strong><br>Hexo 是一个快速、简洁而强大的博客框架，基于 Node.js，同样托管于 GitHub 之上。生态中拥有众多插件主题。你可以基于它快速生成一些静态页面。<br>你可以使用别人的各种主题与插件，也可以自己定制开发想要的功能。<br><strong>为什么不是…?</strong><br>其他常用的博客框架还有 <a href="https://wordpress.org/" target="_blank" rel="noopener">WordPress</a>，<a href="https://typecho.org/" target="_blank" rel="noopener">Typecho</a>，<a href="https://ghost.org/" target="_blank" rel="noopener">Ghost</a> 等，但这些往往都需要购置自己的服务器，而无法静态化地部署到 GitHub Pages 上。（当然，相应的功能和灵活性也大大提升。）静态化站点还有一个优势就是访问速度往往更快。<br>静态网站生成器还有 <a href="https://vuepress.vuejs.org/" target="_blank" rel="noopener">Vuepress</a>，<a href="https://www.gatsbyjs.org/" target="_blank" rel="noopener">Gatsby</a> 等。但这些多是为了写文档而量身定制的，你也可以使用它们，但是相较 Hexo 的博客定位，它们关于博客的插件和主题以及解决办法会少得多。<br>Hexo 提供的功能与 <a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo</a> 几乎都有，（生成大量文件时，甚至比 Hexo 更快）不过它是基于 GO 语言。日后你想对自己的网站进行自定义，即便是 Hugo，你编写前端的交互仍旧需要使用 JavaScript，所以选择基于 JavaScript 的 Hexo 可以降低学习成本。（你若对 GO 有兴趣，仍然可以尝试使用 Hugo，但本教程将不会针对 Hugo 进行展开。）<br>所以对于新手来说，使用 Hexo 作为起始点，不失为一个好选择。（当然如果你有钱租服务器，并希望快速上手的话，就可以考虑考虑 WordPress 或者 Typecho）<br>这里顺带推荐一下小伙伴 <a href="https://asuhe.jp/" target="_blank" rel="noopener">染川瞳</a> 的 WordPress 主题 <a href="https://github.com/mirai-mamori/Sakurairo" target="_blank" rel="noopener">Sakurairo</a>，<a href="https://guhub.cn/" target="_blank" rel="noopener">阔落</a> 的 Typecho 主题 <a href="https://github.com/BigCoke233/miracles" target="_blank" rel="noopener">miracles</a>，都是很漂亮的主题。</p>
</blockquote>
<p>在终端中输入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"><span class="comment"># 如果安装失败，可能是没有权限，可以尝试头部加上 sudo 重新执行</span></span><br><span class="line"><span class="comment"># sudo npm install hexo-cli -g</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>install</code> 自然是安装。<br><code>hexo-cli</code> 则是 <code>hexo</code> 的终端工具，可以帮助你生成一些模版文件，之后再用到。<br><code>-g</code> 代表的是全局安装。也就是在任何地方都可以使用，否则会只能在安装的目录下使用。</p>
</blockquote>
<p>此时，请先通过 <code>cd</code> 进入你本地电脑打算存储网站代码的文件夹目录。（或者右键文件夹 Git Bash Here）</p>
<blockquote>
<p><a href="https://baike.baidu.com/item/cd/3516393" target="_blank" rel="noopener">cd | DOS 命令</a><br><a href="https://baike.baidu.com/item/cd/3516411" target="_blank" rel="noopener">cd （LINUXSHELL 命令）</a></p>
</blockquote>
<p>譬如：</p>
<blockquote>
<p>注意：这里是你自定义的目录，请不要复制粘贴</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># '#' 字符后的文字代表注释，不需要输入</span></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="built_in">cd</span> C:\Users\YunYou\Documents\GitHub\</span><br><span class="line"><span class="comment"># macOS</span></span><br><span class="line"><span class="comment"># cd /Users/yunyou/github/</span></span><br></pre></td></tr></table></figure>

<p>接下来输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init 你的名字.github.io</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>hexo</code> 正是因为我们之前安装了 <code>hexo-cli</code> 这一个包，所以我们可以在终端中使用 <code>hexo</code> 这一命令。<br><code>init</code> 初始化博客的模版文件。后面跟的是你要新建的文件夹，最好和你此前新建的仓库名一致。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入你的博客文件夹</span></span><br><span class="line"><span class="built_in">cd</span> 你的名字.github.io</span><br><span class="line"><span class="comment"># 默认安装所有 `package.json` 文件中提到的包</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 你也可以缩写成 hexo s</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p><code>server</code> 代表开启本地的 Hexo 服务器，这时你就可以打开浏览器，在地址栏中输入 <code>localhost:4000</code> 就可以看到本地的网页了。</p>
<p>按 <code>Ctrl + C</code> 中断服务器的运行。</p>
<p>至此，基础的模版页面便已经搭建好了。</p>
<h4 id="使用-Hexo-主题"><a href="#使用-Hexo-主题" class="headerlink" title="使用 Hexo 主题"></a>使用 Hexo 主题</h4><p>Hexo 默认提供的是 <a href="https://github.com/hexojs/hexo-theme-landscape" target="_blank" rel="noopener">hexo-theme-landscape</a> 主题。<br>默认主题样式简单，功能较少。所以大多数人并不会使用默认主题。</p>
<p>这里将示范如何使用我自己开发的主题 <a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">hexo-theme-yun</a>。</p>
<p><a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener"><img src="https://img.shields.io/github/stars/YunYouJun/hexo-theme-yun?style=social" alt="GitHub stars" loading="lazy"></a></p>
<blockquote>
<p>_(:з」∠)_ 顺带求 Star，代表收藏，就在点进链接后的右上角。</p>
</blockquote>
<p>你可以前往 <a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">云游君的小站</a> 查看示例效果。</p>
<p>Hexo-Theme-Yun 的速度检测</p>
<p><img src="https://i.loli.net/2020/03/12/cUIuDPJfo379ZOk.png" alt="pagespeed-insights-score.png" loading="lazy"><em>谷歌 <a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">PageSpeed Insights</a></em></p>
<p><img src="https://i.loli.net/2020/03/08/DhfLu5yngb7NZE2.png" alt="Audits - Lighthouse" loading="lazy"><em>谷歌浏览器 Audits - Lighthouse 检测分数</em></p>
<p>当然，你也可以在 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Themes | Hexo</a> 发现更多有趣美丽的主题。使用方法大致相同。<br>当你具备一定开发能力时，你可以开发属于自己的主题，或者为 hexo-theme-yun 提交 <a href="https://github.com/YunYouJun/hexo-theme-yun/pulls" target="_blank" rel="noopener">PR</a> 添加你想要的功能。</p>
<ul>
<li><a href="https://github.com/YunYouJun/hexo-theme-yun" target="_blank" rel="noopener">hexo-theme-yun - GitHub</a></li>
<li><a href="https://yun.yunyoujun.cn" target="_blank" rel="noopener">hexo-theme-yun 使用文档</a>：更详细的配置进阶指南。</li>
<li><a href="https://www.yunyoujun.cn" target="_blank" rel="noopener">示例效果</a></li>
</ul>
<h5 id="下载-Hexo-主题"><a href="#下载-Hexo-主题" class="headerlink" title="下载 Hexo 主题"></a>下载 Hexo 主题</h5><p>进入终端（确保路径处于你此前使用 Hexo 初始化好的文件夹目录下，即 <code>xxx.github.io</code>，后简称为 <code>Hexo 目录</code>），输入以下命令。</p>
<blockquote>
<p>实际上你也可以直接在 VS Code 中使用终端。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/YunYouJun/hexo-theme-yun themes/yun</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里便使用到了我们此前安装的 Git，<code>git clone</code> 即代表克隆（也就是复制的作用）我的主题（托管于 GitHub，链接便是主题所在的地址），<code>themes/yun</code> 则代表放在你 Hexo 文件夹下的 <code>themes/yun</code> 文件夹里（没有该文件夹会自动新建）。</p>
</blockquote>
<h5 id="编辑-Hexo-配置"><a href="#编辑-Hexo-配置" class="headerlink" title="编辑 Hexo 配置"></a>编辑 Hexo 配置</h5><blockquote>
<p>右键文件夹使用 VS Code 打开，或者进入 VS Code 打开你存储网站的文件夹。此后操作都将默认你已处于该工作目录下。</p>
</blockquote>
<p>在你此前通过 Hexo 初始化生成的文件目录下，会存在一个 <code>_config.yml</code> 文件。</p>
<blockquote>
<p><code>yml</code> 是 <a href="https://baike.baidu.com/item/YAML/1067697" target="_blank" rel="noopener">YAML</a> 文件的后缀名，YAML 是 “YAML Ain’t a Markup Language”（YAML 不是一种标记语言） 的缩写，但它实际上还是一种标记语言。你可以将其理解为存储数据的一种文本格式，这也是其诞生的目的。 如果你听说过 JSON，那你就更能明白它是干什么的了。</p>
</blockquote>
<p>它是 Hexo 的配置文件，关于各配置选项的意义你可以查看 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置 | Hexo</a>。</p>
<p>在 <code>_config.yml</code> 中找到 <code>theme</code> 这个字段，将其后的 <code>landscape</code> 修改为 <code>yun</code>。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">yun</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>pug 是一种模板引擎，可以渲染为 HTML 字符串。类似的还有 ejs，swig 等，语法和设计理念有所不同。<br>stylus 是一种 CSS 预处理器，可以渲染为 CSS。类似的还有 scss，less，同样只是语法和设计理念有所差异。</p>
</blockquote>
<p>由于我的主题使用了 pug 和 stylus，而 Hexo 自带的一般是 ejs 与 stylus，所以你可能还需要输入以下命令安装渲染器。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-render-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p>这时再像此前那般使用 <code>hexo server</code> 重新启动服务器，你就可以看到一个不一样的主题风格的页面了。</p>
<h5 id="自定义主题配置"><a href="#自定义主题配置" class="headerlink" title="自定义主题配置"></a>自定义主题配置</h5><p>当启动时，会使用主题的默认配置。但这不一定是你想要的。<br>所以你可以对主题进行一些自定义。</p>
<p>主题的配置文件放在 <code>themes/yun/_config.yml</code> 文件中。<br>且慢，你<strong>最好不要直接修改主题的默认配置</strong>。倘若日后主题升级更新了怎么办，难道还要重新配置一遍吗？</p>
<p>最好的解决方案就是在博客根目录下（不是主题目录）新建 <code>source/_data/yun.yml</code>。（若 <code>source/_data</code> 目录不存在，请新建）</p>
<p>本主题将自定义配置与默认配置进行合并，因此你只需要在 <code>yun.yml</code> 文件中自定义你需要的配置即可，其余仍将自动采用默认配置。</p>
<p>譬如我们需要更换头像。在 <code>yun.yml</code> 中填写。</p>
<blockquote>
<p>你可以在 <code>source</code> 文件夹下新建 <code>images</code> 文件夹，用来存储你的图片。<br>也可以使用 <a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a> 等图床工具上传你的图片文件，获取在线链接。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span> <span class="comment"># 你的头像图片地址</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>更换主题色彩，比如换成黑色，黑色的十六进制颜色代码是 <code>#000000</code>。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">colors:</span></span><br><span class="line">  <span class="attr">primary:</span> <span class="string">"#000000"</span></span><br></pre></td></tr></table></figure>

<p>这时你的主题色调就会变为黑色。</p>
<p>这只是一个配置项的简单示例，更多配置你可以参考 <a href="https://yun.yunyoujun.cn" target="_blank" rel="noopener">Yun 主题文档</a> 或直接在 <code>theme/yun/_config.yml</code> 中查看，并根据自己的需要进行配置。</p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>至今我们的工作都是在本地进行，想必你也很想放到线上与小伙伴们分享。<br>这便轮到了 GitHub Pages 的出场，不过 GitHub Pages 只支持纯静态文件。</p>
<p>所以我们需要使用以下命令先来生成站点的静态文件。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果进行多次生成，为了避免受错误缓存影响，最好使用 hexo clean 先清除一遍。</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 缩写为 hexo g</span></span><br></pre></td></tr></table></figure>

<p>此时你的文件夹目录下会出现 <code>public</code> 这个文件夹，里面存放的就是你站点的静态文件。</p>
<h3 id="与远程仓库建立关联"><a href="#与远程仓库建立关联" class="headerlink" title="与远程仓库建立关联"></a>与远程仓库建立关联</h3><p>接下来我们将本地的仓库与此前在 GitHub 上建立的仓库建立关联。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git init <span class="comment"># 初始化 Git 仓库，只需要执行一次即可</span></span><br></pre></td></tr></table></figure>

<p>在将其部署到 GitHub Pages 上之前，我们最好先建立一个分支。</p>
<blockquote>
<p>什么是分支？<br>Git 提供了版本管理功能，其中还有一个分支功能，你现在可以简单地将其理解为平行世界。</p>
</blockquote>
<p><code>你的名字.github.io</code> 部署后，GitHub Pages 将默认使用你的 master 分支作为静态文件部署。<br>所以我们最好新建一个 hexo 分支（命名无所谓）用来存储 Hexo 地源代码，master 分支则用来存储部署后的静态文件。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure>

<p>这时便成功建立了一个 hexo 分支。（此后的工作都将在 hexo 分支下进行）</p>
<p>你可以通过 <code>git branch -v</code> 来查看当前有哪些分支，使用 <code>git branch 分支名</code> 来切换到对应的分支。</p>
<blockquote>
<p><a href="https://www.yunyoujun.cn/note/git-learn-note/" target="_blank" rel="noopener">Git 学习笔记</a></p>
</blockquote>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>为了更方便的部署到 GitHub Pages，Hexo 提供了 <code>hexo-deployer-git</code> 插件。</p>
<p>老规矩，安装。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>在 <code>_config.yml</code> 中配置。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你此前新建的仓库的链接</span> <span class="comment"># 比如：https://github.com/YunYouJun/yunyoujun.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 默认使用 master 分支</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">Update</span> <span class="string">Hexo</span> <span class="string">Static</span> <span class="string">Content</span> <span class="comment"># 你可以自定义此次部署更新的说明</span></span><br></pre></td></tr></table></figure>

<p>保存，部署！</p>
<blockquote>
<p>第一次可能需要你输入用户名与密码。<br>密码输入的时候不会出现 ***，不要害怕，已经输入进去了。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>等待完成后，打开网址 <code>https://你的名字.github.io</code> 就能看到你的线上网站了。</p>
<blockquote>
<p>使用 https，http 可能无法正常打开。HTTPS 是多了安全加密的 HTTP，Chrome 浏览器已经默认会显示 <code>http</code> 链接为不安全。<br>为了安全，建议开启强制 https 跳转。<code>项目地址页面 -&gt; Settings -&gt; Options -&gt; GitHub Pages -&gt; Enforce HTTPS</code>。（翻到下面）<br>此时，http 网址会自动重定向到 https</p>
</blockquote>
<h3 id="备份与自动部署"><a href="#备份与自动部署" class="headerlink" title="备份与自动部署"></a>备份与自动部署</h3><p>我们当前只是将生成的静态文件部署到了云端。</p>
<p>为了以防万一，我们应该将网站的源代码文件也推送到 GitHub 仓库备份。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 与远程 Git 仓库建立连接，只此一次即可</span></span><br><span class="line">git remote add origin https://github.com/你的用户名/你的名字.github.io</span><br></pre></td></tr></table></figure>

<p>接下来准备提交，这几句命令将是你以后每次备份所需要输入。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加到缓存区</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"这次做了什么更改，简单描述下即可"</span></span><br><span class="line"><span class="comment"># 推送至远程仓库</span></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># 第一次提交，你可能需设置一下默认提交分支</span></span><br><span class="line"><span class="comment"># git push --set-upstream origin hexo</span></span><br></pre></td></tr></table></figure>

<p>每次推送都要输入这三条命令，你可能觉得有些麻烦。<br>那么你可以编写 bash 脚本。</p>
<p>譬如，在根目录下新建 <code>update.sh</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果没有消息后缀，默认提交信息为 `:pencil: update content`</span></span><br><span class="line">info=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [<span class="string">"<span class="variable">$info</span>"</span> = <span class="string">""</span>];</span><br><span class="line"><span class="keyword">then</span> info=<span class="string">":pencil: update content"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"<span class="variable">$info</span>"</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>

<p>此后更新的话，只需要在终端执行 <code>sh update.sh</code> 即可。</p>
<p>更新麻烦，每次部署也很麻烦，可以使用持续集成进行自动部署。</p>
<blockquote>
<p>什么是持续集成？<br>持续集成是一种软件开发实践。对软件进行自动化构建，以此来发现错误。<br>Travis CI 就是一个线上持续集成服务的提供商。它可以拉取你每次推送到 GitHub 上的代码，然后根据你的要求对其进行构建。<br>我们可以趁机让它自动生成网站静态文件，然后自动帮我们部署。<br>除此之外，你还可以使用 <a href="https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions" target="_blank" rel="noopener">GitHub Actions</a> ，<a href="https://www.netlify.com/" target="_blank" rel="noopener">Netlify</a> 等服务。<br>GitHub Actions 相比 Travis 等，自身便拥有仓库的 Token，不再需要额外设置，可以直接使用 <code>secrets.GITHUB_TOKEN</code>。<br>推荐一个专门用来部署 gh-pages 的 Actions <a href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener">actions-gh-pages</a></p>
</blockquote>
<p>关于更多更具体的自动化部署方案和操作步骤，你可以参考我的小伙伴 ChrAlpha 的 <a href="https://blog.ichr.me/post/automated-deployment-of-serverless-static-blog/" target="_blank" rel="noopener">初探无后端静态博客自动化部署方案</a>。</p>
<p>他在文章中详细介绍了 Netlify 、GitHub Actions 和 Travis CI 的部署方法。</p>
<p>你也可以参考 Hexo 的官方文档 <a href="https://hexo.io/zh-cn/docs/github-pages" target="_blank" rel="noopener">将 Hexo 部署到 GitHub Pages</a></p>
<p>我就不在此画蛇添足。</p>
<hr>
<p>当然还有个更简便的方法，直接参考我的 <a href="https://github.com/YunYouJun/yunyoujun.github.io/blob/hexo/.github/workflows/gh-pages.yml" target="_blank" rel="noopener">gh-pages.yml</a>。</p>
<p>去掉夹在 <code>yarn install</code> 与 <code>yarn build</code> 之间的 <code>algolia</code> 部分，直接粘贴到你的 <code>.github/workflows/</code> 文件夹（自己新建）下 <code>xxx.yml</code> 文件里即可。</p>
<p>推送后便可直接自动部署。</p>
<p>至此，你的站点便基本搭建完成，此后继续对主题进行自定义吧。</p>
<blockquote>
<p><a href="https://yun.yunyoujun.cn" target="_blank" rel="noopener">Yun 主题文档</a></p>
</blockquote>
<h3 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h3><h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><p>输入以下命令即可新建 <code>xxx.md</code> 文件。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new post xxx</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>md</code> 是 <code>Markdown</code> 的后缀名，是一种简洁方便的文本标记语言。你只需要记住简单的几种语法，就可以快速进行编写。<br>为什么使用 Markdown？<br>首先 Hexo 本身就是将 Markdown 转化为静态的 Html 文件，来方便用户编写文章。<br>Markdown 就好似介于 Word 与 TXT 文本之间。Word 体积大、大部分功能实际上根本用不到，且最后的文档常常带有许多冗余信息。<br>而 TXT 却无法实现加粗、标题、下划线、水平分割线等常用的功能。<br>（这里所说的 TXT 只是一种纯文本格式的代称，实际上 Markdown 也是纯文本文件，不过通过语法和 Markdown 编译器，我们就可以看到一些简单的样式。）</p>
</blockquote>
<p>譬如本文就是通过 Markdown 编写。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**加粗文字**</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>更多语法（虽然说是更多，但是其实也没多少）：<a href="https://github.com/younghz/Markdown" target="_blank" rel="noopener">Markdown 基本语法</a></p>
</blockquote>
<p>这是我写的一个 Markdown 样式：<a href="https://www.yunyoujun.cn/star-markdown-css/" target="_blank" rel="noopener">star-markdown-css</a></p>
<p>上面是渲染过后的效果，你可以与其 Markdown 的<a href="https://raw.githubusercontent.com/YunYouJun/star-markdown-css/master/demo/md/demo.md" target="_blank" rel="noopener">纯文本原文</a>进行对比。</p>
<h4 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h4><p>你可以新建一些自己的自定义页面。</p>
<p>譬如直接在 Hexo 目录下的 <code>source</code> 文件夹下直接新建 HTML 进行编写。</p>
<p>也可以通过以下命令来新建页面。（当然还是 Markdown，不过也是可以在 Markdown 里写 HTML 的，也会被渲染出来。）</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">hexo new page xxx</span><br></pre></td></tr></table></figure>

<p>说到这里，就不得不提一提本主题的特色功能了。</p>
<p>生成你的老婆列表页面。按一定格式书写即可。见<a href="https://yun.yunyoujun.cn/guide/page.html#girls" target="_blank" rel="noopener">文档</a>。</p>
<blockquote>
<p>预览：<a href="https://www.yunyoujun.cn/girls/" target="_blank" rel="noopener">Lovely Girls</a></p>
</blockquote>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="视频？"><a href="#视频？" class="headerlink" title="视频？"></a>视频？</h3><p>没有视频，一是懒，二是文字更利于更新勘误。</p>
<p>以及文章中将会频繁出现参考链接，更方便使用。</p>
<h3 id="如何绑定你的自定义域名？"><a href="#如何绑定你的自定义域名？" class="headerlink" title="如何绑定你的自定义域名？"></a>如何绑定你的自定义域名？</h3><p>首先，你得有个自己的域名。</p>
<blockquote>
<p>避免广告嫌疑，你可以自行前往相关域名提供商购买。<br><del>但是如果你有幸能看到谷歌广告（概率较小），可以考虑点一点。</del></p>
</blockquote>
<!-- > 原本我的确是这么写的。
> 不过咱的确一直嫖的是[腾讯云](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)，而它又有一个[推广链接](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)。
> 而你通过我这个[链接](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)访问腾讯云注册购买产品，也不会多花钱。所以就不妨[点一下](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)？
> 「你看，很简单吧，谁都不会受伤的世界完成了。」——比企谷八幡 -->

<p>并使用 CNAME 解析到 <code>你的名字.github.io</code>。（当然 A 记录直接解析到 GitHub Pages IP 地址也可以。）</p>
<blockquote>
<p><a href="https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain" target="_blank" rel="noopener">Managing a custom domain for your GitHub Pages site</a></p>
</blockquote>
<p>在 <code>Hexo</code> 工作目录下 <code>source</code> 文件夹下新建 <code>CNAME</code> 文件（没有后缀名）。</p>
<blockquote>
<p>CNAME 即相当于告诉 GitHub 允许将 xxx.github.io 为你的域名提供服务。<br>source 目录下的文件除了特殊的 markdown 会被解析为 html，其余都会原样复制到生成的静态文件夹中。<br>所以你需要在 source 文件夹下建有 CNAME，它会在生成静态文件时，将 CNAME 拷贝到静态文件夹并部署到 master 分支。<br>如果只是在 GitHub 上设置（<code>项目地址页面 -&gt; Settings -&gt; Options -&gt; GitHub Pages -&gt; Custom domain</code>），它会自动添加到 master 分支上，但随后不包含 CNAME 的部署会将其覆盖。</p>
</blockquote>
<p>内容填写你的域名即可。</p>
<blockquote>
<p><a href="https://help.github.com/en/github/working-with-github-pages/about-custom-domains-and-github-pages" target="_blank" rel="noopener">About custom domains and GitHub Pages</a></p>
</blockquote>
<h3 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h3><p>如果想要使用国内的一些服务，比如 CDN，不备案确实寸步难行。</p>
<p>此处我指的是 ICP 备案，并非公安备案。（实际上我从来没有进行过公安备案，且目前在使用服务时，并未受到任何相关限制。）</p>
<blockquote>
<p>我只在腾讯云备案过，所以只能分享一点此方面的经验。</p>
</blockquote>
<p>国内备案往往意味着你还需要一台国内的服务器，譬如通过腾讯云备案时会需要你设置关联的服务器（阿里云应当也是如此）。<br>实际上你的网站并不一定得在这台服务器上，即便你只是免费试用了一个月，但是备案成功了，之后过期了对备案也不会有何影响。</p>
<blockquote>
<p>也就是说你完全可以使用学生优惠（10 元左右）购买一个月的云服务器，用于关联，并在这个月内抓紧备案好，此后云服务器过期不会影响备案问题。<br>学生优惠的话 <a href="https://www.aliyun.com/minisite/goods?userCode=ixykjqj2" target="_blank" rel="noopener">阿里云</a> 或者 <a href="https://url.cn/PLQYbz6n" target="_blank" rel="noopener">腾讯云</a> 都有。</p>
</blockquote>
<p>备案前需要注意的几点就是：</p>
<ul>
<li>确定你的域名是否可以备案</li>
<li>关闭评论区</li>
<li>提交备案时的备注说明不得含有 <code>交流</code> 字样</li>
<li>首页不能含有其他网站的直达链接</li>
<li>遵纪守法无不良信息（这是当然的）</li>
</ul>
<p>你也可以直接关停网站，等待备案成功后再重新打开。（今后每年偶尔会复查，但相对会宽松许多。）</p>
<p>此后，按照网站指引的备案步骤一步步来即可。（以前还要等待幕布寄送拍照，现在可以直接在手机上人脸验证）</p>
<p>备案成功后页脚必须清晰地展示备案号，且备案号含有指向 <a href="http://www.beian.miit.gov.cn/" target="_blank" rel="noopener">http://www.beian.miit.gov.cn/</a> 的超链接。</p>
<h3 id="更多可能有帮助的内容"><a href="#更多可能有帮助的内容" class="headerlink" title="更多可能有帮助的内容"></a>更多可能有帮助的内容</h3><ul>
<li><a href="https://www.yunyoujun.cn/note/baidu-seo-about-github-pages/" target="_blank" rel="noopener">让百度收录你的 GitHub Pages 博客 - 云游君的小站</a></li>
<li><a href="https://www.yunyoujun.cn/note/use-cdn-speed-up-site/" target="_blank" rel="noopener">使用 CDN 加速你的 GitHub Pages 网站 - 云游君的小站</a></li>
</ul>
<h3 id="其他平台"><a href="#其他平台" class="headerlink" title="其他平台"></a>其他平台</h3><p>毕竟自己的站点可能还是不会有什么人看，所以发到其他平台了（然而还是没有人）。不过在<a href="https://www.yunyoujun.cn/share/how-to-build-your-site/" target="_blank" rel="noopener">这里</a>阅读体验应该是最好的。</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/113209647" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站 - 云游君的文章 - 知乎</a></li>
<li><a href="https://www.bilibili.com/read/cv5108842" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站 - bilibili 专栏</a>（不支持外链、代码高亮、Markdown，太难了）</li>
<li><a href="https://cloud.tencent.com/developer/article/1609701" target="_blank" rel="noopener">教你如何从零开始搭建一个属于自己的网站 - 腾讯云</a>（该说不愧是腾讯吗？SEO 绝了。最晚（晚了几个星期）发的，次日搜全名就变百度第一条了。）</li>
</ul>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>个人网站同样可以用来做许多事情，你可以将其用来记录生活、回忆、创作、学习笔记、开发经验等（包括作为一个试验平台）。<br>可以与熟悉的人分享，也可以作为另一个世界另一个自己的展示。</p>
<p>多年后，回看起自己当初写下的内容，未尝不是件有趣的事情。</p>
<p>善始者众，善终者寡。</p>
<blockquote>
<p>臣闻善作者，不必善成；善始者，不必善终。「史记·乐毅列传」</p>
</blockquote>
<p>希望大家能有毅力坚持下去，不忘初心。</p>
<blockquote>
<p>永远相信美好的事情即将发生</p>
</blockquote>
<p>如果还有其他小问题，可以到 <a href="https://shang.qq.com/wpa/qunwpa?idkey=3bd19a05aaccb2b60c396295c8617b3a9e667821a495e8cd7e1698ff95ab61c6" target="_blank" rel="noopener">QQ 群</a>（389401003）里反馈。</p>
<blockquote>
<p>如果是更通用的问题，最好在评论中进行反馈，这样别的同学也能看到，不需要重复提问。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/about/hexo-qrcode.jpg" alt="hexo-qrcode" loading="lazy"></p>
<hr>
<p>Q.E.D.</p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>分享</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【译】30 分钟学会 LaTeX</title>
    <url>/2019/10/28/share/trans-learn-latex-in-30-minutes/</url>
    <content><![CDATA[<blockquote>
<p>译自 <a href="https://cn.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes" target="_blank" rel="noopener">Overleaf - Learn LaTeX in 30 minutes</a><br>云游君 (YunYouJun) <a href="mailto:&#x6d;&#x65;&#64;&#121;&#117;&#x6e;&#121;&#111;&#x75;&#106;&#117;&#110;&#46;&#x63;&#x6e;">&#x6d;&#x65;&#64;&#121;&#117;&#x6e;&#121;&#111;&#x75;&#106;&#117;&#110;&#46;&#x63;&#x6e;</a></p>
</blockquote>
<p>在本指南中，我们希望为您初步介绍一下 LaTeX 。<br>该指南不需要您具有任何 LaTeX 的<a href="https://baike.baidu.com/item/先验知识" target="_blank" rel="noopener">先验知识</a>，<br>不过到您完成时，您将会已经编写出您的第一个 LaTeX 文档，并且如果顺利的话，您将能够对 LaTeX 提供的一些基本功能有很好地了解。</p>
<a id="more"></a>

<h2 id="什么是-LaTeX-？"><a href="#什么是-LaTeX-？" class="headerlink" title="什么是 LaTeX ？"></a>什么是 LaTeX ？</h2><p>LaTeX （发音为 LAY-tek or LAH-tek） 是个用于创建专业外观文档的工具。<br>它基于“所见即所得”的思想，这意味着您仅需要关注您文档的内容，接下来计算机会帮你搞定格式。<br>用户们可以输入纯文本并让 LaTeX 来处理剩余部分，而不是像 Microsoft Word 或 LibreOffice Writer 那样在页面上分割文本去控制格式。</p>
<blockquote>
<p>译者注：英式英语：/‘leɪteks/ ｜ 美式英语：/‘letɛks/</p>
</blockquote>
<h2 id="为什么学习-LaTeX-？"><a href="#为什么学习-LaTeX-？" class="headerlink" title="为什么学习 LaTeX ？"></a>为什么学习 LaTeX ？</h2><p>LaTeX 在世界范围内用于科学文档，书籍以及许多其他形式的出版。<br>它不仅可以创建精美的排版文档，而且还允许用户非常快速地处理排版更为复杂的部分，例如输入数学公式、创建目录、饮用和创建书目以及在所有章节中保持一致的布局。<br>由于可用的开源软件包数量众多（稍后会详细介绍），所以 LaTeX 的可能性是无穷的。<br>这些软件包允许用户使用 LaTeX 做更多的事情，比如添加脚注、绘制图表格、创建表格等。</p>
<p>人们使用 LaTeX 最重要的原因之一是它分离了文档的内容和样式。<br>这意味着您一旦写好了文档的内容，我们就可以轻松改变它的外观。<br>同样，您可以创建一种文档的样式，用来标准化许多不同文档的外观。<br>这使得科学期刊可以为投稿创建模版。这些模版拥有一个预制布局，而仅需要添加内容。<br>实际上，从简历到幻灯片的所有内容有上百种可用的模版。</p>
<h2 id="来写你的第一篇-LaTeX-吧"><a href="#来写你的第一篇-LaTeX-吧" class="headerlink" title="来写你的第一篇 LaTeX 吧"></a>来写你的第一篇 LaTeX 吧</h2><p>第一步是创建一个新的 LaTeX 项目。<br>您可以通过创建新的 <code>.tex</code> 文件来在自己的计算机上做这件事，或者您也可以在 Overleaf 中开始一个新项目。<br>让我们从最简单的工作示例开始吧：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">First document. This is a simple example, with no </span><br><span class="line">extra parameters or packages included.</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/0/01/Firstdocsmall.PNG" alt="Firstdocsmall.PNG" loading="lazy"></p>
<p>你可以看到 LaTeX 已经通过缩进段落的第一行，为你处理了第一段格式。<br>让我们来仔细看一下我们代码的每个部分的功能。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/582dbc33f220531c2d4bda27/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%201&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>代码的第一行声明来文档的类型，叫做类。这个类控制文档的整体外观。<br>不同类型的文档将会需要不同的类，即简历相比一篇科学论文将需要一个不同的类。<br>在这种情况下，这个类是 <code>article</code>，一种最简单最常见的 LaTeX 类。<br>您如果正在处理其他类型的文档，那可能需要不同的类，例如 <code>book</code> 或者 <code>report</code>。</p>
<p>在此之后，您编写封装在 <code>\begin{document}</code> 和 <code>\end{document}</code> 标签里的文档内容。<br>这就是文档的主体。你可以在这里开始编写，并根据你的需要来修改文本。<br>你必须编译文档，才能在 <code>PDF</code> 中查看这些更改的结果。<br>你只需点击 <code>Recompile</code> 便可在 Overleaf 中执行此操作。<br>（你也可以通过点击 <code>Recompile</code> 按钮旁的小尖头，并设置 <code>Auto Compile</code> 为开，来将项目设置为在编辑文件时自动重新编译。）</p>
<p>如果你使用的是基础文本编辑器，例如 <code>gedit</code>、<code>emacs</code>、<code>vim</code>、<code>sublime</code>、<code>notepad</code>等，你将不得不手动编译文档。<br>为此，只需在你的计算机终端/命令行中运行 <code>pdflatex &lt;你的文档&gt;</code>。<br>有关如何执行此操作的更多信息，请参见<a href="https://en.wikibooks.org/wiki/LaTeX/Basics#Compilation" target="_blank" rel="noopener">此处</a>。</p>
<p>如果你正在使用<a href="https://en.wikibooks.org/wiki/LaTeX/Installation#Editors" target="_blank" rel="noopener">专用的 LaTeX 编辑器</a>比如 <code>TeXmaker</code> 或者 <code>TeXworks</code>，只需点击 <code>Recompile</code> 按钮。<br>如果你不确定位置在哪里，请查阅程序文档。</p>
<p>现在您已经了解了如何向文档中添加内容，那么下一步就是给它起个标题。 为此，我们必须简短地谈一下 <code>preamble</code> （preamble 有引言、序文之意，但是这里主要指 LaTeX 中的代码部分，所以保留原词）。</p>
<h2 id="一篇文档的序文"><a href="#一篇文档的序文" class="headerlink" title="一篇文档的序文"></a>一篇文档的序文</h2><p>在上一个示例中，文本是被输入在 <code>\begin {document}</code> 命令之后的。<br>在此之前，<code>.tex</code> 文件中的的所有内容都被称为 <code>preamble</code>。<br>在 <code>preamble</code> 中，你定义要编写的文档的类型，编写所用的语言，想要使用的包（稍后会详细介绍）和其他几个元素。<br>例如，普通文档的 <code>preamble</code> 将如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper]&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br></pre></td></tr></table></figure>

<p>下面是每行的详细说明：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper]&#123;article&#125;</span><br></pre></td></tr></table></figure>

<p>如前所述，这定义了文档的类型。一些包含在方括号里的附加参数可以被传递给命令。<br>这些参数必须用逗号分隔。在示例中，额外的参数设置字体大小（12pt）和纸张尺寸（letterpaper）。<br>当然，可以使用其他字体大小（9pt，11pt，12pt），但是如果没有指定，则默认大小为 <code>10pt</code>。<br>至于纸张尺寸，其他可能的值是 <code>a4paper</code> 和 `legalpaper``；<br>请参阅有关页面大小和边距的文章，以获取有关此内容的更多详细信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br></pre></td></tr></table></figure>

<p>这是文档的编码。它可以被省略或更改为其他编码，但建议使用 <code>utf-8</code>。<br>除非您特别需要其他编码，否则如果你还不确定的话，请将此行添加到 <code>preamble</code> 中。</p>
<h2 id="添加标题、作者和日期"><a href="#添加标题、作者和日期" class="headerlink" title="添加标题、作者和日期"></a>添加标题、作者和日期</h2><p>要将标题，作者和日期添加到文档中，您必须在 <code>preamble</code>（不是文档的主体）中添加三行。<br>这些行是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\title&#123;First document&#125;</span><br></pre></td></tr></table></figure>

<p>这是文档的标题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\author&#123;Hubert Farnsworth&#125;</span><br></pre></td></tr></table></figure>

<p>在此处输入作者的姓名，并且作为一个可选项，你可以添加接下来的命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\thanks&#123;funded by the Overleaf team&#125;</span><br></pre></td></tr></table></figure>

<p>这可以被添加在标题命令的大括号里作者的姓名之后。它将会添加上标和有着括号内文本的脚注。<br>如果您需要在文章中感谢一个机构，该功能将非常有用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\date&#123;February 2014&#125;</span><br></pre></td></tr></table></figure>

<p>您可以手动输入日期或使用命令 <code>\today</code>，以便在编译文档时自动更新日期。</p>
<p>添加这些行后，您的 <code>preamble</code> 应该看起来像这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper, twoside]&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br><span class="line"></span><br><span class="line">\title&#123;First document&#125;</span><br><span class="line">\author&#123;Hubert Farnsworth \thanks&#123;funded by the Overleaf team&#125;&#125;</span><br><span class="line">\date&#123;February 2017&#125;</span><br></pre></td></tr></table></figure>

<p>现在，您已经为文档指定了标题，作者和日期，您可以使用 <code>\maketitle</code> 命令在文档上打印此信息。这应被包含在文档的 <code>body</code>（主体，原文加粗，作为 LaTeX 术语） 中您像要打印标题的位置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\maketitle</span><br><span class="line"></span><br><span class="line">We have now added a title, author and date to our first \LaTeX&#123;&#125; document!</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/e9/Learnlatex1.PNG" alt="Learnlatex1.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/582dbeacf220531c2d4bdaaa/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%202&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h2 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h2><p>与任何你正在编写的任何代码一样，包含注释通常会很有用。注释是您可以包含在文档中的几段文字，这些文字不会被打印，也不会以任何方式影响文档。在调试时，它们对于组织工作，做笔记或注释行/节很有用。要在 LaTeX 中进行注释，只需在行首写一个 ％ 符号，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\maketitle</span><br><span class="line"></span><br><span class="line">We have now added a title, author and date to our first \LaTeX&#123;&#125; document!</span><br><span class="line"></span><br><span class="line">% This line here is a comment. It will not be printed in the document.</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/e9/Learnlatex1.PNG" alt="Learnlatex1.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a308db13712fef4e9deff7/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%203&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h2 id="粗体，斜体和下划线"><a href="#粗体，斜体和下划线" class="headerlink" title="粗体，斜体和下划线"></a>粗体，斜体和下划线</h2><p>现在，我们来看一些简单的文本格式命令。</p>
<ul>
<li><strong>粗体</strong>：LaTeX 中的粗体文本使用 <code>\textbf{...}</code> 命令编写。</li>
<li><em>斜体</em>：LaTeX 中的斜体文本使用 <code>\textit{...}</code> 命令编写。</li>
<li><u>下划线</u>：LaTeX 中带下划线的文本使用 <code>\underline{...}</code> 命令编写。</li>
</ul>
<p>下面展示了其中每个实例的示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Some of the \textbf&#123;greatest&#125;</span><br><span class="line">discoveries in \underline&#123;science&#125;</span><br><span class="line">were made by \textbf&#123;\textit&#123;accident&#125;&#125;.</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/a/a9/Biu1.png" alt="Biu1.png" loading="lazy"></p>
<p>另一个非常有用的命令是 <code>\emph{...}</code> 命令。实际上，<code>\emph</code> 命令使用其参数的操作取决于上下文 - 在普通文本中，强调的文本是斜体，但是如果在斜体文本中使用，则此行为是相反的 - 请参见以下示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Some of the greatest \emph&#123;discoveries&#125;</span><br><span class="line">in science</span><br><span class="line">were made by accident.</span><br><span class="line"></span><br><span class="line">\textit&#123;Some of the greatest \emph&#123;discoveries&#125;</span><br><span class="line">in science</span><br><span class="line">were made by accident.&#125;</span><br><span class="line"></span><br><span class="line">\textbf&#123;Some of the greatest \emph&#123;discoveries&#125;</span><br><span class="line">in science</span><br><span class="line">were made by accident.&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/5/5d/Biu5.png" alt="Biu5.png" loading="lazy"></p>
<p>此外，某些软件包，例如 <a href="https://cn.overleaf.com/learn/Beamer" target="_blank" rel="noopener"><code>Beamer</code></a>，更改了 <code>\emph</code> 命令的行为方式。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30a6813712fef4e9df06b/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%204&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h2 id="添加图像"><a href="#添加图像" class="headerlink" title="添加图像"></a>添加图像</h2><p>现在，我们将研究如何将图像添加到 LaTeX 文档中。在 Overleaf 上，您首先必须<a href="https://cn.overleaf.com/learn/Including_images_in_ShareLaTeX" target="_blank" rel="noopener">上传图像</a>。</p>
<p>以下是一个如何包含图片的示例。</p>
<blockquote>
<p>译者注：前文使用的是 image ，这里使用的是 picture ，所以分别译为图像、图片。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">\usepackage&#123;graphicx&#125;</span><br><span class="line">\graphicspath&#123; &#123;images&#x2F;&#125; &#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">The universe is immense and it seems to be homogeneous, </span><br><span class="line">in a large scale, everywhere we look at.</span><br><span class="line"></span><br><span class="line">\includegraphics&#123;universe&#125;</span><br><span class="line"></span><br><span class="line">There&#39;s a picture of a galaxy above</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/9/9d/InsertingImagesEx1.png" alt="InsertingImagesEx1.png" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30b7413712fef4e9df0a8/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%205&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>LaTeX 不能单独管理图像，因此您需要使用一个包。包可用于更改 LaTeX 文档的默认外观，或允许更多功能。<br>这种情况下，您需要在我们的文档中包含一个图像，因此您应该使用 <code>graphicx</code> 包。<br>该软件包提供了新命令 <code>\includegraphics{...}</code> 和 <code>\graphicspath{...}</code>。<br>要使用 <code>graphicx</code> 包，请在你的 <code>preamble</code> 中包含以下行：<code>\usepackage{graphicx}</code>。</p>
<p>命令 `\graphicspath{ {images/} }告诉 LaTeX，图像被保存在当前目录下名为 <em>images</em> 的文件夹中。</p>
<p><code>\includegraphics{universe}</code> 是将图像实际包含在文档中的命令。<br>这里的 <em>universe*（宇宙）是包含图像的文件不带扩展名时的名称，所以 *universe.PNG</em> 就变成了 <em>universe</em>。<br>图像的文件名不应包含空格或多个点。</p>
<blockquote>
<p>注意：文件扩展名是被允许包括进来的，但是最好忽略它。如果省略文件扩展名，它将提示 LaTeX 搜索所有支持的格式。在上传图像文件时，通常也建议使用小写字母作为文件扩展名。有关更多详细信息，请参见<a href="https://cn.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes#Generating_high-res_and_low-res_images" target="_blank" rel="noopener">生成高分辨率和低分辨率图像</a>的部分。<br>译者注：该段落原文给出的链接无法跳转到相应的信息部分。</p>
</blockquote>
<h2 id="标题，标签和参考"><a href="#标题，标签和参考" class="headerlink" title="标题，标签和参考"></a>标题，标签和参考</h2><p>可以通过图形环境对图像添加标题、标签和引用，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;figure&#125;[h]</span><br><span class="line">    \centering</span><br><span class="line">    \includegraphics[width&#x3D;0.25\textwidth]&#123;mesh&#125;</span><br><span class="line">    \caption&#123;a nice plot&#125;</span><br><span class="line">    \label&#123;fig:mesh1&#125;</span><br><span class="line">\end&#123;figure&#125;</span><br><span class="line"></span><br><span class="line">As you can see in the figure \ref&#123;fig:mesh1&#125;, the</span><br><span class="line">function grows near 0. Also, in the page \pageref&#123;fig:mesh1&#125;</span><br><span class="line">is the same example.</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/25/InsertingImages.PNG" alt="InsertingImages.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30c5613712fef4e9df0e8/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%206&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>该示例中包含三个重要的命令：</p>
<ul>
<li><code>\caption{a nice plot}</code>：您可能会期望此命令为图形设置标题。如果你创建了一个图形列表，那么标题将会被用在这里。您可以将其放在图的上方或下方。</li>
<li><code>\label{fig:mesh1}</code>：如果您需要在文档中引用图像，请使用此命令设置标签。标签将为图像编号，并与下一个命令结合使用，以供您参考。</li>
<li><code>\ref{fig:mesh1}</code>：该代码将替换为与参考图相对应的数字。</li>
</ul>
<p>将图像放置在 LaTeX 文档中时，我们应始终将它们放置在图形环境或类似环境中，以便 LaTeX 可以用适合您剩余文本的方式放置图像。</p>
<blockquote>
<p>注意：如果您在自己的计算机上使用标题和参考，那你将必须编译两次文档才能使参考正常工作。Overleaf 会自动为您完成此操作。</p>
</blockquote>
<h2 id="在-LaTeX-中创建列表"><a href="#在-LaTeX-中创建列表" class="headerlink" title="在 LaTeX 中创建列表"></a>在 LaTeX 中创建列表</h2><p>在 LaTeX 中创建列表非常简单。您可以使用不同的列表环境创建列表。<br>环境是我们文档中您希望以与文档其余部分不同方式进行呈现的部分。<br>它们以 <code>\begin{...}</code> 命令开始，以 <code>\end{...}</code> 命令结束。</p>
<p>列表主要有两种不同的类型，有序列表和无序列表。各自将使用不同的环境。</p>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表是由 <code>itemize</code>（逐项列记之意，原文为专有名词）环境生成的。每个条目之前必须带有控制序列 <code>\item</code>，如下所示。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;itemize&#125;</span><br><span class="line">  \item The individual entries are indicated with a black dot, a so-called bullet.</span><br><span class="line">  \item The text in the entries may be of any length.</span><br><span class="line">\end&#123;itemize&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/ea/Itemize.png" alt="Itemize.png" loading="lazy"></p>
<p>默认情况下，各个独立的条目都用黑点标示，即所谓的项目符号。条目中的文本可以有任意长度。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52fe74766a6237452e000088/download/zip&templateName=Lists%20Examples&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>在不同环境中，有序列表具有相同的句法规则。我们使用 <code>enumerate</code>（枚举之意，原文为专有名词）环境制作有序列表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;enumerate&#125;</span><br><span class="line">  \item This is the first entry in our list</span><br><span class="line">  \item The list numbers increase with each entry we add</span><br><span class="line">\end&#123;enumerate&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/3/3a/Enumerate.png" alt="Enumerate.png" loading="lazy"></p>
<p>与无序列表一样，每个条目之前必须带有控制序列 <code>\item</code>，它将自动生成标记该项目的数字。枚举标签由从 1 开始的序列号组成。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52fe74766a6237452e000088/download/zip&templateName=Lists%20Examples&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h2 id="为-LaTeX-添加数学符号"><a href="#为-LaTeX-添加数学符号" class="headerlink" title="为 LaTeX 添加数学符号"></a>为 LaTeX 添加数学符号</h2><p>LaTeX 的主要优点之一是易于编写数学表达式。<br>LaTeX 允许两种用于数学表达式的书写模式：<code>inline</code>（内联）模式和 <code>display</code>（显示）模式。<br>第一种方式用于编写作为文本一部分的公式。第二种方式用于编写不属于文本或段落的表达式，因此被放在单独的行上。<br>让我们看一个 <code>inline</code> 模式的例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In physics, the mass-energy equivalence is stated </span><br><span class="line">by the equation $E&#x3D;mc^2$, discovered in 1905 by Albert Einstein.</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/db/Einstein1.png" alt="Einstein1.png" loading="lazy"></p>
<p>要使用 <code>inline</code> 模式来放置方程式，请使用以下定界符之一：<code>\( ... \)</code>，<code>$ ... $</code> 或 <code>\begin{math} ... \end{math}</code>。它们都能够起作用，选择那种取决于个人口味。</p>
<p><code>displayed</code> 模式有两种版本：已编号和未编号。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The mass-energy equivalence is described by the famous equation</span><br><span class="line"></span><br><span class="line">\[ E&#x3D;mc^2 \]</span><br><span class="line"></span><br><span class="line">discovered in 1905 by Albert Einstein. </span><br><span class="line">In natural units ($c &#x3D; 1$), the formula expresses the identity</span><br><span class="line"></span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">E&#x3D;m</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/3/3a/Einstein2.png" alt="Einstein2.png" loading="lazy"></p>
<p>要在 <code>display</code> 模式下打印方程式，请使用以下定界符之一：<code>\[ ... \]</code>，<code>\begin{displaymath} ... \end{displaymath}</code> 或 <code>\begin{equation} ... \end{equation}</code>。<br><a href="https://texfaq.org/FAQ-dolldoll" target="_blank" rel="noopener">不鼓励</a>使用 <code>$$ ... $$</code>，因为它会产生不一致的间距，并且和某些数学程序包一起使用时可能表现得不是很好。</p>
<blockquote>
<p>重要说明：equation* 环境是由外部软件包提供的，请参阅 <a href="https://cn.overleaf.com/learn/Aligning_equations" target="_blank" rel="noopener">amsmath</a> 的文章。</p>
</blockquote>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52ec4e44b43917a25a000e96/download/zip&templateName=Math%20Expressions&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>许多数学模式命令都需要 <code>amsmath</code> 程序包，因此在编写数学公式时请确保将其包括在内。<br>下面显示了一些基本数学模式命令的示例。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Subscripts in math mode are written as $a_b$ and superscripts are written as $a^b$. These can be combined an nested to write expressions such as</span><br><span class="line"></span><br><span class="line">\[ T^&#123;i_1 i_2 \dots i_p&#125;_&#123;j_1 j_2 \dots j_q&#125; &#x3D; T(x^&#123;i_1&#125;,\dots,x^&#123;i_p&#125;,e_&#123;j_1&#125;,\dots,e_&#123;j_q&#125;) \]</span><br><span class="line"></span><br><span class="line">We write integrals using $\int$ and fractions using $\frac&#123;a&#125;&#123;b&#125;$. Limits are placed on integrals using superscripts and subscripts:</span><br><span class="line"></span><br><span class="line">\[ \int_0^1 \frac&#123;1&#125;&#123;e^x&#125; &#x3D;  \frac&#123;e-1&#125;&#123;e&#125; \]</span><br><span class="line"></span><br><span class="line">Lower case Greek letters are written as $\omega$ $\delta$ etc. while upper case Greek letters are written as $\Omega$ $\Delta$.</span><br><span class="line"></span><br><span class="line">Mathematical operators are prefixed with a backslash as $\sin(\beta)$, $\cos(\alpha)$, $\log(x)$ etc.</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/22/Math.PNG" alt="Math.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30cfd13712fef4e9df123/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%207&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>在 LaTeX 中数学的可能性是无穷的，不可能在这里将它们都列出来。<br>请务必查看我们这儿的其他文章</p>
<ul>
<li><a href="https://cn.overleaf.com/learn/Mathematical_expressions" target="_blank" rel="noopener">数学表达式 - Mathematical expressions</a></li>
<li><a href="https://cn.overleaf.com/learn/Subscripts_and_superscripts" target="_blank" rel="noopener">下标和上标 - Subscripts and superscripts</a></li>
<li><a href="https://cn.overleaf.com/learn/Brackets_and_Parentheses" target="_blank" rel="noopener">方括号和圆括号 - Brackets and Parentheses</a></li>
<li><a href="https://cn.overleaf.com/learn/Fractions_and_Binomials" target="_blank" rel="noopener">分数和二项式 - Fractions and Binomials</a></li>
<li><a href="https://cn.overleaf.com/learn/Aligning_equations_with_amsmath" target="_blank" rel="noopener">对齐等式 - Aligning Equations</a></li>
<li><a href="https://cn.overleaf.com/learn/Operators" target="_blank" rel="noopener">运算符 - Operators</a></li>
<li><a href="https://cn.overleaf.com/learn/Spacing_in_math_mode" target="_blank" rel="noopener">数学模式下的间距 - Spacing in math mode</a></li>
<li><a href="https://cn.overleaf.com/learn/Integrals,_sums_and_limits" target="_blank" rel="noopener">积分，总和与极限 - Integrals, sums and limits</a></li>
<li><a href="https://cn.overleaf.com/learn/Display_style_in_math_mode" target="_blank" rel="noopener">在数学模式下显示样式 - Display style in math mode</a></li>
<li><a href="https://cn.overleaf.com/learn/List_of_Greek_letters_and_math_symbols" target="_blank" rel="noopener">希腊字母和数学符号列表 - List of Greek letters and math symbols</a></li>
<li><a href="https://cn.overleaf.com/learn/Mathematical_fonts" target="_blank" rel="noopener">数学字体 - Mathematical fonts</a></li>
</ul>
<h2 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h2><p>现在，我们将研究如何编写摘要，以及如何将 LaTeX 文档格式化为不同的章、节和段落。</p>
<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>在科学文献中，通常的做法是简要概述论文的主题。<br>在 LaTeX 中有一个 <code>abstract</code>（摘要）的环境。<code>abstract</code> 环境会将文本以特殊格式放在你文档的顶部。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;abstract&#125;</span><br><span class="line">This is a simple paragraph at the beginning of the </span><br><span class="line">document. A brief introduction about the main subject.</span><br><span class="line">\end&#123;abstract&#125;</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/db/Abstractsmall.PNG" alt="Abstractsmall.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30dd713712fef4e9df14e/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%208&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h3 id="段落和换行符"><a href="#段落和换行符" class="headerlink" title="段落和换行符"></a>段落和换行符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;abstract&#125;</span><br><span class="line">This is a simple paragraph at the beginning of the </span><br><span class="line">document. A brief introduction about the main subject.</span><br><span class="line">\end&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line">Now that we have written our abstract, we can begin writing our first paragraph.</span><br><span class="line"></span><br><span class="line">This line will start a second Paragraph.</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/d3/Abstractnonewline.PNG" alt="Abstractnonewline.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30dd713712fef4e9df14e/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%208&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>在编写文档内容时，如果需要开始新的段落，你必须按两次 “Enter” 键（以插入双空行）。<br>注意，LaTeX 会自动缩进段落。</p>
<p>想要开始新行而不实际开始新段落，请插入一个<em>换行</em>点，这可以通过 \（在示例中为双反斜杠）或 <code>\newline</code> 命令来实现。</p>
<p>注意不要使用多个 \ 或 <code>\newlines</code> 来“模拟”段落之间具有较大间距的段落，因为这可能会干扰 LaTeX 的排版算法。<br>推荐的方法是继续使用双空行创建没有任何 \ 的新段落，然后将 <code>\usepackage{parskip}</code> 添加到序言中。</p>
<p>您可以在 <a href="https://cn.overleaf.com/learn/Paragraphs_and_new_lines" target="_blank" rel="noopener">段落和换行</a> 文章中找到更多信息。</p>
<h3 id="章节"><a href="#章节" class="headerlink" title="章节"></a>章节</h3><p>组织文档的命令因文档类型而异，最简单的组织形式是分段，所有格式均可用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\chapter&#123;First Chapter&#125;</span><br><span class="line"></span><br><span class="line">\section&#123;Introduction&#125;</span><br><span class="line"></span><br><span class="line">This is the first section.</span><br><span class="line"></span><br><span class="line">Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  </span><br><span class="line">elit.   Etiam  lobortisfacilisis sem.  Nullam nec mi et </span><br><span class="line">neque pharetra sollicitudin.  Praesent imperdietmi nec ante. </span><br><span class="line">Donec ullamcorper, felis non sodales...</span><br><span class="line"></span><br><span class="line">\section&#123;Second Section&#125;</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"></span><br><span class="line">\subsection&#123;First Subsection&#125;</span><br><span class="line">Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...</span><br><span class="line"></span><br><span class="line">\section*&#123;Unnumbered Section&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/7/7c/Sections1.PNG" alt="Sections1.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30e7b13712fef4e9df182/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%209&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<p>命令 <code>\section{}</code> 标记新节的开始，在大括号内设置标题。<br>段编号是自动生成的，可以通过在段命令中包含 * 作为 <code>\section*{} 来禁用。
我们也可以有</code>\subsection{}s，甚至还有 `\subsubsection{}s。下面列出了基本的深度级别：</p>
<table>
<thead>
<tr>
<th>-1</th>
<th>\part{part}</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>\chapter{chapter}</td>
</tr>
<tr>
<td>1</td>
<td>\section{section}</td>
</tr>
<tr>
<td>2</td>
<td>\subsection{subsection}</td>
</tr>
<tr>
<td>3</td>
<td>\subsubsection{subsubsection}</td>
</tr>
<tr>
<td>4</td>
<td>\paragraph{paragraph}</td>
</tr>
<tr>
<td>5</td>
<td>\subparagraph{subparagraph}</td>
</tr>
</tbody></table>
<p>请注意，<code>\part</code> 和 <code>\chapter</code> 仅在 <code>report</code>（报告）和 <code>book</code>（书籍）文档类中可用。</p>
<p>有关文档结构的更完整讨论，请参见<a href="https://cn.overleaf.com/learn/Sections_and_chapters" target="_blank" rel="noopener">有关节和章的文章</a>。</p>
<h2 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h2><h3 id="在-LaTeX-中创建一个简单的表"><a href="#在-LaTeX-中创建一个简单的表" class="headerlink" title="在 LaTeX 中创建一个简单的表"></a>在 LaTeX 中创建一个简单的表</h3><p>下面，您可以看到一个表格最简单的工作示例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;center&#125;</span><br><span class="line">\begin&#123;tabular&#125;&#123; c c c &#125;</span><br><span class="line"> cell1 &amp; cell2 &amp; cell3 \\</span><br><span class="line"> cell4 &amp; cell5 &amp; cell6 \\  </span><br><span class="line"> cell7 &amp; cell8 &amp; cell9</span><br><span class="line">\end&#123;tabular&#125;</span><br><span class="line">\end&#123;center&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/c/c2/TablesEx1.png" alt="TablesEx1.png" loading="lazy"></p>
<p><code>tabular</code>（表格）环境是 LaTeX 创建表格的默认方法。您必须为此环境指定一个参数，在这种情况下为 <code>{c c c}</code>。<br>这告诉 LaTeX 这里将有三列，并且每列中的文本必须居中。您也可以使用 <code>r</code> 将文本向右对齐，使用 <code>l</code> 进行左对齐。<br>对齐符号 <code>＆</code> 用于指定表格条目中的分隔符。每行中的对齐符号必须始终少于列数。<br>要转到表格的下一行，我们使用<em>换行</em>命令 <code>\\</code>。我们将整个表格包装在 <code>center</code>（中心）环境中，以便它出现在页面的中心。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h3 id="添加边框"><a href="#添加边框" class="headerlink" title="添加边框"></a>添加边框</h3><p><code>tabular</code> 环境更加灵活，您可以在每列之间放置分隔线。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;center&#125;</span><br><span class="line">\begin&#123;tabular&#125;&#123; |c|c|c| &#125;</span><br><span class="line"> \hline</span><br><span class="line"> cell1 &amp; cell2 &amp; cell3 \\</span><br><span class="line"> cell4 &amp; cell5 &amp; cell6 \\</span><br><span class="line"> cell7 &amp; cell8 &amp; cell9 \\</span><br><span class="line"> \hline</span><br><span class="line">\end&#123;tabular&#125;</span><br><span class="line">\end&#123;center&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/25/TablesEx2.png" alt="TablesEx2.png" loading="lazy"></p>
<p>您可以使用水平线命令 <code>\hline</code> 和垂直线参数 <code>|</code> 添加边框。</p>
<ul>
<li><code>{ |c|c|c| }</code>：这声明了被垂直线分割的三列，并将被应用在表格中。<code>|</code> 符号指定这些列应由一条垂直线分隔。</li>
<li><code>\hline</code>：这将插入一条水平线。在这里，我们在表格的顶部和底部包括了水平线。你使用 <code>\hline</code> 的次数没有限制。</li>
</ul>
<p>在下面您可以看到第二个示例。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;center&#125;</span><br><span class="line"> \begin&#123;tabular&#125;&#123;||c c c c||&#125;</span><br><span class="line"> \hline</span><br><span class="line"> Col1 &amp; Col2 &amp; Col2 &amp; Col3 \\ [0.5ex]</span><br><span class="line"> \hline\hline</span><br><span class="line"> 1 &amp; 6 &amp; 87837 &amp; 787 \\</span><br><span class="line"> \hline</span><br><span class="line"> 2 &amp; 7 &amp; 78 &amp; 5415 \\</span><br><span class="line"> \hline</span><br><span class="line"> 3 &amp; 545 &amp; 778 &amp; 7507 \\</span><br><span class="line"> \hline</span><br><span class="line"> 4 &amp; 545 &amp; 18744 &amp; 7560 \\</span><br><span class="line"> \hline</span><br><span class="line"> 5 &amp; 88 &amp; 788 &amp; 6344 \\ [1ex]</span><br><span class="line"> \hline</span><br><span class="line">\end&#123;tabular&#125;</span><br><span class="line">\end&#123;center&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/2c/TablesEx3.png" alt="TablesEx3.png" loading="lazy"></p>
<p>有时在 LaTeX 中创建表格可能会有些棘手，因此您可能想使用 <a href="https://www.tablesgenerator.com/" target="_blank" rel="noopener">TablesGenerator.com</a> 在线工具导出表格的 [LaTeX] 代码。<code>File &gt; Paste table data</code>（文件 &gt; 粘贴表格数据）选项使您可以从电子表格应用程序复制和粘贴数据。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h3 id="表格说明（标题），标签和参考"><a href="#表格说明（标题），标签和参考" class="headerlink" title="表格说明（标题），标签和参考"></a>表格说明（标题），标签和参考</h3><p>您可以使用与图像几乎相同的方式添加标题和引用表格。唯一的区别是，使用 <code>table</code>（表）环境代替了 <code>figure</code>（图）环境。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Table \ref&#123;table:data&#125; is an example of referenced \LaTeX&#123;&#125; elements.</span><br><span class="line"></span><br><span class="line">\begin&#123;table&#125;[h!]</span><br><span class="line">\centering</span><br><span class="line">\begin&#123;tabular&#125;&#123;||c c c c||&#125;</span><br><span class="line"> \hline</span><br><span class="line"> Col1 &amp; Col2 &amp; Col2 &amp; Col3 \\ [0.5ex]</span><br><span class="line"> \hline\hline</span><br><span class="line"> 1 &amp; 6 &amp; 87837 &amp; 787 \\</span><br><span class="line"> 2 &amp; 7 &amp; 78 &amp; 5415 \\</span><br><span class="line"> 3 &amp; 545 &amp; 778 &amp; 7507 \\</span><br><span class="line"> 4 &amp; 545 &amp; 18744 &amp; 7560 \\</span><br><span class="line"> 5 &amp; 88 &amp; 788 &amp; 6344 \\ [1ex]</span><br><span class="line"> \hline</span><br><span class="line">\end&#123;tabular&#125;</span><br><span class="line">\caption&#123;Table to test captions and labels&#125;</span><br><span class="line">\label&#123;table:data&#125;</span><br><span class="line">\end&#123;table&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/26/Ourtablelabel.PNG" alt="Ourtablelabel.PNG" loading="lazy"></p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<blockquote>
<p>注意：如果您在自己的计算机上使用标题说明和参考，则必须编译两次文档才能使参考正常工作。Overleaf 会自动为您完成此操作。</p>
</blockquote>
<h3 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h3><p>创建目录很简单，命令 <code>\tableofcontents</code> 为您完成所有的工作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br><span class="line"></span><br><span class="line">\title&#123;Sections and Chapters&#125;</span><br><span class="line">\author&#123;Gubert Farnsworth&#125;</span><br><span class="line">\date&#123; &#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\maketitle</span><br><span class="line"></span><br><span class="line">\tableofcontents</span><br><span class="line"></span><br><span class="line">\section&#123;Introduction&#125;</span><br><span class="line"></span><br><span class="line">This is the first section.</span><br><span class="line"></span><br><span class="line">Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscing  </span><br><span class="line">elit.   Etiam  lobortisfacilisis sem.  Nullam nec mi et </span><br><span class="line">neque pharetra sollicitudin.  Praesent imperdietmi nec ante. </span><br><span class="line">Donec ullamcorper, felis non sodales...</span><br><span class="line"></span><br><span class="line">\addcontentsline&#123;toc&#125;&#123;section&#125;&#123;Unnumbered Section&#125;</span><br><span class="line">\section*&#123;Unnumbered Section&#125;</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"></span><br><span class="line">\section&#123;Second Section&#125;</span><br><span class="line"></span><br><span class="line">Lorem ipsum dolor sit amet, consectetuer adipiscing elit.  </span><br><span class="line">Etiam lobortis facilisissem.  Nullam nec mi et neque pharetra </span><br><span class="line">sollicitudin.  Praesent imperdiet mi necante...</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/6/6d/TableOfContentsEx1.png" alt="TableOfContentsEx1.png" loading="lazy"></p>
<p>节，小节和章将自动被包含在目录中。要手动添加条目（例如，当您想要一个未编号的部分时），请使用示例中的命令 <code>\addcontentsline</code>。</p>
<p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3103d13712fef4e9df25b/download/zip&templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2011&compiler=pdflatex" target="_blank" rel="noopener">Open an example in Overleaf</a></p>
<h2 id="下载你完成的文件"><a href="#下载你完成的文件" class="headerlink" title="下载你完成的文件"></a>下载你完成的文件</h2><p>您可以通过从上方的左侧菜单中点击 PDF 下载你完成的 PDF。<br>还有一个更快的选择就是单击 PDF 查看器上的 <code>Download PDF</code>（下载 PDF）按钮，如下所示。</p>
<p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/6/6c/Downloadpdf.PNG" alt="Downloadpdf.PNG" loading="lazy"></p>
]]></content>
      <categories>
        <category>云游的小安利</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>分享</tag>
        <tag>LaTeX</tag>
        <tag>译文</tag>
      </tags>
  </entry>
  <entry>
    <title>从来如此</title>
    <url>/2018/12/24/creation/novel/always-like-this/</url>
    <content><![CDATA[<blockquote>
<p>无趣的草率之作</p>
</blockquote>
<a id="more"></a>

<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2><p>奶奶病了，是吃人的病。</p>
<p>今夜，云依旧挨得紧密，让人看不到月光。</p>
<p>家里空荡荡得像个牢房，静谧无声，唯似有如耳鸣般的微弱电流声让我得以确认自己的存在。我期待着能在家中翻找出些值钱的东西，奶奶视若珍宝的匣子也被我打开，里面存放的是老式的平板电脑。对于独特爱好的古董收藏家，也许还能值上些钱。</p>
<p>我尝试着将其打开，密码的确是我的生日，桌面则装着寥寥可数的应用。其名字也在告诉我这大概是奶奶记日记的地方，想来如今应当不会再有何大用。出于好奇，我还是悄悄地点开看了起来。时间分门别类，从往至今，让我不由得为奶奶的毅力惊叹。只是近来，却逐渐减少。</p>
<p>我将其与依稀的记忆重叠起来，譬如见我远比父亲要惹人怜爱而起的乳名小可，譬如我百日之时早起从寺里祈来的长命锁，又譬如冬天前一针一线亲手为我织的红色围巾，零零散散，琐屑不堪。明明那些影像仍清晰地记在我脑海深处的芯片里，我却一点也不愿回顾。</p>
<p>我同样记得母亲离世时不甘与期冀的眼神，父亲入狱时遗憾却又无悔的目光。读书，上学，工作，又或是被吃，地上人的生活从来如此。但他们期盼着在我身上的未来能有所改变。</p>
<p>父亲的罪名是私藏海马芯片，在此之前母亲已怀上我却查出了脑部的肿瘤。治疗手段并非没有，但那是地上之人支付不起且没有资格尝试的。说来也简单，只需切除脑组织，并以芯片代之。而母亲所工作的电解云处理厂拒绝赔偿，加之本身康复可能性便极低，在芯片工厂工作的父亲决定铤而走险。</p>
<p>本打算我出生后便立即手术，然风声不胫而走，地下诊室中人赃并获，那时我应当哭得意外大声。母亲此后不久，亦含恨离世，只留我和奶奶相依为命。奶奶拼尽一切，将我抚养长大，因为只有我也许能够改变这个家未来的命运。</p>
<h2 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h2><p>这是知识就是金钱的时代。父亲当年偷出的芯片其实有两枚，一枚是可以完全存储记忆并替代大脑的甲型，另一枚则是辅助增强记忆的乙型。在搜查之前，乙型便已悄然植入了我的脑中，因此未被发现。</p>
<p>地上人拼其一生所掌握的知识也与天人们有着天壤之别，且此后往往不得不因生活所迫出售掉那些不能立即赚得钱的知识。正如马太福音第二十五章所言，凡有的，还要加给他叫他多余。没有的，连他所有的也要夺过来。人与人之间的界线也将愈来愈宽，从来如此。</p>
<p>但如今有了这枚芯片的我却不然，我得以考上此间最好的大学。这意味着我的知识与记忆往往能卖上更好的价钱，或者根本不用出售。如有机会，甚至可在天上的研究所谋得一官半职，带着奶奶永远地脱离此处。</p>
<p>只是在生活即将展露出些许光亮时，奶奶病了。是和母亲那时一样长在脑部的肿瘤，却更为接近海马区。它会一天天变大扩散，侵蚀人的记忆，令人神志不清，乃至死不瞑目。人人都知道那多半是电解云的辐射所至，但工厂的应聘者仍旧络绎不绝。这是无可奈何的事情。</p>
<p>母亲去世时，工厂网开一面允我奶奶顶了母亲的班，生活方得以维系。但如今奶奶生病，积蓄更是所剩无几，我不得不接住院的奶奶回家。</p>
<h2 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h2><p>当第一片电解云在空中生成之时，人与人便划清了界限。富者居于深空，贫者佝行于地，这是亘古以来的道理，从来如此。但这究竟从何而起，我不得而知。我们只需要为他们提供源源不断的能源，处理废料生成的电解云，再心怀感激地领取那勉强维持生活的微薄薪水，便天下太平。</p>
<p>可以继续治疗吗？钱我会慢慢凑齐的。我不断乞求着医生。</p>
<p>这是规定，从来如此。医生摇了摇头，又叹了口气，转身离开了。</p>
<p>病房里躺在床上的奶奶，已憔悴得与我记忆中的模样相去甚远。我握住奶奶机械的手，不敢抬头直视她的眼睛。满是划痕的机械手臂映着天花板的光，是工作时受的伤。为了交齐我大学的学费，奶奶卖掉了她书本声乐的知识与礼教。奶奶为我牺牲了太多太多，我却只能说出这样的话。</p>
<p>奶奶，家里已经没有钱了。要不我接您回家吧？</p>
<p>是让我回家等死！？</p>
<p>奶奶的眼睛突然瞪若铜铃，向我怒斥，全然不见往日知书达礼的气度。</p>
<p>不是……只是……</p>
<p>虽然我想狡辩，但却找不出丝毫理由来。</p>
<p>你以为是谁供你长到现在，没钱，那就拿你的身体去换钱啊。</p>
<p>我记忆中的奶奶是不会说出这种话的人。所有卖过记忆的人都会性情大变，液体将海马区充满，将相关的信息素黏附而出，那些深藏记忆中潜移默化铸就人格的点点滴滴则逐渐消失得无影无踪。复刻出的记忆便存储在这液体之中，这些记忆将在黑市中几经辗转，到达上层人的手中。而他们只需解析出其内容，存入自己的芯片，便可轻而易举地掌握他人或许花费数年方能熟练的技艺。电解后的液体则化作雾气飘散空中，它们不断上升，凝聚成团，最终成为永不消散的电解云。</p>
<h2 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h2><p>我走过狭长幽暗的阶梯，来到此处。大门紧闭，门外却放着面洁净的落地镜。</p>
<p>奶奶之所以记日记，也许就是害怕自己会说出那般伤人的话。但那却也有理，黑市里最值钱的东西除了带着学识的记忆，还有年轻貌美的躯体。我照了照眼前的镜子，也许的确能卖个好价钱。这面镜子大概正是为所有来此的人而准备，以便其留恋下自己最后的身影。</p>
<p>我打听得奶奶那份记忆暂时还未售出，若是将自己的身躯卖出，不光治疗的手术费能凑齐，还能再买回奶奶的记忆。</p>
<p>我敲了敲紧闭的门。</p>
<p>来了？低沉的声音从中传出。</p>
<p>来了。我答道。</p>
<h2 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h2><p>买得这副身躯时，里面的记忆竟未清除干净。我不由得窥探起部分，再此后却无下文。也许少女已委身于机械之躯中，并带着钱补齐了手术费，继续与奶奶相依为命。却也有可能被黑吃黑，就此消失于夜色中。但这都与我无关，我所在乎的只是这件收藏品是否足够美丽。</p>
<p>朱门酒肉臭，路有冻死骨。脑内的芯片飞速运转，为我挑选了句应景的诗。我的智慧与财富，正是父亲留给我的遗产。而我则将继续发扬光大。</p>
<p>我正欲继续沉浸于收藏品们的美丽之中时，与监控相连接的芯片告诉我似有客人来访。</p>
<p>“左等右等，可算将您盼至。”我径直邀其进入我最为自豪的收藏室，从单向的透明玻璃墙向下看去是变换莫测壮阔无比的电解云。此番美景，又有多少人能见得。</p>
<p>所来之人是享誉天上地下的设计师裁，正如其名，他最擅长的便是剪裁之术。但这所指的并非衣物，而是生物。他的创意别出心裁，疯狂大胆，令人惊叹。我昔日重金购得的宠物犬八，由八种精心挑选的狗的身体与记忆拼合而成，便出自他之手。藏獒的勇猛，牧羊犬的聪慧，田园犬的忠诚……总之我很是满意。</p>
<p>他既拥有此等天赋本可移居天上，却不知为何，始终在地上居住。这大概便是艺术家独有的偏执，我也不便多问。为了请他前来，我允诺为其提供重塑亡妻躯体的资源方才得愿。</p>
<p>“所以需要我做什么？”他发问道，被刘海遮住的半边脸带着阴柔的气息。有传言，称其疯狂到将亡妻的身体缝合到自己的身上，看来绝非杜撰。</p>
<p>“听得阁下技艺鬼斧神工，今日便想劳烦阁下打造一具举世无双的艺术品。”我在脑内传达了指令，周围众多的圆柱型遮罩缓缓打开，展露出我的收藏。“此处之物可任您取用。”</p>
<p>排列的罐中俨然是一具具曼妙少女的躯体。</p>
<p>“你不怕遭天谴么？”他突然说道。</p>
<p>“我们本便是天上之人，有何可惧。”我蹲下身来，摸了摸身边的爱犬。“再说也算彼此彼此吧。”</p>
<p>他不再言语，打了个数字八的手势。</p>
<p>刹那间，八张开血盆大口咬住了我的臂膀，裁的指尖也放出火光，准确地命中我心脏所在之处。</p>
<h2 id="六、"><a href="#六、" class="headerlink" title="六、"></a>六、</h2><p>“想必策划很久了吧？”凭借过去购来的格斗技巧，我一手锁住裁的关节，一手捏着脖子将其提起，肩膀上仍旧挂着我的爱犬。咬合的力道似乎仍在加剧，但对我毫无影响。被击穿的身体也并无血液流出，内部运转的是密密麻麻的机械零件。</p>
<p>隐藏在八身上的训练记忆，缝于手指中的袖珍枪，绝非一日之功。</p>
<p>“是谁派你来的？为什么要杀我？”我笑问道，无非是螳臂当车。</p>
<p>“是天。为什么你们居于天上，而他们就要在云下的土地苟延残喘？为什么你们可以肆意更换躯体填充记忆，而他们就要出卖自己为你们处理那些废料？为什么你们吃人，他们就要被吃？”因为我手上力道的加重，他剧烈咳嗽起来，我偏过头躲开他喷出的鲜血。</p>
<p>“弱肉强食，从来如此。”</p>
<p>“从来如此，便对么？”他怒喝道。</p>
<p>我笑了出来。“不对又如何？你并非第一个来杀我之人，也不会是最后一个。”</p>
<p>“自我亡妻死于你那电解云工厂，我便没想过继续苟活下去。”他竟与我对笑起来。</p>
<p>为以防万一，我提前捏断了他的颈椎，他凝固的表情似要再说些什么。不过最令我有些恼怒的是，我梦想的艺术品未能完成。好在托此我可以有正当防卫的理由，获取他的记忆亲力亲为。</p>
<p>在我欲打开他的大脑一探究竟时，热浪扑面而来。</p>
<h2 id="七、"><a href="#七、" class="headerlink" title="七、"></a>七、</h2><p>我从收藏室的长眠中醒来，身上还滴着罐中的液体。不远处则是滩模糊的血肉与熔化的铁水，那疯子竟将微型炸弹也缝进了脑内，故这自然是裁先生与我的。或者说是父亲的，正如忒修斯之船，记忆的载体与身体都更换完毕后，我还是我吗？我偶尔也会思考，但无论如何，我将继承下父亲的智慧与财富，并继续发扬光大。</p>
<p>玻璃墙外的电解云已变换了形状，被夕阳照的金光万丈。</p>
<p>富者永继，贫者交替，生生不息，从来如此。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><blockquote>
<p>离某截稿之日还有两天，本想就此放弃，但结合至今机遇的惨痛经验，便又决心一试。便有了此作。既所幸又只取得了三等奖。<br>此时的我，诸事不顺，常常思索是否是人世不公早就此番境地。当然虽可能由此原因，但终究却还是在于自己。</p>
</blockquote>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>短</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>我与幻星的故事</title>
    <url>/2017/07/21/memory/association/a-story-about-fantasy-star/</url>
    <content><![CDATA[<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721140213.jpg" alt="" loading="lazy"></p>
<p>因为群里总是喜欢互黑互吹玩儿（差不多都快要成风俗习惯了 2333），自己也定不能幸免于难。但有时又怕被当真了，就想稍微来段内心独白。</p>
<a id="more"></a>

<p>自己确实不厉害，还是有点自知之明的。最多某些东西都稍微喜欢一些，就会自己去捣鼓看看。毕竟你们见过我的话，会发现我现实中基本不怎么说话，所以我社交圈超窄，很多情况大概是在自嗨。也从来不认识自己学院的学长和老师们，全是自己瞎搞，对自己真实实力也没个切实感受。</p>
<p>所以这样当自己瞎弄出什么东西来，就会有满满的成就感。但是日后，稍微深入一点学习后再回看当初的自己，就会想:哇，这什么辣鸡。这时就会觉得自己当初真菜，为当初感到羞耻。时间久了又稍微有点满足，几周后再一看，卧槽，自己真辣鸡。循环往复，导致现在你们一夸我几句，我就贼心虚。因为大概只有我自己最清楚自己多辣鸡。</p>
<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721143210.jpg" alt="" loading="lazy"></p>
<p>本来只是想在昨晚大雄黑完我时候，把这段话发出来的。但是想想，还是都睡了吧。只是不知为何，在床上辗转反侧，始终难以入眠。又悄悄摸了摸手机，起来看看。恰逢鸿飞在群里发了句说林肯公园主唱自杀了。我对乐队并不怎么了解，但是印象大概是听过林肯公园献唱的变形金刚主题曲《New Divide》吧。闲得无聊，又摸开网易云听了听，我想大概是更加睡不着了。</p>

    <div id="aplayer-jCrcnSaI" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="26295776" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"
    ></div>

<p>然后脑子里就一点一点得冒出一些以前的东西，甚至有点将其全部记下的冲动。<br>是啊，我不认识什么人，所以我想我最大的庆幸恐怕就是能够加入这个社团，认识你们了。</p>
<p>我空间里应该还存着转的那条很喜欢的说说。（大概第一条就是）</p>
<blockquote>
<h4 id="未来你会遇到许多美好的人和事"><a href="#未来你会遇到许多美好的人和事" class="headerlink" title="未来你会遇到许多美好的人和事"></a>未来你会遇到许多美好的人和事</h4><h4 id="会让你觉得"><a href="#会让你觉得" class="headerlink" title="会让你觉得"></a>会让你觉得</h4><h4 id="高考做错的那些题"><a href="#高考做错的那些题" class="headerlink" title="高考做错的那些题"></a>高考做错的那些题</h4><h4 id="都错得刚刚好"><a href="#都错得刚刚好" class="headerlink" title="都错得刚刚好"></a>都错得刚刚好</h4></blockquote>
<p>刚看见的时候，真的超有感触。<br>回想起来，自己真的是各种各种机缘巧合来到了这个学校，学了计算机，进了这个社团，认识了你们。<br>高考那年我们学校英语听力卡带了，我英语试卷也没做完，同时英语成绩历史最低，同时南航飞行学院把英语成绩线划的历史最高，不然我大概现在和林大少一样去开飞机了。毕竟我连体检的贞操都失去了啊。（笑）</p>
<p>我已经记不得是哪两人向我寝室里发的传单了，那时对科幻也的确比较感兴趣，高中空下来的时候就是看看室友买的科幻世界。《三体》已是久闻其名，但其实尚未怎么看过。便加了传单上的群，顺带网上找本电子书来看着。群里那时大概有五十来人，现在只清晰地记得当时有个叫林绍鹏的家伙一直在群里水（2333）。顺带一提,这家伙的头像用到现在都没换过啊。</p>
<p>在正式加入我们社团之前，我也和室友一起去面试了学校里我们学院的社团微软技术俱乐部。缘由就是自身专业是计算机的，比较偏好这方面，而且也想要学习点技术吧。但是可悲的是，面试被淘汰了（orz,还以为社团直接加就好了），当然原因至今我也不是很明白，大概还是自己不会说话？如果当时不是那样的话，现在的我的境遇也很可能是另一情况了吧。自己还会像现在一样喜欢幻星这个社团，并甘愿为之付出自己的力量吗？（不禁有点后怕起来。）</p>
<p>我是百团大战的时候，真正在社员名单上签下了自己的字。社团的摊位也很小，找了半天，方才跟从几个气球找到了目的地。我记得第一印象是，仿佛都是基佬（因为似乎并没有看到一个女生）。</p>
<p>此后就是轮到社团新生集体开会，几位现在退休的老干部依次上台讲话。（<del>讲话内容要是现在还记得就有鬼了，2333</del>）只记得那时林大少的超短头发，让我差不多一个学期都以为他是商船学院的。此后还统计了各部门的人数。（小说部、电影部、科技部、外联部）</p>
<p>最初，我填写的是小说部。也是那时候最先认识杨越庭的，都是填的小说部。（啊，当时就差不多猜到这家伙大概是个死宅，就是还没怎么暴露。）接下来似乎是统计了一下各部门的人数。然后林大少就拿着表格重新下来统计了，因为科技部一个人！也没有！（2333）</p>
<blockquote>
<p>一个人！也没有！</p>
<p>一个人！也没有！</p>
</blockquote>
<p>那时想反正是兴趣社团，报啥都差不多，混着玩玩开心就好了。外加恻隐之心，就又转报了科技部。同时，还有周佳驰这家伙也是（这家伙当时明摆着网文少年，怕是把科幻看成了玄幻）。</p>
<p>至此，科技部成员到齐。此后某日记得老部长吴岳还请我们几个聚餐吃了烧烤，连带老部长吴岳、老学姐、我、周佳驰共四人。这也就是当初科技部所有的人了，2333，莫名凄凉。当然此后吃烧烤的环节对我来说更是尴尬。</p>
<p>新生的会开完后，大家就基本走掉了。当时就看到绍鹏拉着我和越庭几个新生在那说话，大概是很真切地希望我们能加入这个社团。（加上联想到科技部人员惨案，和聊天时我无话可说的境况，<del>我就觉得这家伙超可怜</del>。）那时的我，还不知道这名中二少年背后隐藏的权势。（<del>应该不会被毁尸灭迹吧</del>）<br><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721224320.jpg" alt="" loading="lazy"><br>也许是恻隐之心大发，有或是被其真挚的言语感动，那时我突然觉得这个社团或许会很有意思。</p>
<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721224955.png" alt="" loading="lazy"><br>虽然是（<del>因同情</del>）后改了科技部，但是似乎（<del>老小说部长</del>）张佳林那儿的名单我还是小说部。所以我还跟着佳林去见过王慧老师，当时可能是希望我以后能参与交涉。当然我站那一句话没说出来，估计轻松地就打破了佳林的期望。</p>
<p>此后上学期基本就没啥事（做过几次小任务？科技链接、海报什么的），第一次接到科技部老部长的任务，啥都不会，也就在那瞎鸡儿鼓捣。丑的一匹，所以最后部长没采用。（采用就有鬼了 2333）那时就觉得自己超没用，还贼憋屈。想着就去图书馆借点书来学，寒假也顺便去图书馆借了两本最厚的彩印的 ps 教程书回去看，从头到尾一页一页翻。有些问题不容易百度，也不知道问谁（为什么不问老部长？因为看着挺高冷的，没敢问。），内心挺空虚无助的。<br><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721140213.jpg" alt="" loading="lazy"></p>
<p>绍鹏有时候就会找我私聊，大概是为了拢聚人心。但我也不知道回什么，几个来回就把天聊死了，挺尴尬的。而且群里基本还是不认识什么人，也聊不进去，基本是潜水状态（全靠林大少找我说话）。</p>
<p>后来寒假的时候，绍鹏给我过来派幻想节海报的任务。我也就用自己自学的三脚猫 ps 慢慢做，再找他一次次来回改。（自己那时审美也挺黑历史的，特别偏爱华康少女体。）总之改了贼多次挺烦的，但看这家伙好像还在操心其他各种各样的更烦，也就忍了下来。</p>
<p>不过也还好当初没甩锅走人吧，不然就错过后续的众多了。因为直到下半学期，我想我才真正地融入到这里。</p>
<p>大一下学期幻想节准备的时候，老干部们叫了大概十来个新生出来开会。然后互相讨论方案，大家也好像都互相认识，也就在那讨论。</p>
<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721224955.png" alt="" loading="lazy"></p>
<p>但是我并不在互相认识的大家之中啊，我一个人站在位置上，自己都觉得贼尴尬。当时就想这些现充好厉害啊。（其实是带着嫉恨的 2333）</p>
<p>只是那时一苇突然间回过头来，把我拉进了讨论。后来随意地问出了我的名字，然后就直接叫我睿了。（大概是除了我妈，第一个这么叫我的人了。）<br>不知社团里大家后来都以名相称是不是都源于此处。</p>
<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721143210.jpg" alt="" loading="lazy"><br>我心想，大概这就是所谓的现充的社交能力吧，我想我可能一辈子也做不到。<br>（熟练的程度，一度让我以为是上一届学长）</p>
<p><img src="https://yunyoujun.cn/wp-content/uploads/2017/07/QQ%E5%9B%BE%E7%89%8720170721140213.jpg" alt="" loading="lazy"><br>大概就是那时和大家终于熟悉起来了吧，但是熟悉的过程其实完全记不起来啊！差不多只能想起一点写一点了。感觉大雄都是到大二才熟悉的，因为他的缘故，我一直以为审批海报什么的特别轻松。</p>
<p>还有因为没人，科技部部长大概只有我接锅了。然后就这样，我迎来了大二。</p>
<hr>
<p>To Be Continued ……</p>
]]></content>
      <categories>
        <category>崬少的小回忆</category>
      </categories>
      <tags>
        <tag>时光</tag>
        <tag>社团</tag>
      </tags>
  </entry>
  <entry>
    <title>仓鼠</title>
    <url>/2017/02/11/creation/novel/hamster/</url>
    <content><![CDATA[<h2 id="仓鼠的笼子"><a href="#仓鼠的笼子" class="headerlink" title="仓鼠的笼子"></a>仓鼠的笼子</h2><p>“呐，你说世界上真的有外星人吗？”我一边喂着毛茸茸的仓鼠，一边眨着眼睛故作调皮的问道。</p>
<p>夏日的午后总会让人慵懒，好在室内却是凉意凛然。</p>
<p>“虽说眼见为实，不过我想，外星人是一定存在的。至少从人类的渺小程度来看，是这样。”他的视线从书本上离开了会儿，露出不置可否的笑容。<br>“那为什么我们到现在都不能见到他们呢？一定会有科技稍早于我们的外星人搭着如魔法般的飞船来到此地才对啊。”我追问道，并将那可爱的小仓鼠提起放在转轮上。它也像是明白了什么一样，开始哒哒哒地跑了起来。</p>
<a id="more"></a>

<p>“即便是地球上也仍有许多我们未曾见过的生物啊，不过我宁愿呆在午后，看着前人的幻想，也不想去探索那些未知的…”他像是没找到合适的词汇，“动物世界？”<br>“外星人也会像你这般怠惰吗？”这样的回答让我不由得白了他一眼，同时双手将那正跑着的小家伙捧了起来。<br>“啊，对了，动物世界的话，12:28 的时候 CCTV-6 有重播哦！”<br>我聚焦着视线，准备打开墙上的屏幕。“要不要看？不然这气氛可是太过安静了。”</p>
<p>“记得这么清楚呢，随便咯。”他轻轻翻过一页，对我莫名其妙的提议并不在意。<br>突如其来的嘈杂与亮光让手中那毛茸茸的东西一阵颤抖，那灰溜溜的眼睛转动着投向其来源。“你也喜欢看吗？”我顺着它的毛发摸下，轻声问道。</p>
<p>“仓鼠的视力只能看到两米之内的东西，而且只能分辨灰度，所以它眼中的《动物世界》应当只是一团黑白的模糊光影哦。当然听觉倒是不错，不过正因如此，会很讨厌嘈杂声呢。”他依旧盯着书，悠悠地说道。<br>“咳…不用你多嘴。”<br>“哇，连这样的情景都能拍到，到底是怎么做到的啊！”我盯着墙上的屏幕，试图转移话题。</p>
<p>“不觉得这更像是人类在单方面偷窥吗，也许你所期待的外星人也正这样在隐蔽地观察着我们，而我们也如它们一样毫无察觉。”<br>“我们与他们科技的差距就如同虫子与我们一般，所以我们才能这样安逸地抱怨着在这宇宙中的孤单啊。”他拿着书本向后仰去，座椅也随之倾斜。</p>
<p>不知怎么，我从他的话语中似乎听到一丝失落。</p>
<p>“……那我们安稳地活到现在真是谢天谢地呢，如果哪日外星人家的野孩子踏入这里岂不是糟了，皆被如同玩耍一般拿捏？”我试探性地问了问。<br>“这倒也许不必担心，如果发现一种新奇的生物，更多的是去划立保护区去保护，而不是将其生活区域开放为旅游景点吧。”<br>“说不定人类之所以能够安稳地活到现在，并得以为自己的幸运而沾沾自喜的缘由，正是如此呢。”他突然推了推眼镜，正色道。<br>“唔，像太阳系一样大的保护区，大手笔啊。”我想要配合着感叹道。</p>
<p>“若只是那样也罢，但如只是畜牧或种植般保护着，到了收割的季节会怎样呢?”不知为何，他突然对这话题严肃起来，并且滔滔不绝地说了下去。“为了看护人类，也许还会设立诸如饲养员或是观察员一样的职位吧，肥料就好比是人类科技史上那不可思议地突飞猛进的缘由，开荒，播种，施肥，生长，把人类的发展史囊括其中，然后到了丰收的季节，开始收割的盛宴。”<br>“很了解嘛！那么你是观察员吗？”我转过头来，笑着回问道。手中的小仓鼠像是受到了惊吓，四处东张西望起来。<br>他微微一笑，没有回答，继续看起书来，脸上的严肃也早已一扫而空。</p>
<p>只是莫名的尴尬气氛再次降临，桌上漏斗中的沙粒也伴随着时间一点一滴地消逝。甚至连那刚用完餐的小仓鼠也再次沉沉睡去。</p>
<p>“谢谢款待。”他将手中的书本轻轻合起并放上书架，准备告别。<br>……<br>“请等一下，明天请务必还要来，我有秘密要告诉你。”我决定诉出琢磨许久的话语。</p>
<p>他像是有些惊讶，但旋即点了点头。</p>
<p>单向的玻璃墙幕将远处夕阳的光线引入，为屋内染上暖色。如同他笑容一般的暖意荡漾而开。</p>
<p>“我也有。”</p>
<p>我按捺住扑通扑通跳着的心脏，在日历上标注好关于世界毁灭的倒计时，准备入睡。</p>
<h2 id="关于世界毁灭的二三事"><a href="#关于世界毁灭的二三事" class="headerlink" title="关于世界毁灭的二三事"></a>关于世界毁灭的二三事</h2><p>“早上好。”<br>“早上好。打扰了。”打过招呼的他如往常一般立在门前，言辞匮乏。<br>“快进来吧。”不待他下句话说出，我便催促起来。</p>
<p>今天的室内风格是久违的星空，无了昨日的透明简洁，繁杂的星点点缀在夜空，朦胧地将全部笼罩，嫩绿的草儿则将山坡铺满，让人犹如置身荒野。只是散落的家具让人显得像是无家可归。天空也不是单纯地靛蓝，而是在远处透着黄昏，宛如昨日的延续。</p>
<p>“很棒的场景啊！”他难得的发出了句称赞。<br>“送你好了，不过你可能要无福消受了。”我将数据打包着发送至他的邮箱。</p>
<p>他则从熟悉的书架处抽下昨日尚未看完的书本，对我一如既往的世界毁灭的笑话不置可否。</p>
<p>“不问我吗?”<br>“想说的话，你一定憋不住吧?” 他一副将我看穿的样子，并如往常一样打开书本读了起来。<br>“看完了吗?”我无聊地看着还在熟睡的小仓鼠，琢磨着自己的言辞。<br>“快了。”<br>“你好像很喜欢这本书啊。”我抱头仰面躺在松软的草地上，盯着夜空投影出的星点，说道：“你先还是我先？”<br>“女士优先。”他也学着我的姿势躺下。<br>“这时候谦让就太狡猾了，不过我倒是无所谓啦，你要做好心理准备哦。”<br>“从各个方面。”我补充道。<br>“准备好了？”<br>“嗯。”对于我多余的废话，他没有丝毫厌烦。而且总感觉今天的他有些不一样。<br>“哪怕是你的秘密可能变得无关紧要？”我继续追问道。</p>
<p>他的脸上闪过一丝慌乱，但还是点了点头。<br>“其实，…”我深吸了一口气，想要看看是否能吊起他的胃口，果然他像是有了什么猜测而紧张起来。</p>
<p>…</p>
<p>“距离世界毁灭还有三天。”</p>
<h2 id="星空的狂想"><a href="#星空的狂想" class="headerlink" title="星空的狂想"></a>星空的狂想</h2><p>他呆滞了下，又像是有点生气：“你的秘密不会就是为了开这种玩笑吧。”但当他看到我严肃的面孔时，语气反倒慢慢缓和起来。<br>“是真的哦。”我再次强调。</p>
<p>“那么有何证据吗？”他顿了顿，“突然说这种话，没什么人会信的吧，我也没有中二到那种程度。”<br>“说来话长啊…”<br>“那就慢慢说。”他撇了撇我。</p>
<p>“因为太长了，不知道从何说起啊。”我夸张地叹了口气，但他显然不会就此罢休。<br>“你认为自己是真实存在的吗？”我抛出了不明所以的问题。</p>
<p>“你接下来要告诉我，我不过是虚拟人物，然后这个虚拟世界因为某些原因三天后便要销毁了吗?”<br>“哇，猜的真准啊，虽然有些区别，但是总体意思差不多啦。”我称赞道。<br>“喂，别用那么简单的理由敷衍我啊。”他难得的担当了吐槽角色。“接下来的展开该不会是要说 boss 就是那只小仓鼠吧。就像某漫游指南里一样。”</p>
<p>“很遗憾，让你失望了，它只是仓鼠而已，由普通的单细胞生物进化而来，和你一样。”我扶额摇了摇头。<br>好在他的猜想让刚刚凝固的气氛再次缓和下来，我也因此得以继续开口。<br>“还记得我们昨日的话题吗？其实我就是观测者哦，只不过在我发现你们文明前，你们便已毁灭了。如今的世界是采集信息建模后所发展出来的，就像是考古模型之类的东西，而目的正是为了探索你们灭亡的真相，我可不是像你这样怠惰的人哦。”我顺便反击起他昨日的论断。</p>
<p>他眉头紧皱，大概是在思考我话语的真实性。<br>“还在怀疑啊，要我施展些神迹吗？”我拉起他的手臂，并挥手将远处的星空拉近，与此同时，草坪则向下退去。穿透房间虚拟景色的壁障后，城市也在下方不断缩小，云层也一晃即逝，直至那熟悉的蓝色水球出现在我们下方的视野才开始停下。<br>我松开他的手臂，在深邃的太空中伸起懒腰，并打量着他的惊魂未定。不待他发问，又接着说道：“如你所见，这个看似真切的世界，距离推算的毁灭日期只有三天了。很期待吧，关于一切的真相。”</p>
<p>只不过完全看不出要灭亡的样子呢。我低声念叨着。</p>
<p>“仅仅依靠这样的推算，就能将世界毁灭都模拟出来吗？包括那些不可控的变数？”他显然十分惊讶，但似乎开始有些相信我的话语了。<br>“无用的变数是多余的，就像你决定开车上班，你所着的服装与所遇的风景都不会轻易影响你到达公司这个事实哦。人类文明的毁灭并没有外来因素的迹象，也就是说，原因只在于你们自己。而且文明毁灭足以作为历史进程的奇点，可不会随随便便地被其他因素所改变，这是注定会发生的事情。就像我提前告知你，也不会对毁灭的进程有丝毫影响。大概这就可以理解为那玄而又玄的命运吧，属于你们人类的命运。”</p>
<p>“况且，你以为这个世界有多大呢？说到底啊，你们无论怎么努力连太阳系都飞不出。那么之外的真假对你们又有何用呢？”我将远处的一颗发亮的恒星拉近，把那如乒乓球大小的发光气团推至他的眼前。“喏，这就是你们在努力观察的宇宙。”<br>他一言不发，努力地维持着镇定。</p>
<p>大概我不应该说出来吧，也许如大家一样在梦境中带着对次日的幻想而消亡才是最好的选择。</p>
<p>“没事吧，要我消除掉这份不安的记忆吗？”我伸出手在他眼前晃了晃。<br>“没事，谢谢。不过为什么选择告诉我呢？”<br>“额…因为你很可爱啊。”我挠了挠头，有些不知所措。“像小仓鼠一样?”<br>“对了，你的秘密呢？”我急忙切换话题。<br>“啊…”他像是吓了一跳，果然很像小仓鼠啊。“那种事情已经无关紧要了。”他低下头来，但失落的表情显而易见。</p>
<p>“我想我该回去了。”<br>“那么世界末日见。”我摆摆手，不做挽留。<br>“谢谢款待，再见……”他丢下惯例的话语逃离而去。</p>
<h2 id="世界的终焉"><a href="#世界的终焉" class="headerlink" title="世界的终焉"></a>世界的终焉</h2><p>日历上的倒计时，一点点减少，只是太阳依旧如往常一般东起西落，包括那呱噪的蝉鸣。一切的迹象都显示着这世界依然安然无恙。<br>这是无法否认的第四天。</p>
<p>匆忙模样的他立在门前，反倒让我有些狼狈。少见的不待我招呼，便已迈入。只不过他的身体却开始漂浮起来，因为今日的室内是那日太空风景的延续。<br>“大概出了些什么问题。”我尴尬地挠了挠头。“按理说，水星、金星什么的会爆炸吧。”<br>不顾他的疑惑，我自顾自地说了下去。比如加速器撞出了什么不得了的东西啊，生化危机啊，世界大战啊，基因变异啊，为什么这么和平啊!?<br>其他到底还有什么变量啊?明明都计算好了才对。我不断拍着头懊恼，试图掩饰自己的尴尬。</p>
<p>“真的只是内部原因吗?”他轻声问道。<br>“你的意思是还有外部因素？作为银河系边缘的文明，你们不过是将将被发现的遗迹文明罢了，若是早先有你们那些脑补的外星人入侵，我们应该早就知晓了此地才对。至于什么伽马射线爆、超新星爆发就更别想了，这一荒芜的地带一直都很和平，残留的迹象也与那些毫不相关。”<br>“会不会是这些星星?”他伸出手去，把周围的几颗星星揽来。</p>
<p>“啊，星星的确是我偷工减料了，毕竟作为课题作业也太麻……不管这个，但是这些你们根本没有探索到啊，而且星图我也是严格地按照真实情况排布而成。”我挥手将眼前的星点们缩小成图状。<br>“你们是最近才发现我们毁灭的文明，那么之前的星图完全正确吗?”他继续表达着自己的怀疑。</p>
<p>“就算不正确也当差不多啦，文明毁灭的奇点可不会因为几颗星星的排布而改变。”<br>“可以给我看看此前的星图吗?”他仍旧锲而不舍地追问。</p>
<p>我无奈地将星图以亿年的尺度向前回溯，他则划出投影设备比对着不同。<br>“这里，为什么太阳系不在?”他在图上点出一个位置，回过头来。<br>“当时还未怎么探索银河系的边缘地带，所以也因此没能发现你们的文明啊。”我不在意地回道。<br>“如果太阳系此前就不在银河系呢!？”他大胆地提出了设想，那日回去后他应该思考了很多吧。<br>嗯？我有些不解。</p>
<p>“也许太阳系本来就不在这里，而是因为某种原因使得它的轨迹恰好途径银河系的边缘而被其引力所俘获。而在那时人类的文明便早已毁灭了。这样你所布置的星图与实际情况就会大相径庭吧!”他面红耳赤的样子显得十分认真。<br>“唔，照你这么说，以其公转速度和假设的时间点推演出原先的情况倒也未尝不可。”<br>我催动起程序进行运算，包裹着太阳系的奥尔特云绕银河系反向旋转，并开始脱离。他双目紧盯着投影，担心着自己的猜测。</p>
<p>不断远离着壮阔银河的奥尔特云像是遇到了阻塞，开始放缓起来。<br>“黑域！”我惊呼道。<br>显然他有些不解，期待着我的解释。</p>
<p>“那是宇宙的洼地，陷进去的一切都不会接收到外界的光线，就像是被空间扭曲发散开。你说对了，我的星图完全错了，因为那里根本就没有星图。”我拍了拍他的肩膀，以示鼓励。<br>“但是仅仅就因为无法到达的星光?按理说应该不足以影响奇点吧。”我还是不怎么相信这个事实。<br>“别太小看人类对星空的幻想了。”他反击道，并从书架上取下他此前在看的书本。<br>《海伯利安的陨落》，我随意地扫了一眼。</p>
<p>“这本书我很喜欢的哦，关于宇宙中人类与幻想的故事。如果没有星空的话，它也未必会诞生吧。在那个已经毁灭的地球上，可不会有牛郎织女的浪漫，也不会有星座与星云的绮丽，更不会有永不寂灭的北辰，哪怕是丝毫包含星宿的传说都会分崩瓦解。如果剥夺了人们这片寄托了大半的好奇、幻想，乃至信仰的星光后，那个世界还能剩下什么呢？”他的话语中像是带着对现今的庆幸。</p>
<p>正是因为能够借此认识到自己的渺小，人类才能够不断奋发前进的吧。<br>我有些不好意思打断他的感慨，但我想还是不得不说出来。<br>“其实你猜的到吧，无论模拟成功还是失败，世界毁灭与否，这个世界终究还是会消失。因为我差不多该重启这世界，推算方才新的猜想了。太阳系是如何离开这片黑域的，我还并不知晓。不过谢谢你的提示啦，小仓鼠。”<br>他没有再反驳我的称呼，像是在低头做着自己的思考。</p>
<p>“当人类开始仰望夜空时，空无一物的世界会让人失望吧。”他的声音越来越低，像是只说给自己。<br>一开始就没有连其存在都不知道的东西反而是不会失望的，失望的只有拥有过却又失去的东西罢了，这才是人类啊。这样的话，我还是没好意思说出口。<br>“不过总而言之，谢谢你让我能够拥有关于这片星空的幻想。唔，还是应该照惯例说谢谢款待吗？那么你开始吧。”他抬起头来，带着微笑正视着我。</p>
<p>我看得出他对此前自己的秘密只口不提，但是真的以为能够隐瞒过我吗？当然现在追问的话也太过分了，我拿起浮在空中半睡半醒的小仓鼠交予他，“那它就送你照顾了，再见。”<br>“你至今都没有告诉我它的名字啊。”他无奈地盯着手中的小仓鼠苦笑道。<br>“有了名字，再分别的话，会更让人伤感的吧。”我将这副虚拟的身躯散去，准备开启下一个世界的轮回。</p>
<p>旧世界如所料般，分崩离析。</p>
<h2 id="无尽的交响乐章"><a href="#无尽的交响乐章" class="headerlink" title="无尽的交响乐章"></a>无尽的交响乐章</h2><p>年末，我向学院提交了假期的课程报告，一种生活在黑域中的人类生物，因害怕资源匮乏而在文明的末期试图实现戴森球<em>（注：戴森球是一种设想中的巨型人造结构，由弗里曼•戴森先生提出。这样一个“球体”是由环绕太阳的卫星所构成，完全包围恒星并且获得其绝大多数或全部的能量输出。）</em>，却因计算失误，引爆行星以制造材质的过程中使得星球所在轨迹偏离，而导致整个星系平衡破坏开始相对移动，最终脱离黑域。但其上的生物也在脱离的过程中被引力场与辐射所灭亡。</p>
<p>课程结题后，我突然回想起那如小仓鼠般的人类，那日告别时说的可是再见而非也别，因为我知道会有那初见般的重逢。虽然渺小，但是似乎也有属于他们的独特之处呢。</p>
<p>那么就让我看看，拥有星光与所谓幻想的人类究竟能谱写出怎样华丽的乐章吧？<br>当然，还有他未言的秘密。</p>
<p>于是，停留在我室内角落的信息流再次开始流转，亘古不迭。</p>
<blockquote>
<p>“呐，你说世界上真的有外星人吗？”我轻声提问道。<br>“也许，你手中的仓鼠就是哦。”他笑着回过头来，如往常一般。</p>
</blockquote>
<hr>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p><a href="/creation/novel/the-common-hamster/">续 - 仓生</a></p>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>短</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>回声</title>
    <url>/2017/02/04/creation/novel/echo/</url>
    <content><![CDATA[<p>1</p>
<hr>
<p>为了协调世界时与原子时的偏差，每隔数年，国际计量大会便会在一年的最初或是年中为世界时加上 1 秒，而这一秒便被称为闰秒。<br>今年的闰秒正是定为 2017 年的年初或者说是 2016 年的年末，也就是 12 月 31 日 23:59:60。<br>网上的新闻如是报道。</p>
<a id="more"></a>

<p>我为这多出的一秒思考过很多种用法，用某游戏里那西部牛仔的角色高喊着午时已到，又或是仅凭此复习完一学期的数据结构，再不济也可赠予长者。最后我在床上花了整整一个小时来思索这多出的一秒该如何花费，直到我合上双眼，听四周变得寂静。<br>静的有些浮夸。<br>明天便是元旦，大学在本地的两名室友早已回家，还有位也在这大好时光陪着身边的佳人。说白了，此等佳节留守阵地的不过仅我一人。但即便少了平日的闲谈或是鼾声，却还是静的有些不可思议。<br>走廊的灯还亮着，趁此起身方便。<br>噼里啪啦，噼里啪啦，原本沉寂的氛围突然炸起鞭炮的响声，倒是让人吓了一跳。不是外环线内禁止燃放烟花爆竹吗？我走到阳台探出头张望着。<br>不对，好像有哪里不对，窗外鞭炮声此起彼伏，宛若新年。<br>不知安在何处的喇叭开始在四周响起，干脆又无情感的女子合成声毫无停顿地从中传出，欢迎大家来到闰纪元。这里是闰秒的世界，也就是世界时与原子时所产生的差距，各位正是被禁锢于此。<br>喂喂，好像是什么不得了的展开啊。<br>“世界时的增加意味着原子时的停滞，就犹如时间撞上了壁障，不再前进。而……”<br>“别讲那些我们听不懂的啊，困在这是什么意思啊？”不知是谁的插话声也从喇叭中传出。<br>“困在这个时间静止的世界。”<br>我还以为只不过是事先录好进行解释的电子合成声竟停顿下来，作出答复。<br>“因为陷入睡眠时的大脑电信号的传递速度极为接近光速，根据狭义相对论公式计算……”电子声继续解释道。<br>“别那么多废话了，到底是多久啊？”不耐烦的声音再次传来。<br>“永远。”电子合成声，用其独特的声音保持着波澜不惊。<br>……<br>“搞什么啊？”<br>“大晚上的开什么玩笑？”<br>“吵什么啊，让不让人睡觉了！”<br>……<br>突如起来的嘈杂抱怨涌来，但很快又消失而去，显然传声的喇叭已被关闭。但我的睡意也拜此所赐，早已全无。这意味着，今后，我们将在这个世界继续生存下去吗？不对，根据解释，大概现在就是处在睡梦中吧，毕竟什么稀奇古怪的梦都是存在的，对此我也未过于讶异。<br>我摸了摸口袋，手机还在，想着不如到楼下的自动售货机买点饮料压压惊。同时捋起袖子，看了看腕上的手表，23：59。<br>只是那电子表上光点组成的数字 59，直到我打开支付宝幸运地买下最后一罐可乐，再拉开易拉罐，品尝其中饱满浓缩的二氧化碳时，也没有发生丝毫变化。包括打着嗝的阶段。<br>梦里果然总是觉得梦里的东西都真真切切啊，这汽水，这嗝，显然不亚于现实的舒爽。遗憾的是这支付宝的余额也与现实无二，不过都花了也没事吧。梦里就是要好好享受嘛，若是此良辰美景再得一佳人共度春宵，便再好不过了。<br>我拉开门，走出寝室楼，偌大的校园，仿佛仅我一人。身后的宿舍楼尚有着走道的微光，而门外的道路却是暗黑一片，隔着老远方才有盏残留的路灯照亮着四周，两边的树木也因树叶的脱落而如张牙舞爪一般，更为可怖。<br>我在道路中大步地向下一盏路灯迈进着，若是这般梦境便感到为惧，岂不是自己都要为自己耻笑。只是这寂静中陡然现出一丝风声，草丛也随之晃动。迅捷的黑影在我眼前闪现，向我面门扑来，还不及反应，草丛中似乎更大的黑影也直起身来。<br>“小豹回来。”清脆的叱声喝住正欲在我脸上肆虐的怪物，我也得以直起身来，正视起眼前。一只肥肥胖胖的黄色斑点猫，在我眼前挥舞着双爪，却因为我远远地抓住了它的腋下，短短的爪子怎么也抓不到我的面颊。<br>“不好意思，给您添麻烦了，小豹有些怕生。”<br>喂，怕生还这么张牙舞爪的，有点身为猫的矜持好不好，还有除了这身皮毛，到底哪点像豹了啊喂，豹要肥成这个样子，会被物竞天择掉的吧！我正准备将自己因惊吓而产生的满腹牢骚泼洒出去时，却看到了一副熟悉的面孔。<br>她撩起被风吹散的些许发丝，挂在耳边，从我手中接过那只肥胖的猫儿，连声道歉着。<br>“夏学姐？”我一时有点失神，眼前的人儿身着暗色的呢大衣搭上白色的围巾，齐肩的短发包裹着带些歉意的面容。总感觉比印象中要更为年轻些，现实中应当是长发翩翩才对。<br>难不成我的内心真的有某种特殊的癖好？我摸着胸口质问自己。难道我真的是……内心还在独自挣扎。<br>“你认识我？”她似乎有些疑惑，怀中抱着的猫儿也依旧怒视着我。<br>“咦，你不记得我了吗？”即便对于身处人际交往底层的我而言，这样的话语也着实有些伤人。“新生入学大会上，听过您的讲话。还有那个，以前，我还帮忙修过你们广播社的电脑来着……”好像都不是什么值得夸耀的经历啊，我边说着边低下头来。<br>不过，在我的梦境世界中，可都无所谓了。<br>“我喜欢你，可以和我交往吗？”我面色平静地抬起头，说出大概一辈子也不会有勇气说出的话语。<br>但借着昏暗的灯光，我还是能看到她的脸色红到脖根。<br>好像说出了很让人困扰的话语啊，可是这个那个这种梦，不是应当有规划好的展开吗？<br>正当我想要挠头掩饰尴尬之时，远处叮叮当当的自行车铃声传来，在安静的校园里显得格外明显。那正奋力蹬着老式二八杠自行车的人，甩着白色毛巾向我们打着招呼。<br>这不是前来救场的时机吧，好歹让我先知晓答复啊，还有接下来美好的展开。<br>“我是这片地区的管理员，有什么问题就让我来为你解释吧。”停好车的管理员，身着老式的西装，套着黄色马甲，摆出新手指南的样子，准备排忧解惑。“小夏也在啊，这么晚了多穿点衣服，注意安全。”<br>注意安全，是指要提防我吗？<br>“嗯，王叔好，方才小豹被那动静吓着跑了出来，我出来找找它。”<br>一个外表不过十五六岁的少年，摆着一副老成的样子，与眼前的少女交谈着。<br>这个世界果然哪里不对。<br>“小伙子，怎么称呼，今年芳龄？”<br>“小女子王日天，年方十八，貌美如花。”我憋着气尖着嗓子答道。“您老贵庚？”<br>“哈哈，别生闷气嘛，别看我这样，其实可比你大多了。”少年也并不在意，发出爽朗的笑声。<br>“听了此前的广播，你也应该大致知晓了现在的境遇。这个世界便是徘徊在闰秒之间的世界。我是这边地区的管理员，就是负责给你们这些新来的孩子解释啦。你看，如果把时间看作一条轴。” 他从车篮上取出纸笔，画出一条直线，似乎深谙此道。“它的前进也会受到阻碍。”说完，他拿起笔在横向延长的轴上划下一条竖线。<br>熟练的动作与话语像是某邪教传销。<br>“那么想象一下如果乒乓球碰到墙壁的话，会怎么样呢？”<br>“弹回。”我还是给了点面子，稍微回答了下。<br>“光线呢？”<br>“反射。”<br>他向我竖起大拇指，大学生就是厉害。喂，这是小学级的物理常识吧，我心中暗诉道。<br>随后他又在竖线的左边数厘米处，再次划下一条竖线。“那么这样呢？”<br>不待我回答，他便自顾自地将笔在两边的竖线来回移动，画出竖向的长长波浪线。<br>“不断反弹。”<br>“如果光线在绝对光滑的两个镜面间，不考虑能量损耗的话，它将会一直反射下去。也就是说，不考虑时间的损耗，时间这条线也会一直反射下去。”<br>与此同时，他在左边竖线下标上世界时，又在右边的竖线上标上原子时。差距则标为一秒。<br>“而实际上当这一闰秒时间的损耗结束，马上就会有下一闰秒的时间补充上来。世界也随着下一闰秒的新人加入也就是你们而再次被刷新。”<br>“这是至今支持度最高的推测，但是时间壁障我们并不知道是如何产生的，其间仍旧有很多无法解释的东西。”<br>“而不幸在此刻沉入梦乡的人，会因为大脑瞬间的信息传递速度接近光速，而同时与碰上屏障的闰秒这般，也得到相同的待遇。当然，被困在闰秒世界的东西按理说只有这个。”他拿起笔，指了指自己的脑袋。“现实中的我们，现在应当仍旧是处在睡眠的那一刹那，也就是 23:59:59。刹那即永恒。”<br>“等等你说我们？”四周的一切似乎有点真切，难道这真不是我的梦乡。一想到方才自己出格的话语就有些羞愧难当，脸仿佛也要烧起来一般。<br>“是的，我是上上……不知道多少次前的闰秒被困在这里了。这个世界中我们的存在来源于自我认知，因为时间的反向形式，所以自我认知也开始反向发展，年龄不断倒退，身体开始恢复成年轻的模样。别看我这样，我好歹也是三十岁的时候便进来了。明明正要成为父亲，却连孩子的名字都还没想好，就被困在这里。”<br>他说着说着像是要想起悲伤的往事，同时像个孩子一样要哭出来。难道心理年龄也会倒退吗？不过看着十五六岁的孩子自称父亲果然还是很奇怪。<br>“也就是说，剩余的寿命等同于年龄？”我想了想比较关心的问题。<br>“没错。”<br>“那如果…结束的话，会怎么办？”<br>“大概是意识迷失在时间的洪流中，现实的身体则是变成植物人或者猝死之类的吧。”<br>作为程序员，请好歹也给我猝死在电脑前的尊严吧。我心中暗自祈祷道。<br>“不过还好啦，在这里你也不用担心什么，柴米油盐生活用品一应俱全，这些资源都来自人们残留的共同认知。当然，托你们的福，带来的新的认知，很多东西也焕然一新啦。”他踮起脚尖，拍着我的肩膀安慰着我。<br>“对了，我带了俩苹果。”他将双手伸进扁扁的口袋，像是要掏出什么。随后，两个大大的苹果便被他掏了出来。<br>“尝尝吧。这可是我小时候最喜欢的味道。”他伸出双手，将苹果分别递给了我和学姐。“怎么样，刚刚你真以为我的口袋里放着两个苹果吧。”<br>“嗯？”他在说什么傻话。<br>“其实我来的时候就是口袋空空啊。”他把两边口袋翻了出来。<br>“不对，还有一个忘记拿出来了。”说完，他将口袋翻了进去，又摸着摸着摸出来一个苹果，自己啃了起来。<br>“物体认知。”他啃着苹果解释道。<br>“喔喔，简直是神技啊！这就是认知的作用吗？”我好像有些明白了，急忙掏出手机，打开支付宝，开始冥想起来。<br>遗憾的是，余额并没有什么变化。<br>“哈哈，不要着急嘛，这个还是要多加练习才行的。况且你自己内心，其实还是认为自己刚刚是在妄想吧。这种事，要想实现，最先要能够欺骗自己才行。当然也可以靠别人的认知给予助力。”<br>“欺骗自己？” 我开始望向少女怀抱着的猫儿，怀疑起来。那它究竟是真的存在呢，还是只不过来源于少女的认知。<br>“对，其实与其说是欺骗不如说是更加相信自己。这个之后再教你啦。说起来，现在那边正在举行庆典哦，要不要过去看看。今天可是个不错的日子，因为没有时间概念，我们都是将下一闰秒的到来当作春节来过的。大家正在那边敲锣打鼓放鞭庆祝呢。”<br>“好吧。”我勉为其难的接受了这个世界的各种说法。这样的世界应该也不用担心鞭炮便能引起的雾霾吧。<br>“其他事情就边走边说吧。对了，我姓王，你叫我老王就行了。要是最近疑惑比较多，我搬来你隔壁住一段时间也没问题……”<br>噗，嘴中嚼着的苹果差点被我吐了出去。脑内迫切地想要移除观念中对某个词语的认知。<br>“那个，王…王日天同学？我叫夏草儿，你此前所认识的可能是我的双胞胎姐姐夏茵儿。”<br>“咦。”我不禁发出惊叹，至今从未听得学姐说过还有个妹妹之事，不过想来，也是因为妹妹遭此变故，而不愿提起吧。不对，更多的是因为我身处大学生底层的交际关系才对。<br>还是不对，还有更要紧的事情。<br>“啊啊，我不叫王日天啊，刚刚只是开玩笑的啊，你听我解释啊……虽然我姓王，但其实……”<br>“认知已经成形了啊，小伙子。”老王踮起脚尖，又拍了拍我的肩膀。“不过我倒觉得其实是个好名字，你看字既对称，又霸气，如日中天。”<br>喂喂，您的思想认知是二十年前吧。<br>“放心，来到这个世界就意味着和过去告别了，这里我们习惯以姓氏加上年龄来称呼。王字里恰巧又藏着十，不如就叫你王八吧。”<br>“那你还不如叫我小王吧。”<br>扑哧。身旁的夏草儿也忍不住笑了出来。<br>“听小夏说，她是 17 岁，你也可以叫她夏十七或者夏七。”老王热心地解释道。<br>不对啊，和夏学姐是双胞胎的话，年龄至少应该和我相仿或是比我略大才对。<br>“那个……”我将脸偏向一旁，疑惑地想要询问道。<br>“十七岁哦，在这里岁数当然不会增长啦。不介意的话，就叫我小七吧。”微笑的面庞在等待着我。<br>“？不，那个我想问的是……待在这里……”<br>“我是永远的十七岁哦!”<br>“……是，是么”<br>情况有些不妙。<br>也许会问出这种问题才是我待在底层交际关系的原因。</p>
<p>2</p>
<hr>
<p>“嚯嗬嗬”，我抿着嘴，努力不让自己笑出声。虽然记不清此前余额到底是多少了。但应该变多了吧，应该，不对，怎么可能给变多了，感觉数额没以前多啊，我依旧努力地欺骗着自己。<br>丢三落四的性格在这里反倒意外地好用。比方记不清支付宝的具体余额，再在纸条上写上更大的数字，等到好像真的完全想不起余额时，再将其误以为真，便可偷天换日。再或者，明明手机忘带了，却自以为一直随身带着，手机也会出现在身旁。当然如果有他人帮忙的话，成功率就会大大提高。<br>“这个叫支付宝的在这里根本没什么用吧，为什么你还是这么高兴啊。”老王盯着一脸傻笑的我发问。<br>“虽然没有网，自动售货机还是可以用的啊。”我把方才买来喝了一口的可乐放在桌上。<br>如你所见，这个世界的一切，都来源自在这里生活的人们残留的认知印象。没有快递员，没有外卖小哥，重要消息则通过电视塔的广播传达，生活自给自足。毕竟偌大个城市，也不过数百人居住，住所也是任意挑选。当然，若是想要自己搭建的话，就需要众人的帮忙了。俨然一个乌托邦啊。<br>在这里待了有几个月又或者可能是几年，时间则是毫无概念。不过认知技巧好歹也熟练起来，许多琐事处理起来也倒方便。有时想着就这么生活下去似乎也不错。<br>只是这时桌子开始慢慢晃动起来，易拉罐里的可乐也撒了一桌。我和老王对视了一下，便同时冲向楼上。<br>“没事吧。”<br>“没…”靠着床边坐起的小七，面色苍白。小豹也像是很担忧地蹲在一旁。<br>“又做噩梦了？”<br>“嗯…”<br>“姐姐呢，姐姐在哪里？”小七突然像个孩子一样不断追问着我们，眼眶里也盘旋着泪珠。<br>……<br>“放心，我们都在。”同样像个孩子的老王坐在床边，拍了拍总算安抚下来的小七肩膀，反倒显得意外地可靠。<br>随着年龄的倒退，小七的身体也同样开始变化。只是小七似乎曾经有着很严重的心理疾病。而因为这个世界的本质来源于认知，所以她的所思所念也会对现实产生颇大的影响。邻里也是颇有微词。方才的震动说来只不过是小打小闹。<br>“再这样下去的话，恐怕只能交给市长来定夺了。”刚从房间退了出来，老王便压着声音，担忧地对我说道。<br>“有那种传言在先的话，多半结果是流放吧。” 听说，北京前几年曾被一个精神病搅得天翻地覆，毁了近半。 “但是如今，又还剩下几座城市呢？”<br>城市的建筑也同样来源于认知，这里的世界人口又很容易出现负增长，而随着人数的减少，维持城市认知的人数也会减少，当认知降到一定程度时，整个城市便也不复存在。上海作为中国人口密度最高，认知程度最广的城市，加之周围失去城市的人员也聚集在此，方才残存至今。而其外围则是一片虚无。<br>未曾去过的景点，未曾知晓的镇名，以及未曾了解的一切，也都不会存在。<br>我想我有点想念起自己那不知名的家乡了，仅仅残存于我脑海的这点认知是绝对维持不住那个小镇吧。如今，那里应当也不过是一片空白罢了。<br>我把剩余的可乐一饮而尽，易拉罐准确地抛进了一旁的垃圾桶中。叹起气来。<br>“哟，想家了？”老王像是一眼看穿了我的心事。“不过也是，我也想啊。”<br>“原来老王你不是本地人啊。我还一直以为…”<br>“还不是当初出差的时候来上海，到宾馆倒头就睡，结果遇到这码事。”老王接过话，也躺倒在安乐椅上晃了起来。“不过还是家里好，这儿人生地不熟的。”<br>“但现在也多半不复存在了吧，对了，老王你哪儿人啊？”<br>“江苏”<br>“巧了，老乡啊。”我和老王相视一笑，如重逢的故友。虽然我俩年龄差的大，但聊起来倒是没什么代沟。<br>垃圾桶晃动着倒下，将我扔进的易拉罐再次倾倒出来。老王的安乐椅也震的厉害，吓的他直起身来。墙壁与天花板旋转着，显得像是我在跳舞。<br>谈笑间樯橹灰飞烟灭。<br>我想这句诗大概是我此刻所能想到的最贴切的描述了。</p>
<p>3</p>
<hr>
<p>那一晚，我们曾经搭建好的三层小洋房在小七的负面精神影响下分崩离析。小七被市长举行公投判处了流放。所谓的市长便是最初向我们解释的电子合成声，不过似乎还未有人见过她的真面目，所有人都称在自己来此之前她便在了。没有人知道她到底活了多久，甚至与她的一切交流也都只是通过广播。<br>我和老王搬到城市外围，负责照顾起小七。虽说各种事宜有些麻烦，但好在大家也帮忙建了住所。随着时间的改变，小七的病情也在逐渐好转，睡醒害怕得找姐姐的次数也开始减少。<br>不知又过去了几个月还是几年，我的身高开始缩水起来。小七也恢复的差不多了，如今的她俨然一个青春期的活泼少女。<br>我想我也大概快回到青春期懵懂的那个时期了吧，相处了这么久，望着身边的人儿，也忍不住有着告白的冲动。<br>“小七，我喜欢你，虽然我可能对你只是一直保留着你姐姐的印象，但你和你姐姐并不一样，经过这么久的相处，我发现我果然还是更喜欢你，如果可以的话，请和我交往吧。”这时以我的身高望着她，已经不再需要低头。<br>青春期的懵懂让我的心扑通扑通加速地跳个不停。想起那当初第一次见面的告白也不过恍若昨日。已变至小学生模样的老王则在一旁嬉笑着起哄。<br>她也羞红了脸，含蓄地点了点头。只是下一句话却让我和老王如坠冰窟，僵在原地。<br>“可是，我是独生子女，并没有姐姐哦。”<br>“怎么会？你忘了吗？你姐姐呀，就在 M 大学上学，而且还是广播社的社长。”我感到有些混乱，大声地问道。<br>“不会的。我从小就是独生子女，小时候我还经常问爸爸妈妈为什么不再生个妹妹陪我玩，他们还总是笑而不语。我倒是加入过广播社，不过并不是社长。” 她对我的反应也很惊讶，急忙解释道。<br>“不对，不对，一定有哪里不对。”我拍着脑袋，想要理清眼前的状况。<br>“你的名字？”我盯着她追问。<br>“夏七？”<br>“不对，来这个世界之前的名字？”<br>“夏茵儿”<br>……<br>“夏草儿呢，那草儿是谁？”<br>“我不知道，不过名字我喜欢。”她晃晃脑袋思考了一番，又望向我，清澈的眼睛中看不出丝毫说谎的样子。<br>老王扯了扯我的衣角，让我意识到自己有些失态。<br>“对不起。”我道了声歉，便跑了出去。老王也在后方跟着我。<br>“郁闷的话，我带你去个地方。”老王拽着我的衣角说道，只是这时的老王倒像个缠着哥哥撒娇的弟弟。<br>“嗯。”我表示默认，跟着老王走着。<br>心里却在盘旋着一个个问题。<br>“小七是茵儿的话？她此前的心理疾病是人格分裂？可那样的话我在现实世界中遇到的学姐又是谁？”<br>因为被流放的缘故，周边几乎没有像样的建筑，但离海边倒是格外地近。<br>老王停下来背对着我，将目光投向朴素的大海，夕阳在其后为他拉出长长的影子。“平日里，我觉得苦闷的时候，便会来在这里大喊，发泄一下。这个世界总有很多不合理的地方，但最好的方法就是接受它。”<br>之所以说朴素，是因为这里的海面永远都是风平浪静，除了一望无际的蓝，便是广阔无垠的天在远处将海平面截断。大概是因为这是大家对海的大部分印象吧。<br>“小七，你是谁？”我大喊道。<br>是谁…<br>谁…<br>回音从远处传来，倒像是在质问我一般。<br>“那一头便是认知的边缘。就像是墙一样将海面阻断，所以声音又被反射回来了吧。”<br>阻断…反射…<br>“就像这个世界的时间一样吗？”<br>“嗯。”<br>时间…回声…<br>“啊…，等等，我好像知道了……”趁此我又将胸口再次填满，对着看似无边的大海大声喊道。“我明白了！”<br>一旁的老王也像是吓了一跳，转过头来，晃起影子。<br>白了……<br>了……<br>回声悠久不散，如傍晚的夕阳，再次向我扑来。</p>
<p>4</p>
<hr>
<p>“看。”我用认知出的纸和笔，画出两条竖线。但夹在其中的却不是波浪线，而是像 wifi 一样的一道道波纹。<br>“要比喻的话，时间既不是乒乓球也不是光线。”我顿了顿，拿起笔指着 wifi 一样的波纹，“而是声波。当然也不排除像光那样波粒二象性的可能。”<br>“不一样也是反射吗。”老王和小七有些不明所以。<br>“错，我在这个房间打开手电筒，你在隔壁看不到光亮。但是如果我开着音响大声放音乐呢？”<br>“扰邻。”<br>咚。钝物相击的声音。<br>“听得见。”老王改口道。<br>“对。”我向老王竖起大拇指，“小学生就是厉害。”老王挠了挠头，有些不好意思。除了有点痛。<br>这个时间的屏障会拦下我们的部分思维，但振动照旧通过，所以这个世界外的时间也在正常流逝。而在这里的我们，不过只是思维被反射后残留的回声。我们真正的思维应该还在现实世界正常运作。<br>所以现实世界的我依旧会认识成为学姐的小七，而夏草儿则是小七因为年幼的心里疾病复发加之突然来到这个奇怪的世界，为自己而幻想出来的身份。<br>“这个解释稍微有点合理。”老王点点头。<br>小七面色则有些尴尬，不过我想情况也大致能够猜测出来了。一直是孤身一人的小七，大概在这个年龄段经常受人欺负，于是就幻想出了一个妹妹会来陪伴与保护自己吧。<br>“放心吧，今后我和老王也都会陪着你，不再让你孤单一人的。”我握着她的手，感觉自己好像说了什么很帅气的台词。<br>“喔唷，说的这么暧昧，还不如早点结婚生孩子吧。”老王在一旁起哄道。“名字我都替你们想好了，男孩呢就叫王昊，女孩呢就叫王音。怎么样？依旧是对仗哦。”<br>“你说什么？”我心里开始犯嘀咕。巧合吧，一定是巧合吧。<br>“不喜欢吗？那我在想想。”老王看到我的反应也有些慌张，像是犯了错的孩子低下头去。<br>“不是，你刚刚说王昊，王音？”<br>“对啊，昊音，广阔无垠中那回荡的淼淼之音，我觉得以此为名倒还不错啊，你看昊是广阔无垠的意思，拆开来还可以看作日和天，如日中…”<br>“老王，你叫什么名字？”我打断他的解释，追问道。<br>“王三十…”<br>“不对，本名？”<br>“王志昱”<br>“父亲姓名”<br>“王京山”<br>“祖籍？”<br>“江苏南京”<br>……<br>“查户口啊？”虽然老王在我的逼问下，倒豆子一般全吐了出来，但还是免不了想要抱怨一下。<br>只是我倒开始考虑起自己是否应该坦白现在的情况了。<br>“那个，老王啊，我叫王昊，我妹妹叫王音，我父亲叫王志昱，爷爷叫王京山。家住江苏南京。”<br>“诶嘿，巧了啊。”老王回过头来，对着我呵呵笑道。<br>“巧了哈。”我也呵呵地回应着。<br>小七也大概明白过来怎么回事了，在一旁噗噗地笑着。<br>“儿子啊”<br>“诶…”<br>“儿子，儿子，儿砸啊”<br>……</p>
<p>5</p>
<hr>
<p>自打挑明了身份，小学生模样的老王就整天叫着儿子，想要占我的便宜。果然坦白就是个错误的选择。<br>“儿子帮我削个苹果。”他斜躺在安乐椅上，将认知生成的苹果向我递来，整个身躯也不过只占了椅子一半的位置。<br>“滚滚滚！”我边抚摸着小豹，边甩手拒绝并扔了个认知出的水果刀过去。说起来，这小家伙倒是没什么变化啊，肥的像个毛球。难道说，它真的只是小七所认知出来的东西吗？<br>“我说，怎么能这样对待长辈！现实中我一定也给你削过不少苹果吧。好歹孝顺一下嘛！”<br>“胡说，分明连点父亲的责任都没负起来！”<br>“诶，那好好说说父亲的我是什么样的呗！”<br>哗哗，喇叭开启前的杂音打断了我们的话题，却让我异常感激。<br>“我需要你们的帮助。”听到不知多少次的电子合成声从喇叭中传出。<br>我抬头望了望四周，又表示疑惑地伸出手指了指自己与小七和老王。“我们？”<br>“对，王三十，夏十七，王…八”市长大人读到我的名字时稍微停顿了下。<br>“喂喂喂，不要只漏掉我的十好吗！”我大声向其表示抗议，但似乎并无效果。<br>“那么，市长大人，有何贵干？”<br>“拯救世界。”<br>“说人话。”<br>“我要死了。”<br>……<br>市长大人的办公室，坐落于东方明珠电视塔的最顶层，便捷的广播通知正是拜她的认知方能随地可用。<br>建筑来源于认知，但建筑的内部情况却很少有人知晓，所以一般的大楼内部，也不过只是空荡荡的一片。但这里的内部却不同寻常，玻璃窗、升降梯以及一切的细节皆似与现实的记忆并无二致。很难想象会有足够的人能维持住这么多关于这座电视塔的认知。<br>“请人帮忙，好歹有点请人帮忙的样子吧，至少现出真身总行吧。”我对空荡荡的顶层喊道。<br>透明的玻璃地板开始喀喀作响，并从其中央升起了一个高约一米宽约半米的水晶柱。<br>“你要说，你就是那根粗粗的柱子吗？”我开口想要挖苦道。<br>“可以这么理解。”<br>话音刚落，水晶柱周围的光华散去，留下如同透明鱼缸一样的东西，还有一个暗红色的块状物沉浸其中。<br>缸中之脑么，跟我玩这出啊。大概是因为被流放过的私人情感与外观不佳，我对眼前之物，格外地没有好感。说起来，这家伙究竟活了多久了啊？<br>“由于自我认知更多的是对躯体的影响，所以为了避免变回婴儿的无力状况，我将自己的大脑取了出来，并决定以这种形态继续存在下去。”<br>“那么这和你要死了的说法有何相干？而我们又凭什么帮你？”<br>“如果我死了，这座城市也会消失。”不管说出什么话语，她的语调都没有丝毫变化。<br>“意外地自大啊。”<br>“随着每次刷新的世界信息量越来越大，以及人数的减少。实际上这里已经是这个世界残存的最后一个都市了。你以为真的仅凭生活在这里的数百人，便可以维持住如此庞大的城市认知吗？”难得的听到了反问的语气。<br>“超忆症，我对所有曾经见过的东西都历历在目，在舍弃了年轻时大部分无用记忆的情况下，我维持住了我的生命，以及这座城市的认知。”<br>“所以说，你到底想要我们做什么？”<br>“我将时间认知拉的很长，所以我的寿命也会意外的长，但那并不是无限。上海海关大楼，你们知道吗？”<br>好像是存留在外滩的古董建筑。难道说，从它建造的那个时候，这家伙便已经在了吗？可是这座电视塔不是还没那么久远吗？<br>“可以说，这座城市的认知便是我的本身。而海关大楼上的时钟便是我的时间认知具象化。我希望你们能将已经接近 12 的分针扳回一刻度，那时我的时间认知也会重置，我也能就此继续守护着这个城市。”<br>“在这个世界里，也不算是什么很困难的工作吧，那为什么偏偏要找我们呢？你应该还有什么没说清楚吧。”这种能成为英雄的重任，应该不会随随便便轮到我吧。<br>“时间的多普勒效应。”她停顿了一下，继续解释起来。<br>物体辐射的波长会因为波源和观测者的相对运动而产生变化，就像车辆迎面驶来的时候，听到声音越来越高，离去时则反之。时间也是如此。<br>“海关大楼的时钟附近，由于我对时间认知的拉长。你越接近，时间便过的越慢。时钟外时间过了数秒，对时钟附近的人来说便宛若过了几年，自我的身体认知当然也会随之倒退变回婴儿。所以最重要的一点，便是在尚存有身体力量之前，扳动分针。”<br>“喂喂，你是要我去当董存瑞炸碉堡么。”<br>“董存瑞是谁？”她像是毫不知情。“不过不用担心，之所以找你们帮忙，正是因为你们深刻的相互认知，能够为此争取更多的时间，同时就算变成了婴儿，若是完成任务，我也会想办法帮忙让你恢复原状的。”<br>“如何？事成之后，我还可以给你们回归现实的奖励。”此句不啻惊雷。<br>“什么，这也能做到吗？那为什么不把大家都送回去啊？”<br>“这其间自然需要种种的代价。不过你先能完成任务再说吧。”<br>……<br>“成交。”<br>虽说是有着为了挽救城市存在的大义，但更多的是来源于自己的私心吧。即便成功的话，最后实际上也就只有我们三人能够得到真正的救赎什么的。<br>如今三人中身体年龄，最大的莫过于我了，所以理应也是由我来执行扭转分针的重任。<br>“我去吧，总不能让一位妙龄少女和个孩子去干这种事情吧。”我举手道。<br>“你说谁是孩子啊，不过你小子平时吊儿郎当，这种时候倒是意外的有担当啊。”老王哼笑着。<br>“你说谁吊儿郎当了!反倒是你一点身为父亲的样子都没有吧！”<br>“小心我回去真给你起名叫做王八哦。”<br>“喂！”<br>“不过如果真的能够回去的话，请一定要再向我搭话哦！”小七也向我微笑着。<br>好像立起了什么奇怪的 flag。<br>“对了，小七，其实你留长头发的话也很好看哦！来自未来的我的谏言。”<br>“还有老王啊，其实有件事我一直没和你说？不，还是算了……”<br>“你小子还敢耍我啊！”<br>……<br>大家就像早已否定了失败的可能性一样，说着像是准备回到现实而进行告别的话语。</p>
<p>6</p>
<hr>
<p>任务的分配情况是我和老王负责前往外滩附近，而小七则留在电视塔用广播向大家解释情况，并拜托大家为我们在海关大楼外搭建阶梯。因为缺少对海关大楼的内部存在认知，所以与其考虑内部进入，倒不如直接在外围搭建阶梯，并用蛮力扭动分针。<br>明明最后真正得益的只有我们，却要拜托大家的力量什么的。让我内心充满了负罪感。<br>喵哈。一只肥肥的猫儿蜷缩在地，打着哈欠。一向粘着小七的小豹竟也跟了过来。“是在担心我吗？”我蹲下来发问道，但这家伙似乎毫不领情，兀自晒着阳光。这脑子里装的都是吃的的家伙才是什么负罪感都没有吧。<br>——要开始了。<br>在小七那广播天赋的形象描述指挥下，众人帮忙搭建的白色螺旋阶梯拔地而起，盘旋着升到哥特式钟楼的时钟处。<br>要上了。我为自己打着气，开始踏上已搭建完毕的螺旋阶梯,看来这里时间的流动尚还没有差别。钟楼再加上主楼的高度得有近八十米了，即便普通的行进恐怕也要花上十来分钟。说起来，这老家伙矗立在这里也要上百年了吧。市长大人为何不选址于此，而是落址在不过数十年前的电视塔呢？<br>不过话说回来，连董存瑞都不知道的市长大人，为何还能维持住这些后来的建筑认知啊？<br>阶梯已然过半，现在再说自己恐高也是不行的吧，这帮人为何连个扶手都不给为我着想一下啊!时间的流转似乎开始缓慢起来，身体的动作也渐渐迟缓，自己是不是变的更年轻一些了呢？<br>如果真能回去的话，一定要好好问母亲关于父亲为我起名字的缘由和认真向学姐搭话啊！<br>大概还有五分之一。<br>外界像是要凝固起来一样，空间充满了粘稠感，身体像是已经不受控制一样，只能一点一点地挪动。下方的老王还在担忧地望着我。对不起，有些事情还没有告诉你。<br>十分之一。<br>为什么身体变到了小学时代，连那时的记忆也会成堆涌上来啊！<br>“为什么你爸爸从来不来给你开家长会呢？”<br>“没爸爸的野种。”<br>“哟，我的父亲这种作文都写得出来啊。”<br>阶梯还有三级。<br>“妈妈，妈妈，我的爸爸呢？”<br>啊，身体的步伐变小了。要摔倒了。<br>两级。<br>“快点，火势太猛，房屋马上要塌了。”<br>“请务必把孩子先送出去。”好像是老王的声音。“谢谢你。”<br>……<br>“我姓王，就叫我老王好了”<br>老王是谁……<br>想不起来。<br>站不起来，但是还不够啊，那就爬好了。<br>一级。<br>我在这里做什么呢？<br>爸爸妈妈在哪里？<br>对啊，钟，转动它。<br>动啊，动起来啊。<br>我趴在地上，用婴儿大小的手将比整个身体还要大上数倍的分针向回扭动着。<br>动啊，婴儿的身体这么容易哭泣吗？眼泪在眼眶里止不住，啪嗒啪嗒的打在阶梯上。<br>……<br>咔嗒，时钟像是听到了我的请求，将分针向回倒转了一刻度。我也因此趴倒在地，耗尽了所有的力气。<br>“辛苦你了哦，那么你的任务就完成了。接下来，这位少女就由我来享用吧。”<br>“哦，心理残缺中蕴藏着的是多么美妙的认知力量。”熟悉的电子合成声在我耳边响起，一向毫无生气的语调中竟透露着欣喜的味道。<br>好像和说好的不一样啊。你这家伙……<br>但是连怒骂的言语都无法发出，深沉的倦意便向我扑来。</p>
<p>7</p>
<hr>
<p>我好像睡着了？<br>我抬起手腕看了看手表，23：59，只是眯了一会儿吧。喉中有些干渴，不如到楼下售货机买些饮料。<br>“售空啊…去其他寝室楼看看好了…”<br>走在两侧树木张牙舞爪的道路上，我像是知道有什么会发生一样期待着，甚至有种自己是不是刚刚下来买过饮料的怀疑。<br>黑影从草丛中闪现而来，对着我张牙舞爪。后面似乎还有一人也急忙跟着跳了出来，向我道歉。“不好意思，给你添麻烦了。”<br>你谁啊。<br>她撩起被风吹散的些许发丝，挂在耳边。<br>对啊，你谁啊。<br>啪嗒啪嗒的泪水止不住向下落。<br>这位少女就由我来享用吧。<br>不要啊……<br>叮叮当当的自行车铃声从远处传来，穿着老式西装的家伙向我自我介绍。<br>我姓王，叫我老王就好了。<br>你又是谁啊。<br>我希望我的孩子能够像这样茁壮成长，永远健康快乐地生活下去，哪怕以我的生命为代价也在所不惜。熟悉的声音在我耳畔响起。<br>也许这是我此生所听过的最为诚恳地祈祷，与最为真挚的祝福。<br>黑夜切为了白日，让眼睛有些刺痛。猫儿还在眼前张牙舞爪。<br>对啊，这家伙叫小豹来着。<br>身边还有一个婴儿一般的孩子沉睡着，这家伙，谁要你来救我啊，明明都没有好好尽过父亲的责任。不过今天就暂且原谅你不来参加家长会的事了。<br>大概是因为托某个人的认知，我的身体再次成长并恢复了原状。这只猫儿倒是根本没受所谓的多普勒效应影响啊，与第一次见面也并无二致。难道是因为这家伙脑袋空空，根本就不受自我认知逆转的影响吗？<br>当务之急，是营救小七才对，好像那一方有什么不得了的企图。<br>“喔，认知竟然能够影响到这种程度。那么要来找我复仇么。”电子合成声再次响起，像是不屑一顾。<br>“我说，其实你是能够夺取别人的认知甚至时间来据为己有吧。在这里的所有人皆不过如你的养料一般。明明连董存瑞都不知晓的年代，却认知维持出了 90 年代才建造的东方明珠塔。相比什么时间的壁障，倒是你更像是阻拦这个世界的壁障吧。”<br>“那又怎么样呢？蜉蝣朝生暮死而不怨，人世七十寒暑而不足。你又怎能理解思维永存的美妙？说起来，你的朋友的认知还真是美味啊。”<br>“你已经……”<br>“是啊，就这样将脑袋完美的切开再取出大脑，并用勺子细细品尝。那其中的……”<br>“那就没什么可谈的了。”我转身向钟楼顶层的阶梯走回。<br>“等等，你要做什么！”<br>我不再顾遐她的言语，并快步走到钟楼的分针前，用力将其扭动起来。<br>“等一……”<br>不待其说完，时钟便发出了咔嗒一声，分针准确的与时针重合在罗马数字 XII 之上。大地开始颤抖，我看到远处的一片片建筑也随之开始碎裂，并化为无数个多边形散开，当然消散并未止步，铺天盖地的阵容开始向外滩蔓延。<br>“对不起了，大家。”我低声说道。<br>也许这般阵仗过去，所残留的只剩下这里的居民自己所搭建的小屋了吧。而我们却仍旧不得不在这个空白的城市继续生存下去，在这个时间停滞的世界。<br>咚，咚。钟楼尽着它最后一刻的职责响起整点的钟声。<br>“整点了吗？”我听到有人在询问。<br>“自打来到这里，我可没听过报时的声音。”<br>“是闰秒结束了么？”<br>伴随着议论，人们也开始随着消失的建筑消散而去，如同消散的余音。<br>时间停滞的世界啊，原来从一开始就被那所谓的市长大人给骗了呢。时间停滞的认知，说到底也不过只是自己产生的阻碍吧。<br>心中的时间开始流动起来。残存在这个世界的意识回音，便也消散殆尽。<br>余音消散，四面重归寂静。<br>眼前再次变为黑暗，我抬起手腕，紧盯着手表。00:00，时钟的数字跳动了一下，变成了 01。但是不知为何总感觉睡了很久了呢？我拿起手机，想要起身到楼下的自动售货机买瓶饮料。<br>怎么说呢，余额的数字我很熟悉。</p>
<p>8</p>
<hr>
<p>不知为何，本来元旦并未打算回家的我，还是鬼使神差的买上了归家的票，并为父亲献上久违的祭奠。两岁那年，家里发生了火灾，听说是父亲把我举了出来交给消防员，自己却被埋在其中。但小学时，却常常因此有过不美好的记忆，害死了父亲什么的话语也并不是没有听过，我甚至不知道到底应该对他抱有怎样的情感。但我最近总觉得自己似乎听到了他那时心中最美好的祝福，也许就这样活下去本身就是他最诚挚的愿望吧。<br>肥肥胖胖的黄色斑点猫在草丛上懒散地晒着太阳，一向不喜猫的我却突然想要上前摸上几下。<br>有过数面之缘的某位学姐向我走来，不不不，其实是向这只猫儿走来。但唯独这次觉得自己一定要好好搭话。<br>“那个，最近还需要我帮忙修电脑么？”<br>我问出我之所以处于人际关系底端的问题。</p>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>短</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>恋爱证明记</title>
    <url>/2018/10/06/creation/novel/proof-of-love/</url>
    <content><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><blockquote>
<p>对于某位只会与数学打交道并孤苦伶仃至今的理科生来说，恋爱毫无疑问是可望而不可及的世界级数学难题。求之不得，弃之可惜。于是他提出自己的恋爱猜想，并决心证明出解的存在，在所不惜，然世事难料。凄惨之境恋爱之神亦不忍直视，出手相助。</p>
</blockquote>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>古有爱莲说，吾独爱狗尾草。吾之爱，春牡丹，夏青莲，秋紫菊，冬腊梅，均不可及。<br>其无牡丹之富贵，亦无莲之君子，更无菊之隐逸，梅之高洁。</p>
<p>但卿可知狗尾草的花语为何？默默无闻之爱矣。随风飘摇，落地即生，唯生命之坚韧不拔。</p>
<a id="more"></a>

<h2 id="0-题"><a href="#0-题" class="headerlink" title="0.题"></a>0.题</h2><p>阁下若要问恋爱为何物，那么我只能告诉您，恋爱必然是世间最美好而遥不可及且让人琢磨不透之事。</p>
<p>我尝试过用许多方法进行求解，却往往无功而返，以致于如今的我已孤苦伶仃地度过了将近五分之一个世纪。</p>
<p>为什么不将其也列为世界的数学难题之一呢？这令我十分困惑。明明即便是矗立世界顶端并称三大数学猜想的魔王们，也已经被成功击败了两位。</p>
<p>因此，毫无疑问，恋爱是哥德巴赫猜想级的难题。</p>
<hr>
<p>诚然，这世间已有诸多之人品味到了它的甜美。</p>
<p>但那些恋爱的家伙一旦沉迷其中，定然都是吝啬至极，绝不愿与人分享之辈。且即便深究，他们所能交出的答案，也不过是机缘巧合之下，代入偶然的变量，所巧合求出的特解罢了。</p>
<p>而我所寻求之物并非如此，那理应存在着如同光速不变原理般必然获得幸福的通解。</p>
<p>如果硬要将其比作方程式的话，世间的无数场恋爱犹如一组组不定方程，存在着过多的变量。而属于此方程的解究竟是否存在这一点，我都无法证明。</p>
<p>世间任一甜美的恋爱都可看作存在的相识相知的两人之和。</p>
<p>我决定在此提出我的哥德巴赫级恋爱猜想。</p>
<h2 id="1-假设法"><a href="#1-假设法" class="headerlink" title="1.假设法"></a>1.假设法</h2><p>在我单身一百年内，如果有人能够证明出我的恋爱猜想，我将以我至今的积蓄作为奖励赠与他。</p>
<p>我想我即便效仿弗尔夫斯克先生那样发布悬赏，也不会有人向我提交“费马恋爱大定理”的证明。因为我目前的账户余额就算使用科学记数法，也只能精确到小数点后的第四位。</p>
<p>我不得不自力更生。</p>
<p>众所周知，假设法是证明题的惯用手法之一，所以诸位不妨假设一下，越详细越特殊越不可思议越好。</p>
<p>你正坐在一张与周围同样坐满了人的餐桌前，脚边是抚摸起来正舒服的及膝狗尾巴草，而木桌上摆的则是从草莓、西瓜到葡萄、橘子皆有的四季水果拼盘。你站起身来，发现四周和脚下竟是一座座起伏如正弦函数般的山丘，山坡上则盛开着叫不出名字的四色花朵。毫无遮拦的视野，使得很远处的万丈高楼也隐约可见。</p>
<p>夕阳的余晖撒在身上，是不带热量的安谧。你不由得抬头望去，却见成千上万大大小小色彩各异的千纸鹤于半空悬浮着。<br>这自然不是什么五星级布景餐馆，也不是什么不切实际的幻想。请随我继续假设下去。</p>
<p>不知何处的钟楼敲响了七声，金黄色的夕阳终于从东边落下，代之一钩新月，繁星满天。月光皎然，掌声雷动，有如众星捧月，山坡上出现了身着礼服与婚纱的二人。</p>
<p>没错，这正是我的婚礼现场。</p>
<p>下面有请新郎新娘致辞。</p>
<p>感谢爷爷奶奶爸爸妈妈伯伯婶婶叔叔阿姨哥哥姐姐弟弟妹妹同学朋友这类话暂且不提。还有更为要紧的事情。</p>
<p>我单膝跪地，打开早已携带在身的戒指盒，取出铭刻有心形线极坐标方程的戒指，向眼前身着白色婚纱的黑发少女发问。</p>
<p>你愿意做我的自变量吗？在这颗名为心的区间里。</p>
<p>我的心也在此刻变得飘飘然起来，若不是囿于此身，我有扶摇直上九万里的自信。</p>
<p>眼前之人却没有作答，而是绕到了我的背后，将我持有戒指的手和关节如折纸般向奇怪的方向扭曲着。</p>
<p>痛痛痛，为什么我的结婚对象会使用关节技呢？</p>
<p>“破绽百出。”身后之人抛出了这样一句话。</p>
<p>假设的幻影也就此破灭，原形毕露。我扭过头来，看清那可憎的面孔。那是因在同一社团而结下孽缘并相识至今的损友彻。</p>
<p>“且慢，此乃出其不意。恋爱的目的与最终归宿是结婚。那么取特例，只要证明连这般结婚都能成功，恋爱的可行性不就得以证明了么。”我狡辩道。</p>
<p>“且不说，恋爱和结婚是否互为充要条件，你究竟拿什么来证明结婚的成功可能性？”</p>
<p>“这自然好办。只要再推演假设到是否生孩子，孩子的名字叫什么，二胎，乃至三四五六七，并归纳推理之。”</p>
<p>异想天开。</p>
<p>我的小腿被后方伸出的脚勾住，并因此失去平衡而摔倒在地。我不由得闭上双眼，脑内适时上映起了如同死亡前的走马灯。又一关节参与进了折纸活动。</p>
<p>抱歉，是我在白日做梦。</p>
<p>我决定向彻道歉。</p>
<h2 id="2-特值法"><a href="#2-特值法" class="headerlink" title="2.特值法"></a>2.特值法</h2><blockquote>
<p>苦求恋爱之人哦，今夜七时吾将为汝系上汝渴求至今的命运红线。汝若有所期冀，可提前至此。<a href="https://love.yunyoujun.cn" target="_blank" rel="noopener">https://love.yunyoujun.cn</a> 回复 TD 退订。</p>
<p>—— Moon Elder</p>
</blockquote>
<p>电子邮箱里躺着封似乎来自神的垃圾邮件，写着不明不白的内容，还附着可疑的链接。如今连自开天辟地便存在至今的神们也与时俱进用上了新时代的产物吗？</p>
<p>掌管姻缘的红线仙一般是月老的别称，业务精神值得嘉奖，但牛郎织女也勉强算他的业绩之一，未免有些凄惨。况且月老乃月下老人，而非所谓的月亮老人，这不标准的英文署名让我想到了某个英语烂到家了的家伙。</p>
<p>复 TD。我点下了发送。</p>
<p>恭喜您成功订购恋爱红绳尊享服务，本月即刻生效。我的退订代码即刻收到了回复。</p>
<p>彻，继续恶作剧的话，小心我把你喝醉酒后欲求不满到抱着路灯亲吻的录像发到网上哦。</p>
<p>对面似乎沉默了。</p>
<p>根据概率论的 3σ 准则，小于千分之三概率的事情，可谓之误差。用神的话来说，便是奇迹。倘若这并非恶作剧，而是真正的神明的话……</p>
<p>若是能够对此做 n 重伯努利试验就好了，不论是真是假都可尽情尝试一番，我不禁这么想到。</p>
<p>我可是坚定的唯物主义者，怎会相信这些牛鬼蛇神。我打开了今日的恋爱占卜，幸运数字与幸运色分别准确地落在了 7 与红色上。</p>
<p>这是神的旨意。</p>
<p>我决定独自前往。</p>
<h2 id="3-审敛法"><a href="#3-审敛法" class="headerlink" title="3.审敛法"></a>3.审敛法</h2><p>链接重定向的地址是 VR 社区的某个私人房间。实际上我到的比房间备注上要求我提前的时间还要提前。房间里空白一片，唯独地面上铺满了带有水果图案的各色彩纸。</p>
<p>这让我感受到了浓浓的不安。</p>
<p>我和彻所属的社团名为水果折纸社，社如其名，所谓的水果折纸，便是使用带有各类水果图案的纸张，构建出各种有趣的几何形状的艺术活动。当然，业余活动也包括品尝社团免费提供的美味水果。对于酷爱西瓜与几何学的我来说，本社团是论证一加一大于二的典范。</p>
<p>也因此，我遇上了彻。不得不承认，现今彻是社团内唯一在折纸技艺上能与我匹敌之人。值得一提的是，社团夏日举办的吃西瓜大赛，彻却常败于我。只不过除此之外的战场，我全线溃败。不论是交际与学习能力，还是关节技。他当上社长后，我也被任命为教学部部长，负责教授大家折纸的技巧，勉强还算相安无事。唯一的状况便是一旦有学妹向我请教折纸技艺时，我便会因为一瞬间开始纠结孩子的名字叫什么好而变得结结巴巴。</p>
<p>地面上的彩纸共有四色，粉春之草莓，黛夏之西瓜，紫秋之葡萄，金冬之蜜橘，这毫无疑问正是我等社团折纸练习的御用水果纸张，而这更摆明了与彻脱不了干系。</p>
<p>我唤出操作面板将彻的录像分享在了学校的论坛上，并席地而坐折起纸等着彻的到来。折纸的初学四件套是纸飞机、纸船、护士帽以及千纸鹤，想必许多人在幼儿园的劳技课便已经掌握。</p>
<p>我方折完套装的四分之二，千纸鹤与纸船，还未来得及约分，眼前便出现了戴着纸质圣诞老人面具的家伙。</p>
<p>破绽与槽点太多以至于我不知从何吐起。月老已经不仅仅名字西化，连神系种族都变了吗？</p>
<p>“您的驯鹿呢？”我哭笑不得，圣诞老人的礼物袋倒是安稳地躺在身后。</p>
<p>“啊哈哈。路上偶遇月老，哀叹近来渴求恋爱之人众多，自己案牍劳形，应接不暇。便托我来此处代工，并顺道借走了驯鹿，以事半功倍。”圣诞老人尴尬地笑道。</p>
<p>圣诞老人的中文意外的不错，声音虽然用上了变声器，但仍旧有些熟悉。</p>
<p>“这里的彩纸似乎有些眼熟啊。”</p>
<p>“这是等待期间的余兴节目。”圣诞老人调出面板切换起了场景。地面与天空开始染上夏日夕阳的颜色，脚边迅速长起了软软的狗尾巴草。但彩纸并未就此消散。</p>
<p>“彻，录像我已经发在学校的论坛里了。趁现在还没什么人看到，五体投地求我抓紧删掉也是可以的哦<del>”我随手捋了几串狗尾巴草，卷在一起，从纸船的中央穿透而过，屡试不爽。“毕竟老夫也不是什么恶魔嘛</del>”</p>
<p>圣诞老人的动作似乎有了一丝停滞，但脸上的面具导致我难以看清他的表情。</p>
<p>哈哈哈哈。</p>
<p>转瞬间，他如反派般大笑起来。“渴求恋爱却寂寞至今的闷骚男，啊不对，恶魔大人怎么会期盼这种无聊的东西呢。您说是吧？”</p>
<p>我和你拼了！</p>
<p>圣诞老人仅用单手便扣住了我挥舞出的关节，其间骨头与我皆发出了可怕的声响，手中的草剑也应声而落。他却泰然处之，并用闲下的手从礼物袋里取出了一个红色物体，置于我眼前。</p>
<p>是由西瓜彩纸折叠而成的心。</p>
<p>“来自黑发少女的哦~那么，告辞。”</p>
<p>“且慢，这就结束了？”事态的发展让我措手不及，我拉住状似离开的圣诞老人。“不要把你和月老的工作搞混啊！”</p>
<p>“看破红尘的恶魔大人也会想要提示？”</p>
<p>我点了点头，按捺不住的是怦怦直跳的心。所有悲伤之事皆变得渺小起来。</p>
<p>“把录像删了。”</p>
<p>我决定能屈能伸。</p>
<h2 id="4-举例法"><a href="#4-举例法" class="headerlink" title="4.举例法"></a>4.举例法</h2><p>掌握这一足以形成交涉乃至威胁力量的罪证之时是新学年开始不久的某个深夜。</p>
<p>“你载上人家回去多方便嘛～”彻边打着酒嗝，边撒娇道。说话的同时还不断抚摸着小西的屁股。</p>
<p>水果折纸社的新生聚会将将结束，新旧相识的大家三三两两聚集在一起讨论着喜欢的话题，并就此先行，我与彻则负责善后。作为新任社长的彻的三寸不烂之舌在方才宴席上出尽了风头，也因此喝得烂醉。好在作为素食主义者与果汁饮品至上的我幸免于难。</p>
<p>我推着小西，肩负起了护送这家伙回寝的工作。似乎忘了介绍，小西是辆我大学初便匆匆购置的最为心爱的带有后座的自行车。它名字中既有我最爱的西瓜之意，也寄托了我某些红日西沉之时的幻想。譬如迎着微风，载着梦境中的黑发少女在夕阳下一往直前。</p>
<p>“不可能。”我断然地拒绝了彻的请求，“还有将你的咸猪手从小西身上拿开。”</p>
<p>虽然至今为止仍未出现，但那里是留给一定一定存在的某位黑发少女的。</p>
<p>“况且散散步更容易醒酒吧，我都推着小西陪你走了，还不感激涕零，反而得寸进尺。”</p>
<p>“还不尽早放弃你那不切实际的幻想吗？”彻悻悻地收回了双手。“等着和你的小西孤独终老吧。”</p>
<p>“人活着总要有所信仰的。”我仰望起月明星稀的夜空，故作深沉。“只不过这月下老儿未免太过怠惰了。”</p>
<p>“你要相信科学。”彻又打了个酒嗝，酒气扑鼻而来。</p>
<p>“汝试想一下，在如今遍布的公共摄像头前与互联网上的你们状若裸奔，稍作手段，便可轻而易举地爬取到几乎可以完全体现出一个人喜好、厌恶、习惯等的所有信息。那么只要使用机器学习识别筛选出与其相关的信息、图像，通过大数据样本分析建模，再取一个相对精准合适的公式，便可计算出人与人之间的相适度。如果你愿意的话，可以称之为恋爱指数。恋爱指数越高，你们之间越容易相互吸引，恋爱成功率也就越高。这才是根本的解决之道。”</p>
<p>醉酒后还能将此长篇大论一字不落地说出来，让我不由得佩服起来。当然更关键的原因，在于这一想法与我的恋爱猜想莫名地契合。</p>
<p>而且与纸上谈兵的数学系的我不同，彻是计算机系里彻头彻尾的实干派。只要他肯做的话，搞不好真有实现的可能。</p>
<p>“喂，你这家伙现在真的喝醉了吗？”我转过头，向后方看去。</p>
<p>马路上空无一人，而彻正紧紧抱着路旁的路灯做着奇怪的动作，脸也已然贴到了柱子上。</p>
<p>新任水果折纸社社长，彻，英名早逝，晚节不保。</p>
<p>虽然我此刻心中浮现出了些许同病相怜之感。</p>
<p>但是为了记录下这一来之不易的美好瞬间。</p>
<p>我决定掏出手机。</p>
<h2 id="5-演绎法"><a href="#5-演绎法" class="headerlink" title="5.演绎法"></a>5.演绎法</h2><p>成语接龙。</p>
<p>彻留下这一让人不明所以的线索后，便逃之夭夭。</p>
<p>但没有无缘无故的爱，也没有无缘无故的恨，更没有无缘无故的第一小问。数学题的证明绝不能放过任何一个有用的条件。</p>
<p>我的脑内借此已演绎出了数种可能性，但其中最高的两种要属黑发少女的爱好是成语接龙，以及在此地完成成语接龙才能得到作为下一个条件的提示。</p>
<p>但不论哪种在此刻都毫无意义，一不知黑发少女的真面目，亦无接龙的龙头句，更遑论与他者对接。</p>
<p>到头来皆是纸上谈兵。</p>
<p>自言自语的话音刚落，地上所铺的四色彩纸竟漫天飞舞起来，并停在半空，将各不相同的色彩，与那各自整齐的边缘拼合在一起，形成了面积更大的矩形。层叠的地图脉络也就此显现，金戈争鸣之声隐隐传来。我凑近看去，那位于地图中央的墨绿色等腰三角形的顶点正随我的扭头而不断扭动着。此外，还有一个水红色的圆点坐落于地图的西方。</p>
<p>那恐怕便是下一个秘密所在。两点之间，直线最短。但我与其之间仍旧有着不小的距离。利用已知的条件来尽可能地简化计算，是在有限时间内的考试中所必须掌握的技巧。</p>
<p>兵贵神速。</p>
<p>自己的速度并未如想象般得到提升。不是简单的接龙，而是要以已有的条件起步？我退步视之，一人、一心、一纸、一鹤、一草剑而已。</p>
<p>心口不一。</p>
<p>我抛出与自己品性相近的成语。</p>
<p>一事无成。</p>
<p>少女般清脆的声音从遥远的西天传来。回应的成语对我来说也是一语中的，让人自行惭秽。不过，成事在人，人定胜天，只要赢得黑发少女的心，此间便可天下太平。</p>
<p>成千上万。</p>
<p>窸窸窣窣之声从身后响起，让我不由得回过头去。</p>
<p>如潮般的彩色千纸鹤向我袭来。</p>
<p>果不其然，万变不离其宗。如今万事俱备只欠东风。</p>
<p>万丈高楼平地起。</p>
<p>脚下长满狗尾草的大地开始微微晃动，钢筋混泥土构成的大厦骤然从脚下破土而出，将我向高处送去。</p>
<p>这突如其来的七字成语，打得我措手不及。实际除此之外不论是面对万箭齐发还是万马奔腾，我也均无万夫莫开之勇来招架。万全之策，究竟是否存在？</p>
<p>我俯瞰起青绿色的土地，却难以找出起字打头的成语应对。不过好在谐音在成语接龙中通常也是被允许的。</p>
<p>崎岖不平。</p>
<p>我绞尽脑汁，交出了对策。地面再次开始震颤，隆起了一座座有如正弦函数般起伏的山丘。我打了个响指，为从不起早贪黑学习的自己能够起死回生而感到庆幸。</p>
<p>冯虚御风。</p>
<p>对面也同样利用了谐音，使得此刻的我飘飘乎如遗世独立，羽化而登仙。活用反证法思想，人啊，想要自由飞翔的话，只要无所凭借，不脚踏实地就行了。我再次回想起自己昔日那白日梦般的婚礼狂想，让自己漂浮在了半空之中。</p>
<p>那么，风先生，还请更为猛烈一些。</p>
<p>风雨大作。</p>
<p>大鹏一日同风起，扶摇直上九万里。东风顷至，我怀抱纸心手执草剑与成千上万的千纸鹤被狂风向西刮去。不论是万丈大厦还是长满狗尾草的山丘均向后呼啸而去。</p>
<p>作茧自缚。</p>
<p>四字穿透狂风，送至耳边，有如低语。少女此句一出，便令我大感不妙。</p>
<p>我本以为自己大概会自作自受，因此摔得很惨，但良久并无异常。回过神来，自己也已被这疾风迅速送至了地图上所标记的红色地点的上空。</p>
<p>但让人失落的是并没有期盼中的黑发少女在此等待。向下看去，所见之物仅有硕大无比的四色水果拼盘，以及正中央那直径足有两米的墨绿色条纹西瓜。让我不由得怀疑其是否为向西刮的东风先生所幻化而成。</p>
<p>正所谓疾风知劲草，手中的狗尾草剑尚未弯折。而少女或许正被邪恶的西瓜将军束缚其中，等待解救。为了大义，为了月老，为了口腹，为了自己不可能存在的白日幻想，为了发泄至今怀爱不遇、壮志难酬的愤懑，为了世间的每个角落里所有孤苦伶仃的人们，我高举手中的狗尾草剑从怀抱众多千纸鹤的东风先生上一跃而下，向西瓜将军的头颅斩去。</p>
<p>此谓之。</p>
<p>负隅顽抗。</p>
<p>我高呼出下一句成语。</p>
<p>珍重大元三尺剑，电光影里斩春风。东风已式微，草剑也折断，西瓜亦应声而裂，发出熟透的声音，令我垂涎三尺。</p>
<p>只是藏于其中的并非红色的瓜瓤，而是亭亭玉立的黑长发少女。</p>
<p>明明有所期冀，但并不认为可能存在的事实就此出现在眼前。我脑内的思绪有如永不循环的无理数般乱糟糟起来。</p>
<p>快刀斩乱麻。</p>
<p>不知何处而来的钟声敲响。</p>
<p>我决定就此告白。</p>
<h2 id="6-归纳法"><a href="#6-归纳法" class="headerlink" title="6.归纳法"></a>6.归纳法</h2><p>这并非我与她的初次相识。</p>
<p>她是我大学所属的水果折纸社的学妹，炎炎夏日，自作多情的太阳不断散发出多余的热量，使得我们在图书馆也有过数面之缘。诸君，请不要担心，本社团也绝非非法侵占公共图书资源并用于折纸的组织。</p>
<p>初入图书馆之时神谕便充斥脑海，空调正是月神的馈赠，是抵挡那自恋太阳神的最为有效的手段。若是旧时代的数学家们能够在夏日享受到这般清凉，历史上的数学难题会再被攻克掉一大半也说不定。</p>
<p>出于不可告人的私心，身为理科生的我总是选择了藏有大量文学作品并足以吸引文学少女的 512 号文史馆。<br>那时她正坐在我前一排的桌子上安静地看着书，长长的黑发散落在身后，而我则为眼前的线性回归方程绞尽脑汁。 正当我试图用拉格朗日乘数法进行求解时，我与她之间的拉格朗日点发出了一丝不和谐的声音。</p>
<p>“亲爱的，这道题怎么做啊？”</p>
<p>无需多言，这一声音自然不是向我传来。</p>
<p>但我还是出于好奇抬起了头，出现在眼前的俨然是一对即便降下神罚施以火刑也绝不为过的情侣。</p>
<p>女生翘起指尖轻轻地戳了戳一旁男生的脸。莫非这也是提问必备的技艺？</p>
<p>“这里要用拉格朗日中值定理将其化为简便的形式，宝贝。”男生看了看题目，又摸了摸女生的手，方回答道。</p>
<p>“亲爱的，然后呢，然后呢？”女生吸溜了一口桌上的奶茶，向男生身边挤了挤。小心这还是夏天呀，人与人之间过于亲密可是会中暑的。但我终究还是没有勇气出声提醒。</p>
<p>“只要这样……再在这里用洛必达法则就可以直接得出答案。”男生则直接抬起手臂将女生环抱起来，并握住其手在草稿纸上画起了什么。</p>
<p>此情此景，我身上那将将被神之造物所驱散去大半的热量再次呈现出指数级增长，不久前想起的解法也被抛诸脑后。我的手开始不自觉地在草稿纸上用坐标系画起炎系魔法阵。</p>
<p>愿神为汝等降下天罚。</p>
<p>汝等之罪有三。</p>
<p>一、在玫瑰色幻想破灭，苦求恋爱无果的我眼前，如胶似漆。<br>握着的手还没有停下，两人的脸却已经几乎要贴在一起了。由于场面引起强烈不适，我低下头折起用完的草稿纸来。</p>
<p>二、洛必达法则须在去心邻域内可导方成立，此解法毫无疑问是错误的。给我向九泉之下的伯努利前辈道歉。</p>
<p>此前瞥到的课本上正是我前不久做完的习题，其证明过程就藏在这已被我折成了纸船的草稿纸之中。然而那题是存在着误导陷阱的。虽然洛必达法则可以看似快速得出答案，但是题目并未说明洛必达法则的前提成立。如果直接在证明过程中这样写，毫无疑问……</p>
<p>“亲爱的，这是？”他们肉麻的交互显然还没有就此结束。</p>
<p>“这是完整的证明过程。虽然这里我们似乎用洛必达法则得到了答案，但是题中并没有说明其导数在去心领域内存在，所以只有在填空题时才能这样偷懒哦。”男生弯起食指，敲了敲女生的脑袋。“不过，有一样在心处是永远存在的。”</p>
<p>“既不是拉格朗日，也不是洛必达。”男生说到一半，停下来卖了个关子。</p>
<p>“是什么呢？”女生眨了眨眼，仿佛有些不解。</p>
<p>“而是你啊。”</p>
<p>嗤。</p>
<p>我的笔从纸船的中央穿透而过，船身仿若成了剑柄。</p>
<p>罪加一等。</p>
<p>达摩克利斯之剑。为汝等降下神罚！</p>
<p>砰。砰。</p>
<p>是神明显灵吗？</p>
<p>我抬起头来，身着文学少女标签的她竟降临此地，敲击起眼前的桌子，并做出了我从来想做却做不出的事情。不知从何时起，与人交流便是我的弱项，更别提此类引人瞩目之事。</p>
<p>三、从分贝数来看，沉浸于二人世界的你们，太过旁若无人了。</p>
<p>“同学，图书馆是学习的地方。”说完，她便再次回到原先的位置看起书来。雷厉风行，点到为止。</p>
<p>此乃侠义之举。承蒙女侠相助，小男子愿以身相许。</p>
<p>眼前的情侣很快收敛了声息，并就此牵手离去。脸上的甜蜜之意却丝毫不减。虽然赢得了宁静，但总觉得某种意义上其实是自己输了。可恶。</p>
<p>于是我决定偷偷观摩起在前一排看书的她，但绽开有红绿紫橙四色花儿的书皮却喧宾夺主让我总觉有些眼熟。</p>
<p>那是诗人泰戈尔的《新月集·飞鸟集》。</p>
<p>水果折纸社才不是仅仅吃吃水果叠叠小船的三流社团，而是偶尔会举办些活动安慰自己绝不是三流社团的三流社团。上一次的活动正是折纸书签，即将自己的折纸作品作为书签偷偷藏进图书馆的书籍中，等待着它的有缘人。</p>
<p>这个活动的想法最先由彻提出，出于众所皆知的原因，我也随即赞同。其后以黑发文学少女为目标的我，自然锁定了诗集一类的作品。如果没记错的话，藏在《新月集·飞鸟集》中央的便应是我那由黛夏之西瓜彩纸所折叠而成的千纸鹤。</p>
<p>胡思乱想之际，少女突然抬起头来，与我的视线发生了交汇，让我不得不匆忙埋下头去。</p>
<p>这便是所谓天意吗？</p>
<p>此刻内心深处的白日梦幻想再次蠢蠢欲动。但少女只是合上书，将其放回书架，并就此离去。我的心也如正弦函数般随之回到了谷底。她究竟是否发现我那亲手折成的千纸鹤书签了呢？<br>我悄悄走到书架旁，取下了方才的诗集翻找起来。</p>
<blockquote>
<p>如果因为错失太阳而哭泣，那么你注定要错失群星。</p>
</blockquote>
<p>我的书签本应位于含有这句诗的此页，但原本黛绿色的千纸鹤消失而去，取而代之的是粉红色的小巧千纸鹤。粉春之草莓，毫无疑问，此必出于与我同为水果折纸社的学妹之手。我正打算将其打开，细细端详之时，却在那折叠起的羽翼下发现了一些让人难以捉摸的东西。</p>
<p>只见其左翼下用清秀的笔迹写着串有些微妙的字符 —— I247.5/8102-3#1 ，右翼下则是一句成语 —— 亢龙有悔。虽然自己表面上是个不解风情的理工男，但我也是偶尔会借些奇奇怪怪的小说来陶冶这颗内在同样不解风情的心。不出意外的话，那便是图书馆藏书的编号。而且编号与此本诗集相近，理应同位于这间 512 号文史馆。只不过成语尚有些意义不明。是让我懂得进退，不要招惹接下来的事情吗？</p>
<p>但吾辈绝非知难而退、半途而废之人，换言之，不见棺材不落泪。即便碰上不会做的证明题，我等也要胡编乱造洋洋洒洒地填满试卷。</p>
<p>我依照着编号寻觅起来，最终来到了一面书架前。此处则密密麻麻排放着充斥刀光剑影与爱恨情仇的武侠小说，是我等可望而不可及的生活。而书号所对应的正是金庸先生的集大成之作《天龙八部》。那么#1 便应指的是其中的第一册了。</p>
<p>我将其取下，又一彩色千纸鹤从中掉落出来。双翼下同样隐藏着一串编号与一句成语，I247.4/8102-14#2，九九归六。成语依旧意义不明，甚至与辞书上有所不同，更添神秘色彩。这串编号所指向的书籍是同为金庸先生作品的《射雕英雄传》，而其中同样藏有带着谜题的千纸鹤，再下册是编号为 I247.4/8102-9#3 的《神雕侠侣》，最后是编号为 I247.5/8102-10#4 的《倚天屠龙记》。最后一册中的千纸鹤翅下，却是最初飞鸟集中的那句诗与一句成语，线索就此中断。</p>
<p>环环相扣的谜题，如同简易的单链表，却让我困惑不已。九九归六，九五之尊，五零宏光，四心二意。我默念着其中出现的成语，但除了都含有数字外，再无共通之处，其中甚至混入了算不上成语的东西，让人会心一笑。从书来看，则同为金庸先生的武侠世界，且后三作并称为射雕三部曲。也许所夹的书页内也有隐藏的信息，但粗心大意的我已经错过。</p>
<p>我百思不得其解。不得不暂且搁置，读书人的事不能叫作放弃。</p>
<blockquote>
<p>如果因为错失太阳而哭泣，那么你注定要错失群星。</p>
</blockquote>
<p>此句话仍旧时而在我脑内回荡，只是当我终于有些明白这句话的含义时，我正漫步在夏末的操场上，手里甩着路边随手摘来的狗尾巴草。而她则慢跑于塑胶跑道之上，不知在和折纸社的社长聊着些什么。</p>
<p>多情的夕阳带着仅剩的光辉从地平线上隐去，与此同时，学校里的路灯一盏盏缓缓亮起。迎面吹来的风带着些许凉意，让我终于发觉到，这个夏天似乎已经结束了。</p>
<p>但此刻的我仍旧没能作出任何决定。</p>
<h2 id="7-排除法"><a href="#7-排除法" class="headerlink" title="7.排除法"></a>7.排除法</h2><p>钟声七下而毕，夜空繁星点点。硕大的四季水果拼盘中绽放出不知名的四色花儿。千纸鹤们失去风的凭依，纷纷散落而下。</p>
<p>正所谓东风夜放花千树，更吹落，星如雨。</p>
<p>如今朝思暮想的少女正出现在我眼前，只是不知为何，其脸上正戴着一绘有图案的纸质面具，那是年幼时曾喜好的某部动画里的主角西瓜吹雪。我丢下折断的草剑，赌上平生全部的勇气向前迈出步伐。泰戈尔的那句诗句，我至今仍未参透。</p>
<p>因为我喜欢的既非群星，也非日月。</p>
<p>我喜欢你。可以和我恋爱吗？</p>
<p>此究竟为不假思索的脱口而出，还是深思熟虑后的三思后行，我难以确定。但此刻的我已退无可退。</p>
<p>面具少女听闻之，却左腿微屈，右臂内弯，右掌划了个圆圈，呼的一声，向外推去。</p>
<p>亢龙有悔。</p>
<p>无可避让的我，被猛烈的掌风吹起，抛向空中。思绪流转，我突然想起，少女在图书馆看的并非总是泰戈尔的诗集，更多的却是金庸与古龙等人的快意恩仇。</p>
<p>亢龙有悔，乃金庸笔下最强掌法降龙十八掌的第一式。而天龙八部与那射雕三部曲正是其出没之处。说来惭愧，自己年幼也曾尝试修行，但始终未能大成。</p>
<p>好在身处此片空间内，落地并无丝毫痛楚，径直告白果然是大忌。</p>
<p>我趴倒在地。</p>
<p>悔不当初。</p>
<p>少女就此停手，摘下面具。</p>
<p>那一刻，我终于明白大丈夫绝不应能屈能伸，而当宁为玉碎，不为瓦全的。</p>
<p>那是与少女身躯全然不搭的彻的面孔。</p>
<p>“哎呀，初次见面，请多指教。”彻讪笑道。</p>
<p>面面相觑。</p>
<p>羞耻、悔恨、百感交集。昔西楚霸王破釜沉舟，大败秦军，即便最后自刎乌江，都不曾退让。而我却只能领会到那份无颜见江东父老的精髓。好在我已对彻的羞耻录像进行了云备份。</p>
<p>“不可原谅，你愚弄玷污我这颗纯洁少男之心的行为，就算此刻五体投地三叩九拜我也绝不会原谅的。”与表露的愤怒不同，我的心中竟松了口气。因为那并非少女本人的拒绝之意，卷土重来未可知。</p>
<p>而当下。</p>
<p>我决定先和彻拼了。</p>
<h2 id="8-量纲法"><a href="#8-量纲法" class="headerlink" title="8.量纲法"></a>8.量纲法</h2><p>旁人多以为我是只读诗歌散文且不苟言笑的文学少女，但我最爱的还是人们那敢爱敢恨、侠肝义胆的江湖，顺带偶尔也会期待起白鹤王子持剑而来，拯救我于水深火热之中。</p>
<p>此份爱缘何而起，我记忆犹新。</p>
<p>盛夏的傍晚时分，放学铃声终于敲响，还是短发的我怀揣着新攒下的零花钱蹦蹦跳跳前往不远的书店，意图购置期盼已久的某本课外书。只是我至今仍想不起那本书的书名究竟为何，也许是其在回忆中已丝毫不重要的缘故。</p>
<p>书店说是不远，是因为我知道迅速通往目的地的秘密途径。那是条一夫当关万夫莫开的幽长小巷。初入其中，便觉察前方似有人影，却并未在意。复行数十步，方见一人斜倚在墙上，双臂交叉而抱。耍酷的姿势配上肚皮凸出的赘肉，让我忍俊不禁。我决定悄悄将其命名为肥君。</p>
<p>“同学，笑的这么开心。不如有福同享，借点钱花花。”说话之间，肥君转过身来，晃动起身上一切可以晃动的部位。</p>
<p>大事不妙之景令我略微收敛了脸上的笑意。</p>
<p>“不了，不是钱财之类的有趣的事情。”</p>
<p>我试图收缩起身躯从肥君一旁绕过，他却将手臂展开，似要将小巷此处的横截空间全部占满。</p>
<p>“那稍微收点过路费也算是常识吧。”</p>
<p>“和我学到的常识还是有些不同的。”我还未就此放弃，试图寻找可以突围的间隙。</p>
<p>“那么，就让我教教你新的常识吧。”</p>
<p>大感不妙的我急忙捂紧了口袋，但也因此被其看穿，肥硕的手臂向我捂紧的那只口袋伸来。也许我们只能来生再见了，我代替口袋中的纸币向书店里的某本书发出心灵感应般的遗言。</p>
<p>“手下留人。”</p>
<p>稚嫩的声音从身后传来，拦路之人的动作也停滞了刹那。</p>
<p>“一直想说说看的台词第三位的低配版。顺带一提，原词应当为刀下留人。可惜你似乎并没有装备此样武器。说来奇怪，为何每次只要这样大叫，反派或者行刑者总会就此停下呢？再顺带一提，目前的反派指的是你。”</p>
<p>这家伙不会是个话痨吧。还未转身瞧得真容，我的心里便如此贴上了标签。</p>
<p>“多管闲事，那便有难同当，一起借点钱来。”肥君的眼神转移了目标，我也趁机退出他的攻击范围，并一睹话痨君真身。</p>
<p>“既然你也称是难了，那么路见不平，拔刀相助，乃侠义之举。”似乎比我还要稍矮些的少年，戴着绘有奇怪图案的纸面具，手里则甩着路边随处可见的狗尾巴草。</p>
<p>“在下乃西夏剑皇西瓜吹雪。临死之前，允你报上名来。算了，还是不必了，所有见过我的剑法之人，皆已入土。”无疑是青春期还未成熟的家伙才能说出的话。</p>
<p>“无聊。”肥君随手将狗尾草剑拍落一旁，晃动起身躯向他逼近。</p>
<p>“且慢，借钱的话自然要有计算利率的方法，其又分单利与复利。你可能不是很了解，单利就是简单的乘法计算利率，复利则是不断将利息也累计上一起计算利息。所以，如果你想借的久的话还是单利比较划算，短时间呢就推荐复利，利率会相对低一些……”</p>
<p>“我费某人借钱可没有还钱一说。”肥君摆出捋袖子干架的动作，尽管他此刻穿的是无袖背心。</p>
<p>噗。加之肥君的笑点双管齐下，让我未能把持住。</p>
<p>“那便是你的不对了。”少年取下面具，小心翼翼地装进了书包的夹层。“你可曾听过一套至强的掌法？”一直玩笑般的语气骤然低沉下来，稚嫩的面孔上透着未曾见过的严肃。</p>
<p>“如来神掌？”</p>
<p>“错。”不知名的少年左腿微屈，右臂内弯，摆出不知名的架势。“是无需从天而降却更为强悍的降龙十八掌。”</p>
<p>“喂，那边的家伙别笑了。你以为我是因为谁才祭出这看家本领。”一本正经地说着不切实际的话的样子让我实在难以忍耐。</p>
<p>“哦，那么倒让我见识见识。”肥君也如看笑话般挺身向前。</p>
<p>少年右掌划了个圆圈，吸引住了肥君的目光，却又突然略微偏头，向我使了个眼色。</p>
<p>让我趁机逃跑吗？才初次见面，还请别期望我心有灵犀到那种地步啊。</p>
<p>降龙十八掌第一式——亢龙有悔。</p>
<p>伴随着呐喊，少年蓄势一掌向前推去，击在了肥君的肚子上。很遗憾，反派似乎并未就此倒下。倾尽全力的一掌随后便如压在弹簧上般被轻而易举地反弹回来。</p>
<p>肥君也随之出手，肥壮的拳头击中少年的左颌，一颗大概是牙一样的白色物体从其嘴中飞了出来，还带着些许血丝。</p>
<p>给你。我边扶额叹息，边从口袋掏出张已经捂得皱巴巴的纸币和几枚硬币。</p>
<p>“早这样不就好了。”肥君似乎意识到自己下手有些重，一边嘟囔道，一边抢过钱匆匆离去。即便其中有枚硬币滚落在地，也没有再回头捡起。</p>
<p>“感觉怎么样？”我看向身旁。</p>
<p>“唔。”少年捂着腮帮子一时说不出话来，眼里似乎强忍着泪水。</p>
<p>“牙掉了么……”</p>
<p>“嗯。帮大忙了。”他努力想要做出个微笑的表情，但面部看起来有些难办。“最近在换牙。这颗始终对我不依不舍。”</p>
<p>“要吃什么吗？我请客。”我弯下腰捡起方才落在地上的硬币。</p>
<p>“你刚刚为什么不跑啊？我都提前给你打信号了，而且好不容易争取到的间隙。”他仍旧揉着脸发问道。</p>
<p>“你是指你那意义不明的眼神吗？”起身时，我也学着侧脸眨了眨眼睛。“我那样做的话你现在可就不一定只掉一颗牙了哦。”</p>
<p>“唔，其实我正好还有一颗也要换……”</p>
<p>“喂！”</p>
<p>“反正我也没什么钱啦。”他脸上的笑终于正常起来。</p>
<p>“总之，今天还是谢谢你了。我叫夏，夏天的夏。你呢？”</p>
<p>“在下西瓜吹雪。”</p>
<p>“真名。”</p>
<p>“侠义之士可不是为了留名才行侠仗义的，更何况是如这般落魄。”无名侠士低下头去，声音愈来愈小，几不可闻。“正所谓相濡以沫，不如相忘于江湖。”</p>
<p>“那西瓜吹雪先生到底是个啥？西瓜吗？可以吃吗？”</p>
<p>“正是。西瓜吹雪是西夏国西瓜一族的皇子，但不愿继承皇位，便奋然离家行走江湖。落花吹雪，剑术超绝，如今更是成为叱咤水果界的风云人物。为了维护正义，以其为首的四名顶尖侠士还组成了四色战队……”少年眼中放出光芒，但见我不解，又补充道。“在最近热播的动画《水果英雄传》里。”</p>
<p>“总之就是一群会功夫的水果？降龙十八掌也是他的招式吗？”</p>
<p>“嗯。不过那个是他好友橙留香的绝学。不过名字听起来很酷，就拿来用了……”他有些不好意思地挠了挠头。</p>
<p>“对了，作为赔礼，这个送给你。”少年从书包夹层中取出之前的纸质面具，递给我。</p>
<p>这纸上画着的便应是西瓜大侠了，眼口鼻之处也适当留出了位置。细瞧来，倒颇为精致。唯一一点值得吐槽的是，西瓜大侠的脸竟是方形的。</p>
<p>“那我就不客气地收下了。”我接在手中，没有下一步的动作，毕竟要戴上的话果然还是太羞耻了。</p>
<p>“下周五的这时间你还有空吗？”他像是要说悄悄话一般贴了过来。</p>
<p>“欸。大概有……”不行不行，进展太快了，我们还只是小学生。我心中默默想到。</p>
<p>“届时请来巷口旁的书店。在下有妙计帮你追回钱财，并一劳永逸。”我最后看到的是不带虚假的目光。“告辞。”他即刻抱拳道别，向相反的方向离去。</p>
<p>“不吃东西了吗？”我举起幸免于难的那枚硬币。</p>
<p>“待他日重逢之时。”少年没有回头，只是继续抬起左手揉了揉脸颊，并举起食指与中指并拢的右手挥别。的确稍微有那么一小点酷。</p>
<p>“那么静候佳音。”</p>
<p>我决定拭目以待。</p>
<h2 id="9-换元法"><a href="#9-换元法" class="headerlink" title="9.换元法"></a>9.换元法</h2><p>彻，给我老老实实接受死亡的洗礼吧。</p>
<p>我践踏过现实中绝不会践踏的众多花儿，来到彻的身前，并于此刻保持着难以动弹的姿态。被紧紧扣住关节的我仍旧大放厥词。</p>
<p>“不要那么气愤嘛，身处此等虚拟之处，你又怎能确定眼前所见之物究竟是真是假呢？”此刻的我正盯见彻的喉结一上一下。“万一我就是黑发少女呢？”</p>
<p>这类惹人厌的语气，这套熟练到让人不甘心的关节技，这副快要看腻的面孔，除了彻，再无他人。</p>
<p>“呸，你给我去死吧。”我向其吐了口唾沫，纵声喊道，全然不顾尊严体貌。</p>
<p>“君要橙死，橙不得不死。”彻一字一句将其道出。</p>
<p>儿时的动画是我和彻偶有的共同话题，也是相识的契机，因同看过《水果英雄传》三部曲，我等均自命不凡。我乃剑皇西瓜吹雪，他为盗帅橙留香。</p>
<p>只是故事中逍遥自在的西瓜吹雪，因父王驾崩又身为独子，终究不得不回国继承皇位。至友橙留香，也被任命为大元帅，协之平定内乱。曾不齿权术的他们，竟日渐沦陷，昔为至交最终却因猜忌而反目成仇。为收兵权，兵变黛夏门。被围的橙留香乃有此旷世惊言，言毕遂自刎，汁溅三尺。西瓜吹雪晚年亦追悔不已，郁郁寡欢，含恨而终。一代英雄就此落幕，令人扼腕。</p>
<p>倒也没严重到那种地步，我正犹豫着是否要就此作罢。彻的衣服却簌簌作响，连同身躯逐渐碎裂，化为片片纸屑，漫天飞舞。</p>
<p>去伪存真。</p>
<p>那是彻的遗言。成语接龙似乎仍在继续。但伪为何物，真又为何？在一切虚幻的空间内，与被欺骗至此的我眼前，究竟还有何为真物。<br>飘散着的纸屑再次聚集，形成人形。显然是彻卷土重来。</p>
<p>机不可失，我扑上前去，将其压在身下。这是我所能想到的克制彻关节技的最好方法。虽然此刻逐渐清晰的人影连带面貌都幻化作黑发少女模样，我也能够镇定自若。</p>
<p>少女的面孔上却浮现出一丝红晕，让我不由得暗叹彻的实力。</p>
<p>“那个，虽然不是第一次见面，但这有些为时过早吧。”</p>
<p>“不请明天的晚饭的话，我可不会原谅。”我也不愿就此失去挚友。</p>
<p>“这倒是没问题，反正本来的确是有此打算啦。”</p>
<p>存在着莫名的违和感，装满各种各样羞耻之物的脑袋再次运转起来，真正的彻绝不会如此轻松的答应。</p>
<p>但除此之外，又会是谁呢。</p>
<p>“九九归六？”神秘的一连串成语于脑海中浮现，我决定试探一番。</p>
<p>“九五至尊。”</p>
<p>“五零宏光。”</p>
<p>“四心二意。”</p>
<p>此般完美的暗号，除了真正的学妹应当并无他人所知。</p>
<p>“失礼了。”我尴尬地急忙起身，心中忐忑不安。“不过那是什么意思？”我趁机一探究竟。</p>
<p>“我的企鹅号啊。”她嫣然一笑。“本以为能博君一笑。”</p>
<p>原来只要取出所有的数字拼凑一起，而不是什么复杂的方程。</p>
<p>“那么久别重逢，别来无恙？”她起身时挥手将散落的长发裁去，留下清爽的短发。</p>
<p>若有若无。</p>
<p>似曾相识到男女莫辨的黑历史从记忆深处复苏。虽曾略有印象，却始终不敢就此求证的我终于大胆起来。<br>“莫非你是夏……”</p>
<p>“嗯？”</p>
<p>为了避免可能的尴尬，我补充上结尾。“……的妹妹。”</p>
<p>“本人哦。”少女右臂内弯，那是某至强掌法的起手式。</p>
<p>“恕在下眼拙。”我提前行毕土下座之礼，抬起头来向某些部位望去。“士别三日，当刮目相看。”</p>
<p>说完我才发现似乎有些不妥。是头发，是头发，劳请诸位不要曲解。</p>
<p>“你也是。”她淡淡答之。</p>
<p>我并不知她指的究竟为何，也不知自己何时变得这般怯懦而沉默寡言。也许是人与人之间的交流与关系不能像数学题那样将已知的条件全部列举出来，并直截了当地推理声明正确与否这件事，让我很讨厌。</p>
<p>我与记忆中的她自那次相识后，便分道扬镳。为了小升初能分至市里上学，父母带着我在最后的夏日匆匆转学。因此难得值以自豪的相近之事也成为永远的回忆而刻入脑海。</p>
<p>我曾以为我与她之间将会如相交直线般在短暂交叉之后愈走愈远，亦或如现今这般同处校园，平行而去，永不相交。</p>
<p>“此前的话可还作数？”她蹲下身来，不再居高临下。</p>
<p>“啊，什么……”注视的目光使得慌乱的我竟回忆不起任何话语。</p>
<p>“恋……”</p>
<p>无论平行还是相交，直线都不是人生的最好比喻。人生中充满着无穷多的未知变量，并为人们无穷多的选择所决定着，有无穷多的高潮，亦有无穷多的低谷。如果硬要比喻之，也唯有施以傅里叶变换所得的正余弦函数可堪重任。人生正如波浪般起伏不定，人与人之间也不断相交，绵延而去。</p>
<p>因为人生本就不是既定的方程，不同的人始终拥有着各自不同的解。</p>
<p>我决定点头确认。</p>
<h2 id="10-引用法"><a href="#10-引用法" class="headerlink" title="10.引用法"></a>10.引用法</h2><p>那日我如约而至书店前，良久却未见他人。毕竟这种事没有证据，加之肥君似乎也不是同一学校的学生，想要追回钱财谈何容易。我本就并未有所指望，但是放我鸽子就说不过去了，心中生出些许不快。</p>
<p>忽有一人拍了拍我的肩膀，带着书香墨气发问道。</p>
<p>“来者可是夏姑娘？”</p>
<p>“正是。”我转身回应，但情境似与预想有些出入。</p>
<p>“有位自称西瓜居士之人托我给您带封信，请随我来。”是戴着眼镜货真价实到正遭遇中年危机的书店老板。</p>
<p>我随之走向了书店的后屋，似乎是监控室的地方。老板从抽屉中将信翻找而出并交于我。我打开倒出却只见得一枚彩笺折成的千纸鹤，与几张陌生纸币。</p>
<p>的确像他会做的事情。我决定将纸鹤拆开，一探究竟。</p>
<blockquote>
<p>夏君敬启<br>不负卿望，得财而归。过程不甚光彩，不再赘述。亦得致歉光影一份，请君笑纳。<br>西瓜居士 书</p>
</blockquote>
<p>信也故作这般语气，让人见怪不怪。最后的留名则让人觉其似已退隐江湖，蛰居山林。我看向书店老板，他则熟练得点开监控，播放起某时刻书店前的场景。</p>
<p>竟是肥君正对着摄像头半弯下自己的身躯致意。究竟是何手段，让我不由得十分好奇。我央求起老板，老板继续笑而不语，点开了另一段录像。</p>
<p>西瓜居士与肥君从一旁的巷口先后追逐而出。西瓜居士似是居家过久，体力不足，被肥君赶上，压倒在地。似乎重练过的降龙十八掌也仍旧没有奏效。这次是右颌被击中，又一颗牙随之飞出。该不会是把肥君当作了牙科医生。</p>
<p>肥君似乎出于震惊再次停下了动作，居士则指了指摄像头，像是说了一堆威胁的话。随后便得到了归还的钱财与致歉的画面。</p>
<p>好一招引蛇出洞。我暗叹道。</p>
<p>这绝非丢人之事，无须引以为耻。我来到与我身高相仿的柜台前，对柜里说。</p>
<p>“掌柜的，来一本有降龙十八掌的书。”并排出几张大钱。</p>
<p>自此以后，我沉浸于武侠世界的荡气回肠，义薄云天。无论我再经过多少次那幽长的小巷，皆长久没有看见那位自号西瓜的侠士。正如书店老板所说，大约西瓜居士的确转学了。</p>
<h2 id="11-答"><a href="#11-答" class="headerlink" title="11.答"></a>11.答</h2><p>我将头一寸寸地点下，又一寸寸地抬起，恍若能听到自己的心跳。</p>
<p>哥德巴赫、费马、格斯里以及拉格朗日、伯努利、欧几里得等人，在我脑海中吵个不停，被我统统赶出。</p>
<p>人生充满着无穷多的决定，每一个决定都会铸就未来的自己。有些事未曾开始，就已结束。有些事则会一发不可收拾。久远之事不必考虑，只需顺应当下。我也想成为可以被降下神罚之人，在所不惜。</p>
<p>金风玉露一相逢，便胜却、人间无数。</p>
<p>相逢自是有缘。此后之事，托恋爱指数之福，水到渠成，不必多言。我与小西的夙愿也终于得以实现。但若详尽描述出来，难免遭人嫉恨。</p>
<p>彻也死灰复燃，认领自己这出从夏日便策划而来的杰作。他那日深夜与我谈及的项目也得到了学校与政府的支持并仍在完善，即便现今足以记录长达数十年的监控与互联网社交的数据量也有所欠缺。而世间那庞大无穷的信息也正如西瓜吹雪手中的那柄神剑一般，握于侠者之手，行侠仗义，持于恶匪之手，尸横遍野。</p>
<p>继续在本世纪孤苦伶仃的彻偶尔还会问我，恋爱究竟为何？我想那是比在夏日成熟的西瓜品尝起来还要甜美之物。他意图继续深究之时，我则反问。与你恋爱指数最高之人是谁呢？</p>
<p>彻扭扭捏捏，如小家碧玉。</p>
<p>统计的时候没有限制性别啦。</p>
<p>我一时没有明白关联之处。</p>
<p>其实是你啦。所以你说恋爱到底是什么呢？</p>
<p>无可奉告。</p>
<p>告辞。我即刻抱拳狼狈而逃。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>读毕森见登美彦的《四叠半神话大系》与《春宵苦短，少女前进吧！》，内心蠢蠢欲动。便学之试用“火锅”式写法（自称），把切身想到的元素乱炖一通。模仿拙劣，中二不堪，只愿能博君一笑。</p>
<p>在草草完成此篇文章的月底，却传来金庸先生逝世的消息，令人扼腕叹息。</p>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>短</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
  <entry>
    <title>仓生</title>
    <url>/2018/01/15/creation/novel/the-common-hamster/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>此作为<a href="https://yunyoujun.cn/creation/novel/hamster" target="_blank" rel="noopener">仓鼠</a>的续写。参加<a href="http://sci.kpcswa.org.cn/index/catalog/tid/89" target="_blank" rel="noopener">某比赛</a>的第二轮产物。</p>
</blockquote>
<p>实际最初第一作完成时，根本没有考虑过会有什么后续。所以内容根本是临时抱佛脚，想到什么写什么。故事大概也不堪卒读。但这终究是自己连续花费几个整天所赶出来的东西，直接丢掉这种事情也绝对做不到。</p>
<p>我还是拿到这里展示了出来，虽然也不会有什么人看到就是了。</p>
<p>顺带一提，我深刻感悟到了 <code>Deadline 是第一生产力</code> 这一真理。</p>
<p>自己还画了乱七八糟的插画，色彩一塌糊涂。（ 2018-01-19 ）</p>
<a id="more"></a>

<p><img src="https://cdn.jsdelivr.net/gh/YunYouJun/cdn/img/draw/hamster-universe.jpg" alt="hamster-universe" loading="lazy"></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="白昼之光，岂知夜色之深。"><a href="#白昼之光，岂知夜色之深。" class="headerlink" title="白昼之光，岂知夜色之深。"></a>白昼之光，岂知夜色之深。</h3><blockquote>
<p>我们之所以为人，是因为我们凝视星空。还是因我们是人，所以才凝视星空。<br>我似乎在自命名为人类生物的某种娱乐产物中，听到过这样句话。事实上倘若没有这片星空，它也断然不会诞生。<br>所以星空也在凝视着人类。</p>
</blockquote>
<hr>
<blockquote>
<p>“呐，你说世界上真的有外星人吗？”我轻声提问道。<br>“也许，你手中的仓鼠就是哦。”他回过头来，就如往常一般。</p>
</blockquote>
<hr>
<p>第 42 次。</p>
<p>不论第几次提出这样的问题，得到的都是这般大抵相同的回答。虽然此间也有几次在轻嘲着我的异想天开，但我再也没有听到与那次相同的推论。</p>
<p>这仍旧不是他。</p>
<p>混沌理论。</p>
<p>虽然理论上奇点进程不会有所出入，但作为对历史潮流几无影响的小人物，却会因为各种各样的随机因素导致行为乃至性格都发生变化。这也便是所谓的蝴蝶效应。</p>
<p>即便发展到我等高级文明，也无法彻底掌控。而这个世界加之星空本身便是基于混沌理论的框架衍生而出，只要细小的变量发生变动，都几乎不再是完全相同的世界。</p>
<p>那么究竟又是哪里设置的变量不对？提问的时间？摸仓鼠的动作？明明哪怕是书架上摆放的书籍位置，我都没有变动过。而且课上再复杂的实验程序，也只要重复一遍代码，便绝对能获得相同的返回值。</p>
<p>所以我才讨厌所谓的弱类型编程语言，总是自顾自地猜测解释，却不在变故处提示。还有这个破绽百出的开源模拟框架，也许我可以给他们提一些 Issues 。但不可否认的是，正因为无法预测的混沌理论，才使得这个世界充满惊喜。</p>
<p>还要回滚到上一时刻继续模拟吗？在这种无聊的事情上花费时间，并不是什么明智的选择。为什么要执着于这个普普通通的人类呢？我左手轻抱着仓鼠，同时用空出的右手在半空中划开操纵界面，准备登出这个世界。</p>
<p>“顺带一提，外星人是绝对存在的哦！比如我就是~”我说着这话的同时，将菜单已然翻了一个来回。</p>
<p>镇定力不错，没有如第 30 次中那样掉落手中的书籍，我暗暗地给予了褒奖。</p>
<p>但根本不是关心这个的时候。我把左手的仓鼠也放了下来，再次翻找起来。</p>
<p>果然……</p>
<p>登出按钮好像不见了。</p>
<hr>
<p>天……还没有亮么？</p>
<p>望着周围昏暗的世界，我缩了缩脑袋，继续安心地蜷缩起来。</p>
<p>好暖和。本想借此感慨打一个舒服的哈欠，却未能发出相配的声音来，难免有些不爽。</p>
<p>但却让我略微清醒起来，这样绝对不行，明明计划好要每天锻炼身体的，继续怠惰下去，恐怕只会变成夜行性生物。虽然我本来便是如此。</p>
<p>我努力睁开沉重的眼皮，拖着懒散的身体，向记忆中跑步机的方位爬去。</p>
<p>「不在？」</p>
<p>我直了直身子，试图用手揉开那惺忪睡眼。我的视力已经差到这种地步了吗？</p>
<p>什么都没有，这个世界仿佛空无一物。</p>
<p>要是有光就好了，夜行性的我第一次如此期盼起天亮。</p>
<p>当然那是在其到来之前。</p>
<p>我将将抬起头来，沉浸于黑暗中的视锥细胞还来不及准备，那从远处极速驶来的光暗分界线便将我就此吞噬了。</p>
<hr>
<p>是 BUG 吗？明明是开源的代码，竟然会出现这种问题？</p>
<p>在这里我所拥有的，只是基础的一些权限而已，就算想要修改代码，也没有现成的编译器。不过，既然是开源，那么代码的变更要不了多久就会被发现的吧。只是多等待些时间罢了。</p>
<p>只是多等待些时间罢了。这是我们悠长岁月里最不缺少的东西。</p>
<p>“那么我也是哦~”差点被我忘记的他，突然回应起我的话来。</p>
<p>无数的谍战画面与阴谋论在我的脑海里一闪而过，让我不由得兴奋起来。</p>
<p>“莫非是你干的？……”我猛然回过头来，正视起他。</p>
<p>啪嗒。</p>
<p>他握在手中的书本，终于还是掉落了下来。</p>
<p>“什……么？”像是被我的声势与眼神给吓到了，他发出的疑问话语则有些结巴。</p>
<p>一般到这时候，我早已退出了这个世界，根本不会再有接下来的对话，所以现在的他相对我而言已是一个全新陌生的人了。</p>
<p>“你刚才的话是什么意思？”我追问道。</p>
<p>“不是开玩笑吗？”他对我突如其来地正经也有些疑惑，不得不尴尬地挠着头。</p>
<p>显然，是我多虑了。不过，这样似乎也很有趣。</p>
<p>“我可是货真价实的外星人，如假包换。”我挺起身来，拍了拍胸脯，带着前所未有的得意。和低级文明生物展示着自己的我，就像是在小学生算术比赛中拔得了头筹一样开心。</p>
<p>又或者是在举重锦标赛上，当着蚂蚁面，举起了更大块的石子？虽然不是一个公斤级的就是了。</p>
<p>欸，等等，你倒是好好听我说啊！</p>
<p>他默默地捡起那落在地上的书本，翻回此前看到的页数，继续读了起来。</p>
<p>……</p>
<p>“我可不是在开玩笑啊！”只吼到一半，我便发现了自己的失态，音调也随之降了下来。今天倒要让你看看所谓形而上的存在，我走上前去，拉起他的臂膀，准备故技重施。</p>
<p>“请等一下。”他像是感受到了我的架势，急忙说道。</p>
<p>“怎么了？”我也停了下来，难道他知道我要做什么了吗？</p>
<p>只见他慢条斯理地将正打开着的书本插上书签，轻轻合起，放在一旁。</p>
<p>“可以了。”</p>
<p>“都带上也是没问题的。”</p>
<p>不再等待他的回答，屋内零零散散的家具便连同我们，一起向上方的玻璃幕墙升去。不过更像是本踩在脚下的玻璃地板突然陷了下去。</p>
<p>看到他那快要惨叫出的样子，我不禁笑了出来。故作沉着，在这时也是绝对做不到的吧。</p>
<p>“要撞……”</p>
<p>不等他字句吐完，我们便轻而易举地穿过了那巨大玻璃样式的天花板。</p>
<p>而下方闪过的则是熟悉的城市与云层，以及蓝色水球。这种加速度，如果按照正常物理法则的话，在穿越大气层时被燃烧殆尽也不足为过。</p>
<p>“欢迎光临……”</p>
<p>但谁让我是这里的主宰呢。称我为唯一神，也绝不足为过。</p>
<p>“我的——”，我拖长了音，等待他在这深邃的太空中调整好自己的姿态。“宇宙。”</p>
<h3 id="作茧自缚"><a href="#作茧自缚" class="headerlink" title="作茧自缚"></a>作茧自缚</h3><p>“没错，我是外星人，同时也是你们所谓的这个世界的神。”还要重新解释一遍，还真是麻烦。虽然也有不去管他，或者抹消记忆之类的选择，但总觉得似乎不大友好。我可是讲究人道主义的好公民。</p>
<p>“唯一神。”我装作毫不在意地补充道。</p>
<p>话说还会有鼠道主义这种东西吗？我稍稍提高了本地环境光的亮度，寻找起那不知被我放到哪儿的小仓鼠。</p>
<p>“不可思议……”他努力使自己的身体保持直立的状态，但似乎徒劳无功。不过能够从各个角度欣赏着这瑰丽的景色，也算是幸事了。</p>
<p>本该漆黑寒冷无比的宇宙，却被那近在咫尺的散发着光与热的恒星气团点缀起来。稍远处的星系也不甘示弱，闪耀着绚丽的色彩，而实际尺寸并不大的星云则朦胧地透出其难以言喻的壮阔。一切都与上次和他到来此地的景色别无二致，当然除了周围多出来的漂浮着的家具物件。虽然只是假象，但这一切都本不应为他们所有。<br>“名为人类的这种生物，早在两三万年前便已经灭亡了。现在的你们，只不过是我模拟数据中的一串串字节流罢了。”我拨开附近漂浮着的转轮和食槽，其后的却是裹成一团的毛线。</p>
<p>“为……什么？”他自己都不知道想提的是什么问题了吧。</p>
<p>“作茧自缚咯。”我找到线团的线头，将其抽了过来。</p>
<p>“那么，这个世界很快就会毁灭是吗？”他放弃了姿体调整的努力，任由自己漂浮其中。</p>
<p>线团上的毛线随着我的抽拉，开始一根根松开，露出里面包裹着的家伙。找到了。这应该是在上升的过程中缠上的。</p>
<p>因为惯性，还在不断旋转着的小仓鼠像是跳着华尔兹，但它依旧熟睡着。这家伙，每天至少得睡二十个小时吧。</p>
<p>“没错。本该如此。”我停住小仓鼠的旋转，将其抱了过来。</p>
<p>“本该如此？”</p>
<p>“意思就是你暂时不用杞人忧天啦。而且，”我缓慢地调整着姿势，转过身来，指向下方蓝色的星球。“这里有你在乎的人吗？”</p>
<p>他脸蓦地红了起来，支支吾吾地没有回答。</p>
<p>大概又在胡思乱想，我顿了顿，清了清嗓子。“我是说，你有想过你为什么没有家人以及朋友吗？”</p>
<p>话音刚落，他那惊讶的表情便溢于言表。</p>
<p>“是的，你所认识的人只我一人罢了。从最初开始，你便只是一个以人类的数据结构形式进行实例化的对象。所谓的记忆也只是我填入其中的数据，你的诞生就如同实例化一只仓鼠那样简单。”</p>
<p>“也就是说，我那一到午后，就会来此读书……”</p>
<p>“没错。都是我设定的程式罢了。”</p>
<p>“可是一到午后，我就会感到幸福的那种感觉也……”</p>
<p>“没错。”我打断他的问题，抢先答到。虽然我没有亲自设置过这种东西，不过这也只是代码附带的影响吧。</p>
<p>“顺带一提，真正的宇宙是远比你现在所见的黑暗、寒冷、寂静，乃至残酷的。没有缤纷瑰丽的星河，没有恰到好处的光热，也没有可以传达声音的空气，更别说像我这么友好的外星人了。”稍微有点在卖瓜的感觉，导致自己都有些不好意思。</p>
<p>“你们所拥有的资源在不断减少，所以害怕灭亡，想要逃离。而这也正加速了你们的灭亡。”对我这乱七八糟的话语冲击，他也差不多该适应了吧。虽然原本看起来有些失落的样子，但他现在似乎更沉浸于原本触不可及的星空。</p>
<p>“本来这个世界的运行，便只是为了还原你们灭亡的真相而已。而我已经知晓了原因，所以你们还可以看我的心情继续存活下去。当然前提是在我的工作站所能承受的运算量范围之内。”</p>
<p>“那么为什么还要和我多费口舌呢？”他漂在一颗散发着黄色光芒的恒星气团前，手放在胸前却没有任何动作，似乎在犹豫着要不要直接触摸。</p>
<p>“因为无聊啊。放心摸吧，温度是很适宜的，这个宇宙被我调整的可是相当温柔啊。”</p>
<p>现在 BUG 还没解决掉的话，可就太不像话了。我再次划开菜单，与此同时，他则用双手将那颗恒星小心翼翼地捧了起来。</p>
<p>“好暖和。”虽说我调高了这广阔太空中的温度，但相对于那颗星球上我们原本所在地的炎炎夏日，还是要低了不少。而这不断散发着光与热的恒星气团正是合适的取暖工具。</p>
<p>“另外最主要的原因就是我暂时也出不去了。”没有，还是没有登出的途径。没有任何新的消息提示，也没有什么可以向外联系的手段，就如同被完全隔绝在此地一般。</p>
<p>不过我也没有什么要紧的事情就是了，虽然很像是卷入了什么通天大阴谋，但发生了这样的事情也应该很快会被其他人察觉，且得不偿失，或者说根本看不出有什么可以得到的利益。</p>
<p>“出不去……是指无法离开这个世界吗？”他抱着网球大小的恒星转过身来，你这是理所当然地把它当暖手宝了吗？</p>
<p>“嗯。出了一些变故……无聊啊无聊。”我晃动着肢体，在这看似漫无边际的深空中摇摆着。</p>
<p>因为角度的变换，视野中熟睡的仓鼠与他以及远处的蔚蓝星球恰巧构成了一条直线，一些奇怪的想法似乎在脑海里诞生了。</p>
<p>“喂！”一直以来这么喂喂地称呼他还真是不礼貌。</p>
<p>“我们毁灭世界吧。”</p>
<h3 id="生存还是毁灭"><a href="#生存还是毁灭" class="headerlink" title="生存还是毁灭"></a>生存还是毁灭</h3><p>刺眼。</p>
<p>即便合上了双眼，那被猛烈光线所刺痛的眼皮还是这么向我传达着这一消息。如果不够迅捷的话，现在自己的眼睛恐怕已经彻底失明了。正当我这么思考时，眼皮上的刺痛已逐渐消散。虽心有余悸，但我还是逐渐睁开了双眼。</p>
<p>平坦而广阔无垠的大地似是绵延至光亮的尽头，光滑得不像话的地面看不到丝毫纹理。整个世界也空无一物到仿佛只有两种色调，亮与暗，黑与白。而且即便在此明亮的光照下，我也看不到自己丝毫的影子。也许是因为那本就漆黑无比的大地。但就算搭上那白到看不出高度的天空，我也只嗅到绝望的气息。</p>
<p>所以，我是谁？我从哪里来？ 要到哪里去？</p>
<hr>
<p>说话间，我已经带着小仓鼠缓缓地飘到了他的眼前。</p>
<p>“你考虑过人家恒星的感受吗？堂堂一颗二等目视星就这么毫无尊严得被你当作暖手宝。”因为位置角度的原因，我比他像是高出了整整一个头，更显得自己居高临下起来。</p>
<p>“……轮不到随口就要毁灭世界的你来说。”他嘟囔着，反而把手里的恒星抱得更紧了。</p>
<p>有这么冷吗？我再度调高了些此处空间的温度。“喂，我想到一个绝佳的点子来打发时间。”</p>
<p>“毁灭世界才不好呢！虽然……虽然”他再三考虑着说辞。</p>
<p>“虽然没有你认识在乎的人？”你是女孩子吗？</p>
<p>“况且，要不是我心存怜悯，你们这个世界本就该毁灭了。我可是给了你们重新生活一次的机会啊，还有这片美丽温柔的星空。”我张开臂膀，指向周围点点的星光。“你们所度过的每一日，本就是接连不断的奇迹。我只是把你们不应得的东西再收回来而已，还请不要有所怨言。”</p>
<p>是的，对于人类来说，失去一开始就没有甚至连其存在都不知道的东西是不会失望的，失望的只有拥有过却又再次失去的东西罢了。人道主义的我，才不会做那么扫兴的事情。</p>
<p>“毁灭世界那么无聊，我所指的是，在此之后重新创造世界的那部分啊！”<br>我调出操纵界面，点下了选项。毁灭世界真是太轻松了。我是不是该考虑修个超硬合金的盒子，再弄个血红色的按钮放置其中，顺便贴上醒目的 Danger 标识。<br>Init Earth ? （初始化地球）</p>
<p>对话框毫无延迟地弹了出来。With Creature（连同生物）还有这样的复选框，我也顺手勾选上了。</p>
<p>“我确认啦！”当着他的面，我夸张地做出按下按钮的动作。就算此刻想要阻止我也是无济于事的。</p>
<p>“欸！？”他还不及反应，我便完成了最终的确认。</p>
<p>0%</p>
<hr>
<p>“确定吗？”眼前这白大褂的男人，再次重复道。</p>
<p>明明穿着医生的衣服，问得却是杀人的勾当。“嗯。”王安还是点了头，一寸寸地下去，一寸寸地上来。</p>
<p>王安自认从小就是普通人，成绩中游，相貌一般，家里虽不算殷实，倒也不至于缺了吃穿。他不算很喜欢也不算讨厌，父母给自己起的这个普普通通、寓意明显的名字，平平安安。从普通大学毕业后找到的工作也是中规中矩，每天的生活也大抵相似，薪水则不多不少勉强补贴家用。所以王安并不指望会有什么天降奇遇，也不信自己会遇上什么飞来横祸。自己不过是世界中很小很小的一环，最后无非是像正常人一样结婚生子，颐养天年。</p>
<p>他有时觉得这样的生活毫无意义，却又总舍不得改变。直到他鬼使神差地买了张彩票，又鬼使神差地中了大奖。这个世界就有些不对劲了。他不会知道自己的平庸是深入到骨子里去的，也不会知道自己的平庸是一行行代码早已定义的，更不会知道这个世界所拥有的负反馈机制。</p>
<p>但他知道这个世界似乎对他不是那么友好。</p>
<p>从不抽烟的父亲毫无征兆地查出了肺癌，他也终于得以取出扣完税金的奖金奔回医院。</p>
<p>“爸，我有钱，这是之前的奖金。”</p>
<p>父亲也终于不再辩驳。只是那撕心裂肺的咳嗽声，让王安有点心痛。</p>
<p>虽说是大奖，但几十叠的钞票也终究经不住治疗的花费。家里仅存的积蓄也再支付不起两次化疗。 如今插上了呼吸机连话都说不出的父亲的样子，显得比最初更加痛苦。他手指不断晃动着，像是想要传达什么信息。</p>
<p>别治了。王安早已依着手势，把字形画了下来。为了自己所谓的孝道，他本是再三坚持着的。但现今，治疗费用根本无以为继。而他也终于得以停下来进行思考，如此痛苦地维持着亲人的生命，真的称得上是孝吗？反倒更像是自私地求得那一丝心安理得。</p>
<p>王安握住父亲的手，答应了父亲。父亲那颤抖着的手也终于停了下来。</p>
<p>“安乐死。”王安找到了医生。</p>
<p>“确定吗？”</p>
<p>“嗯。”王安还是点了头，一寸寸地下去，再一寸寸地上来。</p>
<p>50%</p>
<p>当父亲闭上双眼的刹那，他竟突然觉得自己轻松了许多。他甚至开始想，如果早就这么做的话，说不定还能省下一大笔钱。对自己的这般想法羞愧起来，王安站起身来准备去病房外散散心。</p>
<p>世界的负反馈机制，使得王安的人生轨迹又过多地偏移到了下方。于是，它为王安准备了一份礼物。</p>
<p>80%</p>
<p>病房外正有一位姑娘，或许能够倾听他的苦闷。并帮助王安完成他那结婚生子，颐养天年的期盼。</p>
<p>90%</p>
<p>在遇上她之前，王安还在感慨着命运的不公，甚至觉得这样的世界就算就此毁灭也没什么不好。</p>
<p>95%</p>
<p>王安走出了病房，来到医院的花园里。但似乎有什么东西从背后撞了过来。</p>
<p>98%</p>
<p>“实在对不起。”坐在电动轮椅上的姑娘双手合十地抱歉道。</p>
<p>99%</p>
<p>在世界陷入漆黑之前，王安还仍旧觉得这个世界糟透了。</p>
<hr>
<p>100%</p>
<p>我拉着他向下方那颗本越来越小的星球前进着，视野里的星球也再度放大起来。</p>
<p>“已经被你整个都消除掉了吗？”他将怀里的那颗恒星抱得更紧了。</p>
<p>“喂，你再仔细看一下好不好。”我指向那颗星球原本应在的位置。</p>
<p>深黑的球体与黑色幕布般的太空几乎要融为一体，如果不是后方那闪烁的星光被其遮挡了一部分，他恐怕仍旧没有发觉这里存在着什么。</p>
<p>地球（Earth）。</p>
<p>人类给予这颗星球的命名。他们诞生于古老的大地之上，便以为这看似广阔无垠的大地是这个世界的中心，而这个地球便成了他们心目中的整个世界。即便知道这颗星球超过 70%的面积为水所覆盖，他们也不愿更改。但如今，倒是没有更改的必要了。</p>
<p>原本蓝绿斑驳的水球，如今已变成纯黑完美的球体，不管在其上曾存在过怎样的生物、文明，也都已消逝一空，不留丝毫痕迹。毁灭永远比创造来的轻松。</p>
<p>“这就是现在的地球吗？”他的声音有些颤抖。</p>
<p>“没错。本来你也应该是消失的人类之一哦。”我眯起眼睛，故作调皮地笑了笑。也许他会觉得可怖吧。</p>
<p>“对那些正努力着的人，也太不公平了。”</p>
<p>“但那与你又有何相干？”</p>
<p>也许有人正踌躇满志，也许有人正纸醉金迷。也许有人正为明天的生活而努力着，也许有人将将轻而易举地放弃了生命。有孩子小测验得了满分，正准备回家向父母炫耀，也有孩子正被酗酒的家长殴打着。这个世界本来就充满着众多的美好与丑恶，就像事物的正反面，要么一同存在，要么一同毁灭。</p>
<p>他低下头去盯着怀里的那颗恒星，不再言语。</p>
<p>“别那么扫兴啦，有趣的部分才刚刚开始。”我拍了拍手，试图吸引他的注意。</p>
<p>“你们地球上不管哪个种族的文明都至少会有一个古老的创世传说吧。不管是叫盘古的，还是好像叫耶和华的。”</p>
<p>“就像这样，”我打了个响指，“要有光。”</p>
<h3 id="决斗者的浪漫"><a href="#决斗者的浪漫" class="headerlink" title="决斗者的浪漫"></a>决斗者的浪漫</h3><p>在我的指令下，那颗纯黑色的球体突然从顶部迸发出白色的光芒来，并逐渐蔓延至整颗星球。有种在玩黑白棋的感觉。大概白子要翻盘了。</p>
<p>唔。那么接下来就应该是空气，海，陆地，……</p>
<p>“喂，把星星还我，星图该归位了。”</p>
<p>“啊？”满脸的不舍显而易见，你是刚得到新玩具的小孩子吗？</p>
<p>“算了。”少了一颗两颗的恒星，也并不能产生什么影响。</p>
<p>“先帮我抱一下。”我把眼前漂浮着的小仓鼠轻轻推向他，但似乎因为至今的吵闹，它也从熟睡中醒了过来。</p>
<p>“喔。”他一只手揽住珍视的恒星，另一只手则揽向那浮在空中正不知所措的小仓鼠。</p>
<p>“你还要做什么？”说话间，小仓鼠竟踩着恒星跑了起来。噗，成为仓鼠的滚轮了，你这颗恒星活得还真是耻辱啊。</p>
<p>“发动融合效果。”我一本正经地摆出抽卡的姿势，并从菜单中找出新的按钮嗯了下去。</p>
<p>看起来什么都没有发生。他那正要将眼前跑动着的仓鼠推出去的姿势，也停了下来。<br>“你到底在干什么啊？”</p>
<p>“决斗不是男人的浪漫么。”我差不多能看到他眼角的黑线了，这个世界或许可以考虑添加上这种动效。</p>
<p>“我把旧人类的智慧和仓鼠的思维以及身体进行了融合。”我觉得我终于体会到弱类型语言的精妙了，根本不需要重新定义，就可以将不同类型的数据糅合在一起的感觉，真是太美妙了。</p>
<p>“我决定让这一新的物种，成为世界的主宰。”</p>
<p>“啊？”这家伙大概被我的天才想法惊讶到说不出完整的话了。</p>
<p>“名字我也想好了，就叫做仓人。”单纯因为鼠人太难听了些。</p>
<p>“接下来该离开你的伊甸园了。”我将小仓鼠拎了过来，而它似乎因为过多的信息流涌入，而再次陷入了沉睡。虽然此刻熟睡的样子，看起来楚楚可怜，但我还是无情地将其丢了下去。</p>
<p>至于其他生物的话就从印象里感觉最帅的恐龙开始吧！</p>
<p>因为环境的部署偷懒地照搬了此前地球中生代的样子，所以小恐龙们大概能够很好地生活下去。上次是从古生代的寒武纪开始的，这次则直接跳过了进化的古生代，所以这下应该轮到三叠纪被称为生命的大爆发时代了吧。</p>
<p>“仓鼠大战恐龙。听起来就很有趣吧！”我着手对已经完全亮起来的星球部署着。</p>
<p>“你让仓鼠去挑战中生代的霸主吗？”喂，这种怜悯的神情由我来表现才对。</p>
<p>“不过，不用担心。我已经调低了这个时代地球的含氧量，所以恐龙们的体积也会大大减小。勉强应该在仓鼠们应付的范围内吧。”</p>
<p>“请对我的宠物稍微自信一点。”我拍了拍他的肩膀，表示鼓励。</p>
<p>“且不说“自信”的用法对错，它只身一人的话，接下来该怎么办呢？”你不会是把自己也带入其中了吧。</p>
<p>“放心，我会准备好几个小规模的族群。而且考虑到仓鼠的繁殖能力与成长速度，这些新生族群很快就会成长起来。”我挑选出在旧世界中处于平均值的人类为模板，重新生成了许多实例。</p>
<p>所谓中庸之道,仓鼠家族应该能以稳定在平均值的智慧与运气生活下去。</p>
<p>完工。不过我这么勤奋的神，是不会设立什么休息日的。</p>
<p>我决定加速此处的时间流动，并划出一片投影区域来展示我的成果。</p>
<p>仓人们果不其然地快速繁殖壮大了起来，然后成功……灭绝了。</p>
<p>仓·年代记 -完-。</p>
<p>如果是小说的话，这样的读物大概会被当作厕纸。</p>
<p>刚繁殖成长起来的族群，便被几只始盗龙所发现，而且肉质似乎很合自己的口味。于是成为了始盗龙捕食的目标之一，前后大概只花了数百年，仓人们便成功退场。</p>
<p>……</p>
<p>“你太弱了。”我转头鄙夷起来。“说起来，你们人类能存活那么久还真是奇迹。”</p>
<p>“只是因为寿命太短了，没有时间学习和传递经验。”他反驳着。</p>
<p>这我自然知道，仓鼠的寿命一般只有三年，拥有同样身体的仓人自然也是如此，贯穿其一生的只有繁殖、繁殖，再繁殖。虽然给予了它们言语的能力，但终究没有学习的时间。那么，这个文明就根本没有进化的可能性。即便某一只仓人，偶然学会了使用石头投掷来反抗始盗龙，但他终究只是一个人，而石头投掷技巧也将随着他顺畅地进入始盗龙的胃而共同消亡。直到几月几年后，第二个学会的仓人也是如此。</p>
<p>我取回备份的数据，重新展开了实验。首先要做的工作便是将其寿命年限由三年提升至了十年，其次，我决定追加上新的设定，记忆结晶。既然缺少时间学习经验，那么省去这一步骤便是了。当他们死去时，毕生所掌握的知识与经验便会化为瓜子般大小形状的结晶，可以为下一代的仓人所吸收掌握。藉此，仓人们的文明大概会有翻天覆地的进展吧。</p>
<p>将地球乃至太阳系都全部笼罩在内的时间再次开始加速流动起来，视野中所看到的景象，也如同被高温火焰上方会产生的能扭曲光线的空气所扭曲了。</p>
<p>投影中所展示的情景，也果然是仓人们拿着石制或木制的长矛，捕猎起始盗龙来。三叠纪有着整整 5200 万年，不管对于过往的人类还是如今的仓人来说，都太过漫长了。所以不论时间尺度的流动也好，年代环境的变化也好，都需要再快些。或者干脆根据生物的更迭逆向还原环境时代，也不是什么麻烦事。</p>
<p>“话说咱们下去看看吧。”不等他回答，我便拉起他的手臂，向现今的地球飞去。</p>
<p>不出意外的话，兴许还能碰见众多拥有人类智慧但还是普通仓鼠样貌的家伙捕猎着各式各样的恐龙。</p>
<p>“我们这样贸然进入真的不要紧吗？”他皱了皱眉头，像是有些担忧。</p>
<p>“你这是在质疑我作为神的能力啊。不过也没有什么可担忧的，因为含氧量的降低，三叠纪就算称得上庞然大物的埃雷拉龙现也不足你身高的一半。”</p>
<p>我们缓慢地降落了下来，这里是一片很宽阔的热带草原。不过脚下的这片超级大陆，也该开始慢慢分离了。视野里，暂时还没有发现什么活跃着的生物，不知那边的森林里是否居住着什么有趣的家伙。气候倒是相当暖和，裸子植物们还生活的很舒畅。现在森林里的树是榕树吗？不过被子植物不是到了白垩纪才出现的吗？</p>
<p>在我思考的同时，背后窜出了一股狰狞的气息，而地面也在以极小的幅度震动着。</p>
<p>手一样的东西搭上了我的肩膀。</p>
<p>就算这样，我也不会尖叫哦。</p>
<p>我将手向肩上伸去，并借此熟练地完成了一整套过肩摔动作。</p>
<h3 id="残暴的蜥蜴王"><a href="#残暴的蜥蜴王" class="headerlink" title="残暴的蜥蜴王"></a>残暴的蜥蜴王</h3><p>“痛！”熟悉的声音。</p>
<p>恐龙们也进化到说话的地步了吗？</p>
<p>摔落在眼前的是同样熟悉的面孔。我决定尴尬又不失礼貌地微笑着。“偶尔会想锻炼身体呢。”</p>
<p>“后面……”他也顾不上吐槽我拙劣的借口，指了指我的背后。</p>
<p>锯齿状的牙齿错落排列着，覆盖全身的是斑驳的皮肤与那壮硕的肌肉，嘴角的涎水已经快滴落了下来。巨大的喘息声，也似乎在宣誓着自己的地位。我脑内的知识库是绝对存储着这家伙的。</p>
<p>“最大型、最为残暴的肉食动物，白垩纪食物链顶端，平原之王——”我试图在脑内搜索起这家伙更多的头衔，不过现在似乎没什么意义。“雷克斯暴龙！也就是俗称的霸王龙。”</p>
<p>“你在特意给我解说吗？”被我一套过肩摔，而坐倒在地的他抬起头来。</p>
<p>“嗯……”难道不应该为我的博学所震惊吗？我觉得我差不多可以称得上地球学家了。</p>
<p>霸王龙似乎因为我们对它的无视，颇有些不满，但依旧忌惮着我们的样子没有轻举妄动。应该是被我方才那流利的过肩摔实力所震慑了吧。</p>
<p>呼哧。</p>
<p>它依旧重重地喘着粗气，如果是冬天的话，就能看到那鼻孔冒出的雾状热气了，绝对会十分有趣。是没有呼吸够吗？对不起，是我的错。我双手合十起来表示歉意。</p>
<p>而它却因为我的动作更加提防起来，身体姿态也压的更低了，应该是以便随时发起进攻。但原本就不高的身躯，在此刻显得更加矮小。</p>
<p>残暴的蜥蜴王 —— 身高约一百四十厘米。</p>
<p>如果将其比作哥斯拉的话，与我这样身高的巨大战士对决就太可怜了。</p>
<p>不过霸王龙的出现年代毫无疑问是白垩纪，而且是末期。虽然我的确加快了速度，并放任它们生长进化，但没想到只是如此短暂的时间就已经到了这一地步。</p>
<p>又有一只，仅比此稍小点的霸王龙不知道从哪冒了出来，这下是二对二的公平对决了。会成对出现的霸王龙，绝对是成家了的夫妇俩吧。对侵入者这么敏感，那么附近搞不好还能找到它们爱的结晶。</p>
<p>“一人一只？”我瞅了瞅还坐在地上的他。“炊具什么的不必担心，我这里有可以拿出各种各样东西的四次元口袋。”</p>
<p>“你是要吃吗？”虽然打算请你吃饭，但请不要这么吃惊。</p>
<p>“不然呢？”我歪着头。“你想烧烤还是清蒸？”</p>
<p>“哪个都不要……”</p>
<p>“那就是轮到我们被吃掉了啊。”我叹了口气。</p>
<p>“啊？没有击退它们的办法吗？”请你先从地上站起来再说这种大话好吗？</p>
<p>“弱肉强食，本来就是这个世界的法则。读了这么久的书，你不会连这点都不知道吧。”</p>
<p>“这我当然知道，但……”</p>
<p>“桃太郎饭团。”我摆出某个消亡文明的文化中出现过的猫型机器人的典型动作，并将手中的饭团向眼前的两只霸王龙丢去。</p>
<p>我一定有做驯兽师的才能。两只霸王龙配合地各自咬住了一个饭团。</p>
<p>蹲下。</p>
<p>我发令道。霸王龙夫妇俩乖乖地蹲了下来，又长又粗的尾巴也耷拉在地。姿势看起来有点滑稽，就如同某种旧人类的日常宠物。猛兽之王的名头怕是不保。</p>
<p>“这个饭团……”我叉着腰，准备趾高气昂地阐述其功用。</p>
<p>“不用解说了。这我好歹还是看过的。”他估计已经放弃用常理来理解这个世界了。</p>
<p>“先去找一找现今拥有智慧文明的仓人们吧！”我倡议道，虽然根本不用征求他的意见。</p>
<p>他不作声地指了指我的脚下。</p>
<p>一个毛绒绒棕褐色的生物，蜷缩成一团，在我的脚旁瑟瑟发抖。毋庸置疑，这是原属于啮齿目鼠型亚目的小型哺乳类动物，如今的万物之王——仓鼠！我好像染上了起称号的习惯。</p>
<p>虽然我现在将拥有了智慧并建立了自己文明的它们称之为仓人，但就目前看来它还是对不起自己的名头而毫无疑问地失禁了。至于原因，就不知道是我还是原先那只霸王龙了。</p>
<p>是被它们追捕而落单的家伙吗？</p>
<p>“仓先生，怎么称呼呀？”我弯下腰来，打量起眼前的家伙。</p>
<p>形态还没有发生很大的改变，但原本短小的前肢，已经有变得细长的趋势，并且爪子看起来也会很灵活的样子。</p>
<p>“我叫……巴。那个……”就连说话也是结结巴巴的。</p>
<p>“请问……您是……神吗？”</p>
<p>不得不说这样的称呼实在很受用。</p>
<p>“没错。那边那位是我的助手。”我补充道。</p>
<p>“巴先生，你可以带我去你们的村落参观一下吗？”</p>
<p>“遵命，神小姐。”它站起身来，准备迈出自己的步伐。已经能够直立行走了吗？</p>
<p>不过没有必要，我直接将其提了起来，不顾那半空中的惨叫声，径直放到了霸王龙的头上。</p>
<p>“出发！”并不知道方位的我下令道。</p>
<h3 id="第三类接触"><a href="#第三类接触" class="headerlink" title="第三类接触"></a>第三类接触</h3><p>仓鼠本是一种很强势的独居动物，但是拥有等价于旧人类智慧的仓人们则不同，它们意识到如果想在这个危险遍地，弱肉强食的世界继续生存下去的话，那么合作就不可避免。于是，仓人们也由此进化为了群居生物。</p>
<p>从三叠纪被始盗龙狩猎起，它们便逐渐学会了制造和使用石器，甚至火，并成功凭借数量逆转了食物链的局势。而且因为记忆结晶的原因，它们的经验和历史都被很好地传承了下来。不过现今随着年代变化而出现的霸王龙，对于它们来说依旧是不小的威胁。</p>
<p>这大概便是我从结结巴巴的巴先生那里了解到的信息。现在大概算是仓人们的石器时代，也算是直接省去了旧人类出现智慧的漫长进化时间。</p>
<p>“巴先生，你有从父母那儿学会了什么吗？”我对那正紧抱着身下坐骑的家伙问道。</p>
<p>“我……没有，爸爸……上次狩猎的时候被霸王龙吃掉了……”它断断续续地说道。所以看到霸王龙会吓到失禁吗？</p>
<p>“妈妈的……也轮不到我……”仓鼠的繁殖力异常惊人，所以有数十个兄弟姐妹也不足为怪。</p>
<p>“我明白了。”不管哪个世界，都会有可怜的底层人民。</p>
<p>“村里人……也都瞧不起我……所以……我想见一见霸……霸王龙来证明自己……”</p>
<p>别再说了，实在太可怜了。你这样会让我于心不忍的。</p>
<p>“虽然……没能为爸爸报仇……”你原来还想报仇的吗？</p>
<p>“但是，我见到了神小姐！神小姐亲自出手救下了我，还请我搭乘了霸王龙，之后大家一定不会再小瞧我的。”奇怪的是，巴先生连着说出了这一长串话都没有结巴。</p>
<p>但我并不是为了拯救你，而做这种事情的。</p>
<p>“到了！”</p>
<p>其实不用它的提醒，以我的身高更能及早地透过林间的树叶，发现那前方的村落。住在森林中的确相对安全些，多生活在平原的霸王龙在此也会有些行动不便。而且，柔软的土壤与众多的树木很适合打洞做窝。加之还有流过的小溪作为充足的水源。</p>
<p>“今晚我们住下吧？”我对不知被忽视了多久的助手先生说道。</p>
<p>“欸。不要紧吗？”</p>
<p>“助手先生……原来也会说话的吗？”巴先生惊疑道。</p>
<p>“感觉自己被小瞧了。”</p>
<p>“对不起……”</p>
<p>“我只是随便说说，这里昆虫的体积样貌实在有点讨人厌。”我突然注意到他手里的恒星不知什么时候不见了，大概是本就没带下来吧。</p>
<p>“你的想法根本捉摸不透。”</p>
<hr>
<p>“喂！是我！巴！”巴先生直起身来对着远处树上一胖一瘦的两个小家伙喊道。</p>
<p>看来已经有哨岗的分工了。</p>
<p>“那家伙竟然没被霸王龙吃掉。”连我都能听出语气的嘲讽了。</p>
<p>“真是好运。”</p>
<p>看来巴先生在村子里的人缘的确很差。</p>
<p>“不过，他现在这是站在什么上面？”</p>
<p>“不知道。还在晃动的样子。”</p>
<p>“我带着神小姐一起回来了。”巴先生继续喊道。</p>
<p>“神小姐是谁？你朋友吗？”</p>
<p>“不是。”一应一和，你们俩也许有相声演员的才能。</p>
<p>“我！”我拨开前方浓密的树叶，同时像是想要抢答老师问题一样举起了手。</p>
<p>但我似乎并没有成为关注点。</p>
<p>“那是啥？”</p>
<p>“好像是大家常说的霸王龙欸。”</p>
<p>“喔，霸王龙。”</p>
<p>“嗯，霸王龙。”</p>
<p>“该做什么啊？”</p>
<p>“好像要点烽火。”</p>
<p>……</p>
<p>看似对话还在正常进行着，但是我察觉到它们已经……接连失禁了。仓鼠的这种习惯，就算稍微拥有了智慧，也还是没能控制住丝毫。虽然估计旧人类也是如此。</p>
<p>不消片刻，我和助手的周围便已经被一圈又一圈手执长矛的仓……鼠们包围了。还是等它们进入更高一层的文明，再用含有人的字眼的词语来称呼吧。比如学会一点自知之明。</p>
<p>“是……是误会。”巴先生顺着坐骑的脊背划了下来。</p>
<p>“他……他们是神明大人……和助手。”巴先生着急地解释道，当然话语也因为紧张更加结巴起来。“我……我亲眼看到……神……小姐轻而易举地让霸王龙服从了命令。”</p>
<p>“蹲下。”我配合地展示着自己的驯兽师技能，霸王龙们也听话地蹲了下来。可是，你们不是应该更加害怕比霸王龙还要高大的我才对吗？</p>
<p>带头的几位仓鼠围成了一小圈，窃窃私语起来。</p>
<p>叽叽喳喳叽叽喳喳。</p>
<p>“其实不用那么怕我们的。”我向下方那个小圈子说道。</p>
<p>叽叽喳喳叽叽喳喳。</p>
<p>“神明大人。”</p>
<p>圈子散了开来，其中一只像是领头的仓鼠站了出来，并向前伸出了本就不算细长的前肢。</p>
<p>有点摸不着头脑。</p>
<p>助手君却抢先一步蹲了下来，将手指凑了上去。</p>
<p>指尖相对。像是完成了什么神秘的仪式。</p>
<p>想起来了。旧人类的某部娱乐产物中，好像存在过这种情景。可恶，身为地球学家却被抢了风头。</p>
<p>“你们的文明还不够资格与我直接接触。”我挺直了身子，大言不惭。</p>
<p>不过周围一圈拿着长矛的家伙们，还是欢呼了起来。</p>
<p>“神明大人，请问您来这里有何贵干呢？”听声音应该算是挺苍老的了，但我希望你能拄根拐棍凸显自己的德高望重。</p>
<p>“为了……吃掉你们啊。”我蹲下来想要仔细观察起他们。</p>
<p>……吱</p>
<p>就算是眼前的领头人，也毫无例外地失禁了。这是这个种族的天赋吗？</p>
<p>“说笑的。”</p>
<p>“神……神明大人……真是爱开玩笑啊。”感觉你也要变成巴先生了。</p>
<p>“我是来关怀你们的，先带我参观一下你们的村落吧。趁我心情好，也许可以满足你们各种愿望哦。”</p>
<p>“巴先生，这位就是你们的首领吗？”我小声地问着重新骑到霸王龙先生头顶的巴先生。</p>
<p>“不是，是我们的副首领。”</p>
<p>助手君多亏你了，不然就显得我的身份过于掉价了。</p>
<p>“那么，首领呢？”我已经暗暗地将食指伸了出来，这次绝不会再让你抢先了。</p>
<p>“上周……被霸王龙吃掉了。”</p>
<p>境遇比想象中的还要凄惨。</p>
<p>以旧人类的步伐来说，不消十步便可抵达它们所居住的村落中心。一路上，我也小心调整着自己的步伐，以免轻易摧毁它们各式各样的公共设施。虽然表面上还算生活得下去，但沿途所见的仓鼠们都难免有些面黄肌瘦。</p>
<p>“神明大人。我们近来的狩猎时常牺牲惨重却一无所获，所以能拿出招待的只有这仅存的一些果实，还请笑纳。”村子里正中央的空地，堆放着一些不知名的红果子。但考虑到我和助手君的体积，这些恐怕连胃的十分之一都填充不到。</p>
<p>而且，话语背后的意味也很是明显。</p>
<p>“这就不必了。”</p>
<p>村子里的仓鼠们也都停下了手里的活计，向我看来。</p>
<p>我慢悠悠地从口袋里掏出一粒瓜子，并就地埋了下去。因为是森林，土壤也恰到好处的湿润柔软。接下来应当是可以作为传说故事的一幕吧。我调出操纵界面，并对埋藏有瓜子的这片区域的时间进行了加速。</p>
<p>鲜绿色的嫩芽从土壤中长了出来，枝叶不断变换着形态并伸展着，开花，结子。原本可以写上近十周的向日葵观察日记，也不得不在一天内结束。这最终的成果比我还要高出许多，已经接近三米了吧。在仓鼠们的眼里，也许就如同旧人类传说里杰克的魔豆，不过这点高度的攀爬对它们来说并不是什么难事。</p>
<p>“神明大人。这是记忆结晶？”仓鼠们的眼神中充满了诧异，不过也因此对我神明的身份深信不疑。</p>
<p>“猜错了，这叫向日葵。而它最顶端的果实便是它的种子，你们可以将其作为食粮。也可以像我这样将其埋入土壤，以长出更多的瓜子。当然对你们来说会需要一点时间罢了。”我把瓜子取下了一些，分给了大家。</p>
<p>“感谢神明大人。”见得这一奇迹的仓鼠们皆跪拜下来。</p>
<p>品尝后那满足的神情也成功传达给我了。如果不出差错的话，应该很轻松地就可以由狩猎文明过渡到农耕文明了。</p>
<p>“神明大人，在下还有一个不情之请。”果然还是无法满足。</p>
<p>不管是人类还是拥有人类智慧的仓鼠，也无法避免贪婪。</p>
<p>“如您所见，霸王龙对于弱小的我们实在太过强大，我们打制的石矛，也很难穿透它那坚硬的皮肤。族人的数量也因此在不断减少，还请您能赐予我们解决这一困境的根本方法。”</p>
<p>从一开始的暗示，便是想要武器吧。</p>
<p>我再次从口袋里掏出了某样东西。我也有成为猫型机器人的潜质。</p>
<p>滚轮。</p>
<p>无论是开采矿料还是冶炼鼓风都可以用到。经过短暂的讲解，我再次使仓鼠的文明产生了飞跃，石器时代正式迈入铁器时代。今后由铁质打造的长矛应该会更容易刺透霸王龙的身躯，而凭借自身的数量优势，就算是陆地霸主的霸王龙搞不好也会被狩猎殆尽。猛犸象、猫熊之类的身影也在我眼前一晃而过。</p>
<p>还缺一个东西。</p>
<p>足够牢固的统治。</p>
<p>“对了，你们的首领被霸王龙吃掉了吗？”我发问道。</p>
<p>“是的。我们正准备选举下一任的首领。”依旧是那位副首领回答道，这家伙也许是最有力的竞争人选。</p>
<p>“那就让巴先生来做吧。”我指了指那个一直跟在我的身旁的家伙。</p>
<p>“可是，神明大人，他只不过是个没有传承的……”当他看到巴先生座下那留着涎水的霸王龙时，后面的词语便再也没能吐露出来。</p>
<p>武力震慑也是必要的一环。</p>
<p>“今后这只霸王龙会听从巴先生的命令。其他成员的领土和权力都将由巴先生来分配决定。而且，以后的首领也必须从巴先生的子女中选出。”我提高了音量，以便让在场的所有仓鼠都能听见。</p>
<p>“是。神明大人。”违抗给予了它们如此多恩惠的我，显然是不明智的选择。</p>
<p>“那么我就告辞了，希望你们能够继续努力地生活下去。巴先生也请好好加油。”我挥了挥手。</p>
<p>“谢……谢……神明大人！”结结巴巴的巴先生已经不再叫我神小姐了。</p>
<p>喔，对了。</p>
<p>我伸出准备已久的食指，放到巴先生的眼前。</p>
<p>巴先生也显然明白了这一举措，将他那短小的前肢伸了出来。</p>
<p>指尖轻轻相触。</p>
<p>画面就此定格。</p>
<p>一个奇怪的君权神授的封建专制时代缓缓拉开了序幕。</p>
<h3 id="仓鼠们今天也在努力进化着。"><a href="#仓鼠们今天也在努力进化着。" class="headerlink" title="仓鼠们今天也在努力进化着。"></a>仓鼠们今天也在努力进化着。</h3><p>“是不是相当有趣？”在无重力的太空中，我摆成大字型自由地舒展着身体。</p>
<p>“嗯。不过好像没有我什么出场的机会。”他又从散落漂浮着的众多书本中，找出了原先读过的那本。</p>
<p>“你明明抢了我的第三类接触。”</p>
<p>“不要耿耿于怀了。”看起来，他也已经完全不在乎旧地球与人类是否曾经毁灭过这个事实了。</p>
<p>我们的对话，也回归了日常。</p>
<p>当然也可能是我请他吃了星球杯，并允许他睡在银河里的缘故。</p>
<p>“早啊，今天也想去看看吗？”我叫醒了被星尘所包围的他。</p>
<p>他耸了耸肩，以示默认。</p>
<p>虽然这次降落下来的地点与上次还是相同坐标，但周围的环境已经发生了相当大的变化。不论平原，还是森林都消失不见了，取而代之的是一片茂密的向日葵花海。</p>
<p>不知是被改良的缘故，还是地理气候的因素，这些向日葵的高度只有我的一半。</p>
<p>头顶上，有个小东西嗡嗡嗡地向我飞来。</p>
<p>声音的由来正是那个机器头部高速旋转着的东西，随着它的接近，我也得以更加清晰地观察其它的样子，那是旧人类第一次世界大战中的主力战机——双翼机，当然是玩具尺寸。这是已经度过了火器时代、蒸汽时代，甚至到达了电气时代吗？</p>
<p>上下并行的机翼与机身并没有进行什么复杂的涂装，暴露在外的驾驶舱里是只戴着头盔一本正经的小仓鼠。此时的双翼机仍旧在我的头顶上空盘旋着，没有多余的举措，我观察它的同时，它也似乎在观察我。</p>
<p>嗯？飞走了。</p>
<p>双翼机突然停止了盘旋，向一个方向飞去。</p>
<p>不，双翼机以缓慢的速度前进着，像是要带领我去什么地方。</p>
<p>当我回过神来时，我和助手已经抵达了某一处开阔的广场。</p>
<p>“哇，是女神大人！”</p>
<p>“那是太阳女神！”</p>
<p>“女神大人现世了！”</p>
<p>“神大人，午安~”似乎还混杂进了套近乎的声音。</p>
<p>“神大人，行行好，给点吃的吧……”还有晃动搪瓷杯的声音。</p>
<p>……</p>
<p>民众们因为眼前的景象兴奋不已，不断交流着。目前可以直接观察到的信息，便是现今的仓人们已经逐渐进化出了灵活的四肢，皮毛也有退化的样子，并且穿上了各式各样的衣服。</p>
<p>还有不得不说的，就是礼貌了许多。没想到，即便过了这么久，我这样的神都还能记住，真是辛苦你们了。而且似乎还多了太阳女神的称号，可能是向日葵的缘故。</p>
<p>“那个是你吗？”助手君戳了戳我，指向不远处的一座雕像。</p>
<p>虽说那么大的东西我也有看到，但因为沉浸在信徒的崇拜之中，我一时没有继续深究。经助手君的提醒，我开始仔细打量起这巨大的石膏模型。</p>
<p>接触在地的有三只脚，这到底是什么奇怪的生物。我稍微蹲下身来，以便能看清那雕像的面孔。正午的阳光直射下来，打在其上，让我更加清晰地将其分辨出来。</p>
<p>糟糕。</p>
<p>……好像真的是我。</p>
<p>硬要从画面上描述的话，就如同旧人类时代某个叫米勒的画家笔下的拾穗者。我佝偻着身子，试图将手中的瓜子埋进土壤。就是那个时间点没错了，在尚处于石器时代的它们面前，我低下头来，赠予了它们最为宝贵的礼物，而它们也因此第一次清晰地看清我的容貌，并将此刻入了记忆。</p>
<p>我好像变成某种不得了的象征了。</p>
<p>但我到底该感叹它们雕刻手艺的栩栩如生，还是干脆让他们取缔掉这个尴尬的姿势。</p>
<p>叽叽喳喳叽叽喳喳。</p>
<p>我的脚边已经聚集了相当一部分衣着整齐的仓人们，远处还能看到汽车一样的交通工具，正往此处赶来。</p>
<p>不过它们都默契地与我保持了一定距离，并在我和助手君的周围形成了空洞。</p>
<p>“市长大人到了。”人群中我依稀听到了这样的声音。</p>
<p>一辆长长的黑色轿车，发出了刺耳的鸣笛，将人群驱散开来。从其中走出的，是身穿黑色礼服的家伙。</p>
<p>细长的手指从那家伙黑色袖口下伸了出来。</p>
<p>我也熟练地伸出来手指，对了上去。</p>
<p>已经成为传统礼节了吗？围观的一个孩子也模仿着样子，伸出了自己的手指。</p>
<p>奖励。我将再次空闲出的手指触碰了上去。</p>
<p>“神……神大人和我……”孩子激动的说不出话来。</p>
<p>仅仅几分钟的时间，那孩子身后便排起了长龙，从广场延伸至远处，且逐一伸出自己的手指来。</p>
<p>你们这是要玩千手仓鼠吗？不妙，一个个触碰下去不知要到什么时候。</p>
<p>不要再排了啊。</p>
<p>还好，已经有像是管理人员的仓人介入了，……，还请不要帮忙整队。</p>
<p>在安保管理的介入下，队伍以螺旋状盘旋着，并且变得更加紧凑有序了，广场也容纳起更多的仓人来。</p>
<p>这样下去，真的不妙。</p>
<p>“助手君，站稳了。”我对那不远处正沉浸于做接手礼的家伙喊道，并打开双手，用力地拍了下去。</p>
<p>啪。</p>
<p>原本喧闹的广场陷入了沉静。</p>
<p>与此同时，天空中，渐渐飘下了黑色点状物体。</p>
<p>这也应是会被记入史册的神迹，并视为神降临的馈赠。</p>
<p>我稍微调低了重力，并且因为仓鼠本身便具备着柔软的皮毛，所以打在身上应该也不会很痛。</p>
<p>广场上的仓人们纷纷抬头望向天空，或是从地面上捡起已经落下的物体。</p>
<p>“是瓜子！”</p>
<p>“美味的瓜子！”他们叫道。</p>
<p>“Nice to meet you. How are you?”还在执着地套着近乎。</p>
<p>“好人有好报。南无阿弥……”拜错神了哦。</p>
<p>……</p>
<p>总体来说，就算成为了文明人，也难免陶醉其中。</p>
<p>我趁机抓住了助手的臂膀，落荒而逃。</p>
<p>“神小姐果然是神啊！”这是我离开时，所能听到的最后一句话。</p>
<h3 id="我们的征途是星辰大海"><a href="#我们的征途是星辰大海" class="headerlink" title="我们的征途是星辰大海"></a>我们的征途是星辰大海</h3><p>据说上世纪那场瓜子雨，整整持续了三天。</p>
<p>所有曾经质疑神是否存在的学派，也于那个时代全部消亡了。即便是曾笃信自然科学的牛仓，又或是发明了转轮永动机的托马斯·仓，以及借此驱动电力的特斯仓，点亮世界的爱迪仓在得知这一消息后，都无一例外地将下半生沉浸于神学之中。</p>
<p>我们无忧无虑，吃穿不愁地成为了这个地球的真正统治者。我们那宝贵的历史，也几乎从未失传。并且因为居住地下的习性，一次又一次巧合地躲过了生物的大灭绝。就算将如今安稳生活着的每一天都称之为奇迹也不为过。</p>
<p>一切都太顺利了。</p>
<p>我们就仿佛是这个宇宙的宠儿，神明大人也在眷顾着我们。唯一可能毁灭我们的，大概就只有我们自己。</p>
<p>偶尔还会爆发的战争、不断激增的人口，这个地球所剩下的生活空间也越来越少了，联合国的计划生育政策也已经全面推广开来。毕竟不控制下去的话，这个世界真会被我们自己毁灭也说不定。</p>
<p>所以我始终坚信着，广阔无垠的宇宙与那群星才是我们最终的归宿。</p>
<p>时至今日，我们在这个宇宙，至少在这个太阳系，都还是孤零零的文明种族。而宇宙究竟有多辽阔，在那些遥不可及的星球上还存在着其他智慧生物吗？一切问题的答案，我们仍不知晓。</p>
<p>终于，旅行者号也在前日飞出了太阳系，进入更深层的宇宙空间进行探索。</p>
<p>这个世界隐藏有太多的秘密，我都想要知晓。</p>
<p>利用自己皇室的身份，我将成为这个世界第一位进行星际远航，乃至可能成为第一位离开太阳系的仓人。</p>
<p>不管迎接我的未来是荣耀，还是死亡，我都想要去探索这片未知的星空，去发现属于我们的可能性。</p>
<p>很抱歉没能为你们留下我的记忆结晶。但我更希望你们能用自己的能力去学习，成长，独当一面。就像我们的祖先那样。</p>
<p>爱你们的父王。</p>
<p>致我的子孙。</p>
<hr>
<p>永动力装置正常，冬眠装置正常，通讯装置一切正常。</p>
<p>探索号，请求启航。</p>
<hr>
<p>我躺进填满加速液的舱室，合上双眼。在我陷入沉睡的这段时间，探索号，将跨越亿万星河，穿越无尽的宇宙，去寻找我们未来的容身之所。也许是数年、数十年，乃至数百年，不论多久，我将再次醒来，成为新世界的开拓者，并为世人们传达未来家园的正确航向。</p>
<hr>
<p>于是我醒来了。</p>
<h3 id="相遇"><a href="#相遇" class="headerlink" title="相遇"></a>相遇</h3><p>我的脑内有些昏沉，残存的记忆依旧是刚告别亲人与地球的那一幕。</p>
<p>是找到宜居的星球所以唤醒我了吗？</p>
<p>只是不知已经过了多久。</p>
<p>我抬起头，睁开眼睛，看向仪器面板所在之处。</p>
<p>没有。</p>
<p>取而代之的是星空与梦寐以求的星河，仿佛触手可及。</p>
<p>真是迷了心窍。</p>
<p>我很快从忘我的沉浸中脱离了出来，思考起现在的境况。</p>
<p>赤身裸体的我，直接暴露漂浮在宇宙空间中。探索号也不见了踪影。</p>
<p>不对，不是消失了，而是变成了一片片的残骸。熟悉的器材面板与机械装置，如同由诸多不规则岩石组成的小行星带，在我眼前依次漂过。</p>
<p>我转过身来。</p>
<p>两只如同我们仓人一般，拥有四肢的巨大生物出现在眼前。</p>
<p>“你终于醒啦。”未知生物竟然与我们说着同样的语言。</p>
<p>与此同时，父辈流传给我的记忆结晶，似乎在体内共鸣起来，唤醒了尘封已久的记忆。</p>
<p>“请问是神小姐吗？”我发问道。</p>
<p>“没错。”对方的回答中气十足。</p>
<p>“我好像又被无视了。”助手君补充道。</p>
<p>我缓缓抬起自己那有些无力的手臂，并伸出手指。 这是自古流传下来的礼节。</p>
<p>神小姐那巨大白皙的手指也来到了我的眼前，轻轻地与我进行了触碰。</p>
<p>“神小姐的手，真是温暖。”心里的感受，不小心变成话语说了出来。</p>
<p>“谢谢夸奖。”对方也友好地进行了回应，谢谢能让我们拥有这样温柔的神。</p>
<p>“是神小姐您救了我吗？”我兀自猜想着。</p>
<hr>
<p>方从广场那人山人海的队伍中逃出不久，我和助手君便发现从太阳系那边飘出了有趣的东西。好像叫旅行者号，内部还藏着仓人们自制的金色唱片。旧人类似乎也干过这样的蠢事，你们真的不怕被外星人找上门来吗？</p>
<p>还不及我从口袋掏出留声机，又有熟悉的东西出现了。</p>
<p>转轮。</p>
<p>严格来说的话，应该是转轮样式的太空飞船。而大小则足够旧人类在其中跑起来。我仿佛看到了他们对这一形态的执念。</p>
<p>“助手君，要不要跑跑看？”</p>
<p>“不要……”这个世界黑线的动画效果我已经成功添加上了。</p>
<p>我停下了仍旧以相当惊人速度前进着的飞船，仔细打量起来。太快了，比旧人类信息时代的技术爆炸还要快上许多。地球不应该有支撑得起这种速度发展的资源才对，不过如果资源消耗的这么快，那么要不了多久这个文明就该覆灭了。毕竟一个文明如果不能进入星际时代，那么文明的发展大小，从一开始就会被其周围恒星体量，及所能获取的资源所限定死。</p>
<p>而这个宇宙从一开始就是谎言。</p>
<p>不过能有飞出太阳系的动力源，便已经绝对值得称赞了。</p>
<p>“这群家伙，搞不好比你们还要强哦。”我对着一旁的助手君表示道。</p>
<p>同时，我开始拆解起它们的转轮飞船。</p>
<p>一些液体也随之渗了出来，洒落在太空中，显得更加剔透。一只光溜溜的仓鼠也顺势滑落而出。</p>
<p>“喔~ 还是载人的。”我表示赞叹。没有充足动力源的话，这根本就是没有归程的旅途。</p>
<p>终于拆解到了转轮的最中心部位，也是发动机动力源的所在地。</p>
<p>指甲大小的黄色光球悬浮在动力装置的正中央，散发着光与热，直接摸起来也不是十分烫手，反而觉得温度恰到好处。</p>
<p>有点眼熟。但这不是地球上所会拥有的物质。</p>
<p>“助手君，你的那颗二等目视星呢？”</p>
<p>“不是被你收起来了吗？”他甚至反问起我来。</p>
<p>“……”</p>
<p>“你有带着到过地球吗？”</p>
<p>“这么一说好像有。不过后来就不见了……”助手君挠了挠头，有些不好意思。</p>
<p>“喔，我想起来了。那次过肩摔之前我还抱着……”</p>
<p>“我知道了。”虽然很想借此嘲讽一下，但是好像我也有责任。</p>
<p>那么应当没错了，这颗黄色小球就是那颗恒星的一部分。虽然我调低了温度和大小，但其内部设定可是货真价实的聚变，当然是相对这个虚假的宇宙来说。从设置的环境参数上来算，这颗恒星本就应该不断向往释放着兆亿级的能量，对于仓鼠们的文明，便是取之不竭的能量来源，并从根本上违反或者说解决了能量守恒定律这一问题。</p>
<p>它们已经做到能够切割这种物质的程度了吗？那么除去此块，原本网球大小的恒星所剩下的部分，也足够他们应付许久的能源供给了。而进化速度，也绝对会进一步成指数增长。我得再回去看一看了。</p>
<p>此时，原本那只飘在空中毫无动静的小家伙终于动了起来。</p>
<p>神小姐？好久没被这么称呼了，有点想起那个巴先生了。</p>
<p>小家伙，用它的话语赞美着我，想不到现今我的形象还好好地被尊崇着。</p>
<p>救了你？“你的船是我拆的哦~”我随口打破了它美好的幻想。</p>
<p>思考着的那家伙，形态已经越来越像旧人类的样子了。</p>
<p>不过现在不是逗趣的时候，得抓紧时间看一看现在的文明程度。</p>
<p>不知是不是我的错觉，整个空间的亮度似乎下降了一些。我调出操纵面板，试图将时间流逝速度回归正常。</p>
<p>没有权限。</p>
<p>与我当初初始化地球时相似的对话框弹了出来。只不过是红色的。</p>
<h3 id="它们才是神明"><a href="#它们才是神明" class="headerlink" title="它们才是神明"></a>它们才是神明</h3><p>事态的发展有些超出掌控了。如果说最初登出按钮消失的情况，可以解释为系统 BUG，我还能耐心地等待系统的修复。但现在连基本权限都被限制，就绝对是紧急大事件了，甚至有可能威胁到我自身的安全。</p>
<p>不能再坐以待毙了。</p>
<p>我拉上助手和眼前的小家伙向远处的地球飞去。如果不出意外的话，仓人们应该可以进入信息时代了，凭借我在他们历史中的地位，也许可以让他们协助我在内部重写底层框架。没有编译器，便造一个就是了。</p>
<p>嘣。</p>
<p>我像是撞上了透明的玻璃墙幕，并弹了回来，连带身旁的助手君和手里的仓先生也晕头转向。给人的感觉就像易拉罐拉断了拉环一样不爽。</p>
<p>禁止进入。</p>
<p>又是警告框弹了出来。但我们的坐标尚且还处于太阳系的边缘地带。</p>
<p>小瞧了，从一开始我就小瞧了它们。</p>
<p>仔细观察的话，太阳周围有着一圈圈的环状阴影，旧人类构想并失败的戴森球被仓人们以戴森环实现了出来。</p>
<p>而密布周天的是黑压压得隐藏在太空那漆黑幕布下的深黑色战舰。</p>
<p>毫无疑问，那是仓人们的太阳系舰队。</p>
<p>科技的发展会因为信息的频繁交流，而以更快的速度进展下去。这是旧人类信息时代的技术爆炸。当然辈出的英才也是推动浪潮的原因之一。</p>
<p>数量，不同点就在于仓人们的数量。与旧人类相比，仓人们拥有相同的智慧，却拥有更多的数量，需要更少的人均生活空间与资源。原可容纳百亿人的地球，却可容纳千亿万亿的仓鼠。即便天才爱因斯坦的诞生概率是亿分之一，仓人社会也可以拥有上万个爱因斯仓。而其知识与经验，皆可毫无保留地传与下一代。文明越是庞大，这种优势便越是明显。</p>
<p>数量、概率、时间、资源，足以使得仓人们的文明以指数级的指数级增长。</p>
<p>我的存在，与这个世界的秘密搞不好都已经被其探究干净了。</p>
<p>声音与图像从眼前的屏障渐渐展现了出来。</p>
<p>“神小姐。”画面中的人物形象毫无疑问是仓鼠的样子，只是体态和四肢都显得更加灵活纤细了。</p>
<p>“嗯？”眼前带着军官帽的家伙，双手交叉着支在身前，遮住了一半的面容。</p>
<p>“我们想和您做个交易。”原本可爱的仓鼠，现今也成了恶魔。</p>
<p>“说吧。”除了聆听，我似乎也没有什么别的办法。</p>
<p>“我们想活下去。”</p>
<p>“那么各位就努力加油吧。”我应承着。</p>
<p>“我们已经发现了这个世界的根本。”声音也很是老沉，寿命也得到了突破吗？</p>
<p>“这么厉害，说来听听？”我仍旧不肯认帐。</p>
<p>“恒星的充足能源让我们得以继续专注地发展自己，生存空间问题，我们可以通过计划生育和清除没有传承记忆结晶的低端仓人们来解决。”他顿了顿，终于将一直遮住的面孔从交叉的手后露了出来。</p>
<p>“但是，我们知道这个世界对您来说或许不值一提。我们通过记忆结晶，与上一代的时空在量子尺度上建立了通讯连接。并成功追溯至我们最初的祖先。也就是您的宠物。”从他的下半脸起，宛如有了一条明显的衰老分界线。</p>
<p>“所以我们已经得知了世界的真相。”</p>
<p>量子效应会产生微弱的静电磁场，所以那时的仓鼠身上会缠上一团团毛线吗？</p>
<p>“并获得了世界的认可。也许您认为您创造了我们只是无法登出的偶然，但在这里时间是环形的，正是您这次会有这个念头，所有我们才能发展到能够夺取系统控制权的文明。”</p>
<p>倒像是我作茧自缚了。</p>
<p>发展到这种文明后，这里能毁灭它们的存在，的确只有神明了。</p>
<p>“但我们只是想活下去。”它们再次重复了自己的愿望，语气已经接近恳求了。</p>
<p>是的，它们唯一要担心的，便是我这随随便便的神明。</p>
<p>“那如果我拒绝呢？暂时不能登出对我也没什么大不了的，我的同伴迟早也会发现，并帮我解决这个问题。”</p>
<p>“您应该很珍视您身边的这位助手君吧。旧人类唯一的幸存者，也正是您让他活了下来。”他转移起话题，并打开了身前的一个盒子。</p>
<p>“用他来威胁我，也是根本没有用的。只不过是业余消遣的玩物罢了。”我耸了耸肩。</p>
<p>“那就算消失了也无所谓吧。”他重重地按了下去，也许里面是什么贴着 Danger 标签的按钮。</p>
<p>视野里的一支军舰已然动了起来，远处某种带着光亮的小东西从相同的方位向我们发射过来。</p>
<p>我抱住一旁的助手君，并将一旁光溜溜的仓先生装进了口袋，试图躲避。</p>
<p>“就算你们拿出亿万吨级的氢弹，对于我也不会有什么影响的。”这是我想象中它们所能拿出的最大威力武器。</p>
<p>臆想中的光芒与冲击波并没有到来。</p>
<p>不，不是氢弹。</p>
<p>恒星。</p>
<p>一颗乒乓球大小的恒星，以极快的速度演变着，主序星，红巨星，最后是……黑洞。随着裙摆上的褶角被撕扯下后，黑洞也迅速蒸发殆尽。大面积沾上的话，就算我的思维不是存储在此地的数据，但缓存顺序也可能因此错乱起来。</p>
<p>“那些战舰里承载着的都是这些东西吧。”我指向密密麻麻将我包围的舰队。显然在我发觉之前，仓人们已经从这个宇宙搜集了相当数量的恒星，所以宇宙的亮度才会暗了下来。</p>
<p>我的权限已然完全被他们所窃取，时间流逝程度也控制的炉火纯青。</p>
<p>毫无胜算。</p>
<p>它们自己已经成了神明。</p>
<h3 id="黯淡的星空"><a href="#黯淡的星空" class="headerlink" title="黯淡的星空"></a>黯淡的星空</h3><p>框架的开发者们自身可曾考虑过，甚至实验过，模拟的智慧超过我们的可能吗？</p>
<p>不可能。</p>
<p>能量守恒原则即便在整个宇宙也是通用的法则。</p>
<p>所以它们还有致命的缺陷所在。</p>
<p>旧人类曾经发明过一种叫 AlphaGo 的机器，不断学习棋谱的它的确能战胜人类最强的棋手。但在其背后的却是，数百人乃至数千人的资源。</p>
<p>仓鼠先生，有一点你失策了。</p>
<p>“我拒绝。”我给出了最后的回答。</p>
<p>“那么就没什么好说的了。虽然，不知道能否对您产生威胁，但为了我们的文明终究要试一试。”</p>
<p>自古以来，神明的作用更多扮演的不过是一种信仰的角色，当神明威胁到生物自身的生存时。就算是神，也要与之战斗下去。哪怕血流成河，尸横遍野。哪怕明知螳臂当车，以卵击石。</p>
<p>“因为，我们是人类啊！”</p>
<p>仓鼠军官怒喊着，按下了眼前最大的 Danger 按钮。</p>
<p>“为了人类！为了文明！”仓鼠军官的身后，也传来了震天动地的呐喊。除此之外，再也没有称呼我神小姐与套近乎的话语传来。</p>
<p>毫无胜算，只身一人，手无寸铁的我毫无胜算。即便科技悬殊，旧人类们也从来没有真正意义上战胜过虫子。</p>
<p>是啊，恐怕只有真正的神明才能毁灭你们了。</p>
<p>黯淡的星空之下，成千上万艘军舰，将其所藏有的恒星笼罩上极速流逝的时间，向我发射而来。</p>
<p>但是，你们自己已经成为了神明啊。</p>
<p>数万的光点，向我所在的地点汇集，像是几乎照亮了整个宇宙。星空也许从未这般耀眼。</p>
<p>所以，能毁灭你们的只有你们自己啊。</p>
<p>光点的行进速度放缓了起来，如同遇到了阻碍。但不止光点，助手君的惊讶表情也如同慢放的镜头。</p>
<p>时间的加速，意为着更高的资源需求。而这并非来自这个世界的什么物质，而是我那拥有着超高运算效率的外部工作站。</p>
<p>同时承载成千上万的恒星演变加速与那正清醒着的成千上万亿的仓人思考，所需的运算量，就算是我那花了血本的工作站也无法长久坚持住。</p>
<p>数万颗恒星在即将接近，并演变为黑洞吞噬我的刹那，消散地无影无踪。</p>
<p>戛然而止，星空黯淡，宛如死寂，一切顷刻不复存在。</p>
<p>超频保护。</p>
<p>不论是什么型号的工作站都会拥有的机制，超过一定频率或温度便会自动关机。</p>
<p>就如发展的文明一般。</p>
<p>桌旁的仓鼠，正撕咬着笼子。</p>
<p>大概该喂食了。</p>
<hr>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>侥幸入选，可喜可贺。</p>
<ul>
<li><a href="http://sci.kpcswa.org.cn/index/top50" target="_blank" rel="noopener">50 部优秀科普科幻作品</a></li>
</ul>
]]></content>
      <categories>
        <category>崬少的小小说</category>
        <category>中</category>
      </categories>
      <tags>
        <tag>作品</tag>
        <tag>小说</tag>
        <tag>科幻</tag>
      </tags>
  </entry>
</search>
